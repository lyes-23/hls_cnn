// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Lenet_HW_Lenet_HW,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010i-clg225-1L,HLS_INPUT_CLOCK=50.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=35.985380,HLS_SYN_LAT=187789,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=0,HLS_SYN_FF=10105,HLS_SYN_LUT=14807,HLS_VERSION=2023_2}" *)

module Lenet_HW (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Layer1_Neurons_stream_TDATA,
        Layer1_Neurons_stream_TVALID,
        Layer1_Neurons_stream_TREADY,
        Layer1_Weights_stream_TDATA,
        Layer1_Weights_stream_TVALID,
        Layer1_Weights_stream_TREADY,
        Layer2_Weights_stream_TDATA,
        Layer2_Weights_stream_TVALID,
        Layer2_Weights_stream_TREADY,
        Layer3_Weights_stream_TDATA,
        Layer3_Weights_stream_TVALID,
        Layer3_Weights_stream_TREADY,
        Layer4_Neurons_stream_TDATA,
        Layer4_Neurons_stream_TVALID,
        Layer4_Neurons_stream_TREADY
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Layer1_Neurons_stream_TDATA;
input   Layer1_Neurons_stream_TVALID;
output   Layer1_Neurons_stream_TREADY;
input  [31:0] Layer1_Weights_stream_TDATA;
input   Layer1_Weights_stream_TVALID;
output   Layer1_Weights_stream_TREADY;
input  [31:0] Layer2_Weights_stream_TDATA;
input   Layer2_Weights_stream_TVALID;
output   Layer2_Weights_stream_TREADY;
input  [31:0] Layer3_Weights_stream_TDATA;
input   Layer3_Weights_stream_TVALID;
output   Layer3_Weights_stream_TREADY;
output  [31:0] Layer4_Neurons_stream_TDATA;
output   Layer4_Neurons_stream_TVALID;
input   Layer4_Neurons_stream_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Layer3_Weights_stream_TDATA_blk_n;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln109_fu_197_p2;
reg    Layer4_Neurons_stream_TDATA_blk_n;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire   [63:0] grp_fu_163_p2;
reg   [63:0] reg_169;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state37;
reg   [10:0] phi_mul_load_reg_252;
reg   [31:0] Layer3_Weights_stream_read_reg_260;
wire   [31:0] somme_fu_219_p1;
reg   [31:0] somme_reg_265;
wire    ap_CS_fsm_state7;
wire   [63:0] conv_i_fu_160_p1;
reg   [63:0] conv_i_reg_270;
wire    ap_CS_fsm_state9;
wire   [63:0] grp_generic_tanh_double_s_fu_146_ap_return;
reg   [63:0] tmp_reg_275;
wire    ap_CS_fsm_state35;
reg   [9:0] Layer2_Neurons_CPU_address0;
reg    Layer2_Neurons_CPU_ce0;
reg    Layer2_Neurons_CPU_we0;
wire   [31:0] Layer2_Neurons_CPU_q0;
reg    Layer2_Neurons_CPU_ce1;
wire   [31:0] Layer2_Neurons_CPU_q1;
reg   [10:0] Layer3_Neurons_CPU_address0;
reg    Layer3_Neurons_CPU_ce0;
reg    Layer3_Neurons_CPU_we0;
wire   [31:0] Layer3_Neurons_CPU_q0;
wire    grp_calculateLayer2_fu_107_ap_start;
wire    grp_calculateLayer2_fu_107_ap_done;
wire    grp_calculateLayer2_fu_107_ap_idle;
wire    grp_calculateLayer2_fu_107_ap_ready;
wire    grp_calculateLayer2_fu_107_Layer1_Neurons_stream_TREADY;
wire    grp_calculateLayer2_fu_107_Layer1_Weights_stream_TREADY;
wire   [9:0] grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_address0;
wire    grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_ce0;
wire    grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_we0;
wire   [31:0] grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_d0;
wire   [31:0] grp_calculateLayer2_fu_107_grp_fu_285_p_din0;
wire   [31:0] grp_calculateLayer2_fu_107_grp_fu_285_p_din1;
wire   [1:0] grp_calculateLayer2_fu_107_grp_fu_285_p_opcode;
wire    grp_calculateLayer2_fu_107_grp_fu_285_p_ce;
wire   [31:0] grp_calculateLayer2_fu_107_grp_fu_289_p_din0;
wire   [31:0] grp_calculateLayer2_fu_107_grp_fu_289_p_din1;
wire    grp_calculateLayer2_fu_107_grp_fu_289_p_ce;
wire   [63:0] grp_calculateLayer2_fu_107_grp_fu_163_p_din0;
wire   [63:0] grp_calculateLayer2_fu_107_grp_fu_163_p_din1;
wire    grp_calculateLayer2_fu_107_grp_fu_163_p_ce;
wire   [63:0] grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_din1;
wire    grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_ce;
wire    grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_start;
wire    grp_calculateLayer3_fu_122_ap_start;
wire    grp_calculateLayer3_fu_122_ap_done;
wire    grp_calculateLayer3_fu_122_ap_idle;
wire    grp_calculateLayer3_fu_122_ap_ready;
wire   [9:0] grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_address0;
wire    grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_ce0;
wire   [9:0] grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_address1;
wire    grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_ce1;
wire    grp_calculateLayer3_fu_122_Layer2_Weights_stream_TREADY;
wire   [10:0] grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_address0;
wire    grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_ce0;
wire    grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_we0;
wire   [31:0] grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_d0;
wire   [31:0] grp_calculateLayer3_fu_122_grp_fu_285_p_din0;
wire   [31:0] grp_calculateLayer3_fu_122_grp_fu_285_p_din1;
wire   [1:0] grp_calculateLayer3_fu_122_grp_fu_285_p_opcode;
wire    grp_calculateLayer3_fu_122_grp_fu_285_p_ce;
wire   [31:0] grp_calculateLayer3_fu_122_grp_fu_289_p_din0;
wire   [31:0] grp_calculateLayer3_fu_122_grp_fu_289_p_din1;
wire    grp_calculateLayer3_fu_122_grp_fu_289_p_ce;
wire   [63:0] grp_calculateLayer3_fu_122_grp_fu_163_p_din0;
wire   [63:0] grp_calculateLayer3_fu_122_grp_fu_163_p_din1;
wire    grp_calculateLayer3_fu_122_grp_fu_163_p_ce;
wire   [63:0] grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_din1;
wire    grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_ce;
wire    grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_start;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_done;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_idle;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_ready;
wire   [10:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Neurons_CPU_address0;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Neurons_CPU_ce0;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Weights_stream_TREADY;
wire   [31:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_somme_52_out;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_somme_52_out_ap_vld;
wire   [31:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_din0;
wire   [31:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_din1;
wire   [1:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_opcode;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_ce;
wire   [31:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_din0;
wire   [31:0] grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_din1;
wire    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_ce;
reg    grp_generic_tanh_double_s_fu_146_ap_start;
wire    grp_generic_tanh_double_s_fu_146_ap_done;
wire    grp_generic_tanh_double_s_fu_146_ap_idle;
wire    grp_generic_tanh_double_s_fu_146_ap_ready;
reg    grp_generic_tanh_double_s_fu_146_ap_ce;
reg   [63:0] grp_generic_tanh_double_s_fu_146_t_in;
reg    grp_calculateLayer2_fu_107_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_calculateLayer3_fu_122_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start_reg;
wire    ap_CS_fsm_state8;
reg    grp_generic_tanh_double_s_fu_146_ap_start_reg;
reg   [38:0] ap_NS_fsm;
wire    ap_NS_fsm_state12;
wire    ap_CS_fsm_state12;
reg   [10:0] phi_mul_fu_74;
wire   [10:0] next_mul_fu_191_p2;
wire    regslice_both_Layer4_Neurons_stream_U_apdone_blk;
reg    ap_block_state6;
reg   [6:0] i_fu_78;
wire   [6:0] add_ln109_fu_203_p2;
reg   [63:0] grp_fu_163_p0;
reg   [63:0] grp_fu_163_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state36;
wire   [31:0] conv24_i_fu_157_p1;
reg    grp_fu_163_ce;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] grp_fu_285_p0;
reg   [31:0] grp_fu_285_p1;
reg    grp_fu_285_ce;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] grp_fu_289_p0;
reg   [31:0] grp_fu_289_p1;
reg    grp_fu_289_ce;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    regslice_both_Layer1_Neurons_stream_U_apdone_blk;
wire   [31:0] Layer1_Neurons_stream_TDATA_int_regslice;
wire    Layer1_Neurons_stream_TVALID_int_regslice;
reg    Layer1_Neurons_stream_TREADY_int_regslice;
wire    regslice_both_Layer1_Neurons_stream_U_ack_in;
wire    regslice_both_Layer1_Weights_stream_U_apdone_blk;
wire   [31:0] Layer1_Weights_stream_TDATA_int_regslice;
wire    Layer1_Weights_stream_TVALID_int_regslice;
reg    Layer1_Weights_stream_TREADY_int_regslice;
wire    regslice_both_Layer1_Weights_stream_U_ack_in;
wire    regslice_both_Layer2_Weights_stream_U_apdone_blk;
wire   [31:0] Layer2_Weights_stream_TDATA_int_regslice;
wire    Layer2_Weights_stream_TVALID_int_regslice;
reg    Layer2_Weights_stream_TREADY_int_regslice;
wire    regslice_both_Layer2_Weights_stream_U_ack_in;
wire    regslice_both_Layer3_Weights_stream_U_apdone_blk;
wire   [31:0] Layer3_Weights_stream_TDATA_int_regslice;
wire    Layer3_Weights_stream_TVALID_int_regslice;
reg    Layer3_Weights_stream_TREADY_int_regslice;
wire    regslice_both_Layer3_Weights_stream_U_ack_in;
wire   [31:0] Layer4_Neurons_stream_TDATA_int_regslice;
reg    Layer4_Neurons_stream_TVALID_int_regslice;
wire    Layer4_Neurons_stream_TREADY_int_regslice;
wire    regslice_both_Layer4_Neurons_stream_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 grp_calculateLayer2_fu_107_ap_start_reg = 1'b0;
#0 grp_calculateLayer3_fu_122_ap_start_reg = 1'b0;
#0 grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start_reg = 1'b0;
#0 grp_generic_tanh_double_s_fu_146_ap_start_reg = 1'b0;
#0 phi_mul_fu_74 = 11'd0;
#0 i_fu_78 = 7'd0;
end

Lenet_HW_Layer2_Neurons_CPU_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
Layer2_Neurons_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Layer2_Neurons_CPU_address0),
    .ce0(Layer2_Neurons_CPU_ce0),
    .we0(Layer2_Neurons_CPU_we0),
    .d0(grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_d0),
    .q0(Layer2_Neurons_CPU_q0),
    .address1(grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_address1),
    .ce1(Layer2_Neurons_CPU_ce1),
    .q1(Layer2_Neurons_CPU_q1)
);

Lenet_HW_Layer3_Neurons_CPU_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1250 ),
    .AddressWidth( 11 ))
Layer3_Neurons_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Layer3_Neurons_CPU_address0),
    .ce0(Layer3_Neurons_CPU_ce0),
    .we0(Layer3_Neurons_CPU_we0),
    .d0(grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_d0),
    .q0(Layer3_Neurons_CPU_q0)
);

Lenet_HW_calculateLayer2 grp_calculateLayer2_fu_107(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_calculateLayer2_fu_107_ap_start),
    .ap_done(grp_calculateLayer2_fu_107_ap_done),
    .ap_idle(grp_calculateLayer2_fu_107_ap_idle),
    .ap_ready(grp_calculateLayer2_fu_107_ap_ready),
    .Layer1_Neurons_stream_TVALID(Layer1_Neurons_stream_TVALID_int_regslice),
    .Layer1_Weights_stream_TVALID(Layer1_Weights_stream_TVALID_int_regslice),
    .Layer1_Neurons_stream_TDATA(Layer1_Neurons_stream_TDATA_int_regslice),
    .Layer1_Neurons_stream_TREADY(grp_calculateLayer2_fu_107_Layer1_Neurons_stream_TREADY),
    .Layer1_Weights_stream_TDATA(Layer1_Weights_stream_TDATA_int_regslice),
    .Layer1_Weights_stream_TREADY(grp_calculateLayer2_fu_107_Layer1_Weights_stream_TREADY),
    .Layer2_Neurons_CPU_address0(grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_address0),
    .Layer2_Neurons_CPU_ce0(grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_ce0),
    .Layer2_Neurons_CPU_we0(grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_we0),
    .Layer2_Neurons_CPU_d0(grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_d0),
    .grp_fu_285_p_din0(grp_calculateLayer2_fu_107_grp_fu_285_p_din0),
    .grp_fu_285_p_din1(grp_calculateLayer2_fu_107_grp_fu_285_p_din1),
    .grp_fu_285_p_opcode(grp_calculateLayer2_fu_107_grp_fu_285_p_opcode),
    .grp_fu_285_p_dout0(grp_fu_285_p2),
    .grp_fu_285_p_ce(grp_calculateLayer2_fu_107_grp_fu_285_p_ce),
    .grp_fu_289_p_din0(grp_calculateLayer2_fu_107_grp_fu_289_p_din0),
    .grp_fu_289_p_din1(grp_calculateLayer2_fu_107_grp_fu_289_p_din1),
    .grp_fu_289_p_dout0(grp_fu_289_p2),
    .grp_fu_289_p_ce(grp_calculateLayer2_fu_107_grp_fu_289_p_ce),
    .grp_fu_163_p_din0(grp_calculateLayer2_fu_107_grp_fu_163_p_din0),
    .grp_fu_163_p_din1(grp_calculateLayer2_fu_107_grp_fu_163_p_din1),
    .grp_fu_163_p_dout0(grp_fu_163_p2),
    .grp_fu_163_p_ce(grp_calculateLayer2_fu_107_grp_fu_163_p_ce),
    .grp_generic_tanh_double_s_fu_146_p_din1(grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_din1),
    .grp_generic_tanh_double_s_fu_146_p_dout0(grp_generic_tanh_double_s_fu_146_ap_return),
    .grp_generic_tanh_double_s_fu_146_p_ce(grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_ce),
    .grp_generic_tanh_double_s_fu_146_p_start(grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_start),
    .grp_generic_tanh_double_s_fu_146_p_ready(grp_generic_tanh_double_s_fu_146_ap_ready),
    .grp_generic_tanh_double_s_fu_146_p_done(grp_generic_tanh_double_s_fu_146_ap_done),
    .grp_generic_tanh_double_s_fu_146_p_idle(grp_generic_tanh_double_s_fu_146_ap_idle)
);

Lenet_HW_calculateLayer3 grp_calculateLayer3_fu_122(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_calculateLayer3_fu_122_ap_start),
    .ap_done(grp_calculateLayer3_fu_122_ap_done),
    .ap_idle(grp_calculateLayer3_fu_122_ap_idle),
    .ap_ready(grp_calculateLayer3_fu_122_ap_ready),
    .Layer2_Weights_stream_TVALID(Layer2_Weights_stream_TVALID_int_regslice),
    .Layer2_Neurons_CPU_address0(grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_address0),
    .Layer2_Neurons_CPU_ce0(grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_ce0),
    .Layer2_Neurons_CPU_q0(Layer2_Neurons_CPU_q0),
    .Layer2_Neurons_CPU_address1(grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_address1),
    .Layer2_Neurons_CPU_ce1(grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_ce1),
    .Layer2_Neurons_CPU_q1(Layer2_Neurons_CPU_q1),
    .Layer2_Weights_stream_TDATA(Layer2_Weights_stream_TDATA_int_regslice),
    .Layer2_Weights_stream_TREADY(grp_calculateLayer3_fu_122_Layer2_Weights_stream_TREADY),
    .Layer3_Neurons_CPU_address0(grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_address0),
    .Layer3_Neurons_CPU_ce0(grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_ce0),
    .Layer3_Neurons_CPU_we0(grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_we0),
    .Layer3_Neurons_CPU_d0(grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_d0),
    .grp_fu_285_p_din0(grp_calculateLayer3_fu_122_grp_fu_285_p_din0),
    .grp_fu_285_p_din1(grp_calculateLayer3_fu_122_grp_fu_285_p_din1),
    .grp_fu_285_p_opcode(grp_calculateLayer3_fu_122_grp_fu_285_p_opcode),
    .grp_fu_285_p_dout0(grp_fu_285_p2),
    .grp_fu_285_p_ce(grp_calculateLayer3_fu_122_grp_fu_285_p_ce),
    .grp_fu_289_p_din0(grp_calculateLayer3_fu_122_grp_fu_289_p_din0),
    .grp_fu_289_p_din1(grp_calculateLayer3_fu_122_grp_fu_289_p_din1),
    .grp_fu_289_p_dout0(grp_fu_289_p2),
    .grp_fu_289_p_ce(grp_calculateLayer3_fu_122_grp_fu_289_p_ce),
    .grp_fu_163_p_din0(grp_calculateLayer3_fu_122_grp_fu_163_p_din0),
    .grp_fu_163_p_din1(grp_calculateLayer3_fu_122_grp_fu_163_p_din1),
    .grp_fu_163_p_dout0(grp_fu_163_p2),
    .grp_fu_163_p_ce(grp_calculateLayer3_fu_122_grp_fu_163_p_ce),
    .grp_generic_tanh_double_s_fu_146_p_din1(grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_din1),
    .grp_generic_tanh_double_s_fu_146_p_dout0(grp_generic_tanh_double_s_fu_146_ap_return),
    .grp_generic_tanh_double_s_fu_146_p_ce(grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_ce),
    .grp_generic_tanh_double_s_fu_146_p_start(grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_start),
    .grp_generic_tanh_double_s_fu_146_p_ready(grp_generic_tanh_double_s_fu_146_ap_ready),
    .grp_generic_tanh_double_s_fu_146_p_done(grp_generic_tanh_double_s_fu_146_ap_done),
    .grp_generic_tanh_double_s_fu_146_p_idle(grp_generic_tanh_double_s_fu_146_ap_idle)
);

Lenet_HW_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4 grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start),
    .ap_done(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_done),
    .ap_idle(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_idle),
    .ap_ready(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_ready),
    .Layer3_Weights_stream_TVALID(Layer3_Weights_stream_TVALID_int_regslice),
    .somme(somme_reg_265),
    .phi_mul(phi_mul_load_reg_252),
    .Layer3_Neurons_CPU_address0(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Neurons_CPU_address0),
    .Layer3_Neurons_CPU_ce0(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Neurons_CPU_ce0),
    .Layer3_Neurons_CPU_q0(Layer3_Neurons_CPU_q0),
    .Layer3_Weights_stream_TDATA(Layer3_Weights_stream_TDATA_int_regslice),
    .Layer3_Weights_stream_TREADY(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Weights_stream_TREADY),
    .somme_52_out(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_somme_52_out),
    .somme_52_out_ap_vld(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_somme_52_out_ap_vld),
    .grp_fu_285_p_din0(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_din0),
    .grp_fu_285_p_din1(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_din1),
    .grp_fu_285_p_opcode(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_opcode),
    .grp_fu_285_p_dout0(grp_fu_285_p2),
    .grp_fu_285_p_ce(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_ce),
    .grp_fu_289_p_din0(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_din0),
    .grp_fu_289_p_din1(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_din1),
    .grp_fu_289_p_dout0(grp_fu_289_p2),
    .grp_fu_289_p_ce(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_ce)
);

Lenet_HW_generic_tanh_double_s grp_generic_tanh_double_s_fu_146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_generic_tanh_double_s_fu_146_ap_start),
    .ap_done(grp_generic_tanh_double_s_fu_146_ap_done),
    .ap_idle(grp_generic_tanh_double_s_fu_146_ap_idle),
    .ap_ready(grp_generic_tanh_double_s_fu_146_ap_ready),
    .ap_ce(grp_generic_tanh_double_s_fu_146_ap_ce),
    .t_in(grp_generic_tanh_double_s_fu_146_t_in),
    .ap_return(grp_generic_tanh_double_s_fu_146_ap_return)
);

Lenet_HW_fptrunc_64ns_32_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_1_no_dsp_1_U65(
    .din0(reg_169),
    .dout(conv24_i_fu_157_p1)
);

Lenet_HW_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U66(
    .din0(grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_somme_52_out),
    .dout(conv_i_fu_160_p1)
);

Lenet_HW_dmul_64ns_64ns_64_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_2_max_dsp_1_U67(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_163_p0),
    .din1(grp_fu_163_p1),
    .ce(grp_fu_163_ce),
    .dout(grp_fu_163_p2)
);

Lenet_HW_fadd_32ns_32ns_32_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_2_full_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_285_p0),
    .din1(grp_fu_285_p1),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

Lenet_HW_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U69(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_289_p0),
    .din1(grp_fu_289_p1),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

Lenet_HW_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Layer1_Neurons_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Layer1_Neurons_stream_TDATA),
    .vld_in(Layer1_Neurons_stream_TVALID),
    .ack_in(regslice_both_Layer1_Neurons_stream_U_ack_in),
    .data_out(Layer1_Neurons_stream_TDATA_int_regslice),
    .vld_out(Layer1_Neurons_stream_TVALID_int_regslice),
    .ack_out(Layer1_Neurons_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_Layer1_Neurons_stream_U_apdone_blk)
);

Lenet_HW_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Layer1_Weights_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Layer1_Weights_stream_TDATA),
    .vld_in(Layer1_Weights_stream_TVALID),
    .ack_in(regslice_both_Layer1_Weights_stream_U_ack_in),
    .data_out(Layer1_Weights_stream_TDATA_int_regslice),
    .vld_out(Layer1_Weights_stream_TVALID_int_regslice),
    .ack_out(Layer1_Weights_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_Layer1_Weights_stream_U_apdone_blk)
);

Lenet_HW_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Layer2_Weights_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Layer2_Weights_stream_TDATA),
    .vld_in(Layer2_Weights_stream_TVALID),
    .ack_in(regslice_both_Layer2_Weights_stream_U_ack_in),
    .data_out(Layer2_Weights_stream_TDATA_int_regslice),
    .vld_out(Layer2_Weights_stream_TVALID_int_regslice),
    .ack_out(Layer2_Weights_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_Layer2_Weights_stream_U_apdone_blk)
);

Lenet_HW_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Layer3_Weights_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Layer3_Weights_stream_TDATA),
    .vld_in(Layer3_Weights_stream_TVALID),
    .ack_in(regslice_both_Layer3_Weights_stream_U_ack_in),
    .data_out(Layer3_Weights_stream_TDATA_int_regslice),
    .vld_out(Layer3_Weights_stream_TVALID_int_regslice),
    .ack_out(Layer3_Weights_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_Layer3_Weights_stream_U_apdone_blk)
);

Lenet_HW_regslice_both #(
    .DataWidth( 32 ))
regslice_both_Layer4_Neurons_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(Layer4_Neurons_stream_TDATA_int_regslice),
    .vld_in(Layer4_Neurons_stream_TVALID_int_regslice),
    .ack_in(Layer4_Neurons_stream_TREADY_int_regslice),
    .data_out(Layer4_Neurons_stream_TDATA),
    .vld_out(regslice_both_Layer4_Neurons_stream_U_vld_out),
    .ack_out(Layer4_Neurons_stream_TREADY),
    .apdone_blk(regslice_both_Layer4_Neurons_stream_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_ready == 1'b1)) begin
            grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_calculateLayer2_fu_107_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_calculateLayer2_fu_107_ap_start_reg <= 1'b1;
        end else if ((grp_calculateLayer2_fu_107_ap_ready == 1'b1)) begin
            grp_calculateLayer2_fu_107_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_calculateLayer3_fu_122_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_calculateLayer3_fu_122_ap_start_reg <= 1'b1;
        end else if ((grp_calculateLayer3_fu_122_ap_ready == 1'b1)) begin
            grp_calculateLayer3_fu_122_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_generic_tanh_double_s_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state12) & (1'b1 == ap_CS_fsm_state11))) begin
            grp_generic_tanh_double_s_fu_146_ap_start_reg <= 1'b1;
        end else if ((grp_generic_tanh_double_s_fu_146_ap_ready == 1'b1)) begin
            grp_generic_tanh_double_s_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_78 <= 7'd0;
    end else if (((icmp_ln109_fu_197_p2 == 1'd0) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        i_fu_78 <= add_ln109_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_fu_74 <= 11'd0;
    end else if (((icmp_ln109_fu_197_p2 == 1'd0) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_fu_74 <= next_mul_fu_191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Layer3_Weights_stream_read_reg_260 <= Layer3_Weights_stream_TDATA_int_regslice;
        phi_mul_load_reg_252 <= phi_mul_fu_74;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_i_reg_270 <= conv_i_fu_160_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_169 <= grp_fu_163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        somme_reg_265 <= somme_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_reg_275 <= grp_generic_tanh_double_s_fu_146_ap_return;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer1_Neurons_stream_TREADY_int_regslice = grp_calculateLayer2_fu_107_Layer1_Neurons_stream_TREADY;
    end else begin
        Layer1_Neurons_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer1_Weights_stream_TREADY_int_regslice = grp_calculateLayer2_fu_107_Layer1_Weights_stream_TREADY;
    end else begin
        Layer1_Weights_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer2_Neurons_CPU_address0 = grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer2_Neurons_CPU_address0 = grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_address0;
    end else begin
        Layer2_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer2_Neurons_CPU_ce0 = grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer2_Neurons_CPU_ce0 = grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_ce0;
    end else begin
        Layer2_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer2_Neurons_CPU_ce1 = grp_calculateLayer3_fu_122_Layer2_Neurons_CPU_ce1;
    end else begin
        Layer2_Neurons_CPU_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer2_Neurons_CPU_we0 = grp_calculateLayer2_fu_107_Layer2_Neurons_CPU_we0;
    end else begin
        Layer2_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer2_Weights_stream_TREADY_int_regslice = grp_calculateLayer3_fu_122_Layer2_Weights_stream_TREADY;
    end else begin
        Layer2_Weights_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Layer3_Neurons_CPU_address0 = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Neurons_CPU_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer3_Neurons_CPU_address0 = grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_address0;
    end else begin
        Layer3_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Layer3_Neurons_CPU_ce0 = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Neurons_CPU_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer3_Neurons_CPU_ce0 = grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_ce0;
    end else begin
        Layer3_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer3_Neurons_CPU_we0 = grp_calculateLayer3_fu_122_Layer3_Neurons_CPU_we0;
    end else begin
        Layer3_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        Layer3_Weights_stream_TDATA_blk_n = Layer3_Weights_stream_TVALID_int_regslice;
    end else begin
        Layer3_Weights_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_197_p2 == 1'd0) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        Layer3_Weights_stream_TREADY_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Layer3_Weights_stream_TREADY_int_regslice = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_Layer3_Weights_stream_TREADY;
    end else begin
        Layer3_Weights_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        Layer4_Neurons_stream_TDATA_blk_n = Layer4_Neurons_stream_TREADY_int_regslice;
    end else begin
        Layer4_Neurons_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (1'b1 == Layer4_Neurons_stream_TREADY_int_regslice))) begin
        Layer4_Neurons_stream_TVALID_int_regslice = 1'b1;
    end else begin
        Layer4_Neurons_stream_TVALID_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == Layer4_Neurons_stream_TREADY_int_regslice)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == Layer4_Neurons_stream_TREADY_int_regslice)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_calculateLayer2_fu_107_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_calculateLayer3_fu_122_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state6)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln109_fu_197_p2 == 1'd1) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_197_p2 == 1'd1) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_163_ce = grp_calculateLayer3_fu_122_grp_fu_163_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_163_ce = grp_calculateLayer2_fu_107_grp_fu_163_p_ce;
    end else begin
        grp_fu_163_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_163_p0 = grp_calculateLayer3_fu_122_grp_fu_163_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_163_p0 = grp_calculateLayer2_fu_107_grp_fu_163_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_163_p0 = tmp_reg_275;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_163_p0 = conv_i_reg_270;
    end else begin
        grp_fu_163_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_163_p1 = grp_calculateLayer3_fu_122_grp_fu_163_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_163_p1 = grp_calculateLayer2_fu_107_grp_fu_163_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_163_p1 = 64'd4610406545773251946;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_163_p1 = 64'd4604180019078461075;
    end else begin
        grp_fu_163_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_285_ce = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_285_ce = grp_calculateLayer3_fu_122_grp_fu_285_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_285_ce = grp_calculateLayer2_fu_107_grp_fu_285_p_ce;
    end else begin
        grp_fu_285_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_285_p0 = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_285_p0 = grp_calculateLayer3_fu_122_grp_fu_285_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_285_p0 = grp_calculateLayer2_fu_107_grp_fu_285_p_din0;
    end else begin
        grp_fu_285_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_285_p1 = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_285_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_285_p1 = grp_calculateLayer3_fu_122_grp_fu_285_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_285_p1 = grp_calculateLayer2_fu_107_grp_fu_285_p_din1;
    end else begin
        grp_fu_285_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_289_ce = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_289_ce = grp_calculateLayer3_fu_122_grp_fu_289_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_289_ce = grp_calculateLayer2_fu_107_grp_fu_289_p_ce;
    end else begin
        grp_fu_289_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_289_p0 = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_289_p0 = grp_calculateLayer3_fu_122_grp_fu_289_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_289_p0 = grp_calculateLayer2_fu_107_grp_fu_289_p_din0;
    end else begin
        grp_fu_289_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_289_p1 = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_grp_fu_289_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_289_p1 = grp_calculateLayer3_fu_122_grp_fu_289_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_289_p1 = grp_calculateLayer2_fu_107_grp_fu_289_p_din1;
    end else begin
        grp_fu_289_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_generic_tanh_double_s_fu_146_ap_ce = grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_generic_tanh_double_s_fu_146_ap_ce = grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_ce;
    end else begin
        grp_generic_tanh_double_s_fu_146_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_generic_tanh_double_s_fu_146_ap_start = grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_start;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_generic_tanh_double_s_fu_146_ap_start = grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_start;
    end else begin
        grp_generic_tanh_double_s_fu_146_ap_start = grp_generic_tanh_double_s_fu_146_ap_start_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_generic_tanh_double_s_fu_146_t_in = grp_calculateLayer3_fu_122_grp_generic_tanh_double_s_fu_146_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_generic_tanh_double_s_fu_146_t_in = grp_calculateLayer2_fu_107_grp_generic_tanh_double_s_fu_146_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_generic_tanh_double_s_fu_146_t_in = reg_169;
    end else begin
        grp_generic_tanh_double_s_fu_146_t_in = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_calculateLayer2_fu_107_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_calculateLayer3_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln109_fu_197_p2 == 1'd1) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln109_fu_197_p2 == 1'd0) & (1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (1'b1 == Layer4_Neurons_stream_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (1'b1 == Layer4_Neurons_stream_TREADY_int_regslice))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Layer1_Neurons_stream_TREADY = regslice_both_Layer1_Neurons_stream_U_ack_in;

assign Layer1_Weights_stream_TREADY = regslice_both_Layer1_Weights_stream_U_ack_in;

assign Layer2_Weights_stream_TREADY = regslice_both_Layer2_Weights_stream_U_ack_in;

assign Layer3_Weights_stream_TREADY = regslice_both_Layer3_Weights_stream_U_ack_in;

assign Layer4_Neurons_stream_TDATA_int_regslice = conv24_i_fu_157_p1;

assign Layer4_Neurons_stream_TVALID = regslice_both_Layer4_Neurons_stream_U_vld_out;

assign add_ln109_fu_203_p2 = (i_fu_78 + 7'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state12 = ap_NS_fsm[32'd11];

always @ (*) begin
    ap_block_state6 = ((regslice_both_Layer4_Neurons_stream_U_apdone_blk == 1'b1) | ((icmp_ln109_fu_197_p2 == 1'd0) & (1'b0 == Layer3_Weights_stream_TVALID_int_regslice)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start = grp_Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4_fu_136_ap_start_reg;

assign grp_calculateLayer2_fu_107_ap_start = grp_calculateLayer2_fu_107_ap_start_reg;

assign grp_calculateLayer3_fu_122_ap_start = grp_calculateLayer3_fu_122_ap_start_reg;

assign icmp_ln109_fu_197_p2 = ((i_fu_78 == 7'd100) ? 1'b1 : 1'b0);

assign next_mul_fu_191_p2 = (phi_mul_fu_74 + 11'd25);

assign somme_fu_219_p1 = Layer3_Weights_stream_read_reg_260;

endmodule //Lenet_HW
