-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calculateLayer3_exp_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of calculateLayer3_exp_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0 : STD_LOGIC;
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0 : STD_LOGIC;
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1 : STD_LOGIC;
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0 : STD_LOGIC;
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal es_sign_fu_274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal es_sign_reg_1075_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_1075_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_1080_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1088_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln224_fu_336_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter1_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter2_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter3_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter4_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter5_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter6_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter7_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter8_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter9_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter10_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter11_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter12_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter13_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter14_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter15_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter16_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter17_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter18_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter19_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter20_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter21_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter22_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter23_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter24_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter25_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter26_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln224_reg_1094_pp0_iter27_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1100 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1100_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1100_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln229_fu_362_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln229_reg_1106 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln309_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_reg_1111_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln227_fu_383_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln227_reg_1119 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln227_reg_1119_pp0_iter2_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln229_1_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln229_1_reg_1124 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fix_l_reg_1129 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1135_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln255_fu_445_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter2_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter3_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter4_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter5_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter6_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter7_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter8_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln255_reg_1145_pp0_iter9_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal shl_ln230_fu_452_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln230_reg_1150 : STD_LOGIC_VECTOR (63 downto 0);
    signal ashr_ln230_fu_457_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ashr_ln230_reg_1155 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln309_2_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_2_reg_1165_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_fu_530_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter19_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter20_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter21_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter22_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter23_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter24_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter25_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_1170_pp0_iter26_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_reg_1182 : STD_LOGIC_VECTOR (57 downto 0);
    signal m_diff_hi_reg_1187 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_1187_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_1192_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_fu_584_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_reg_1199 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_reg_1199_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_594_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_1204 : STD_LOGIC_VECTOR (34 downto 0);
    signal exp_Z4_m_1_fu_635_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z4_m_1_reg_1219 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z4_m_1_reg_1219_pp0_iter12_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z4_m_1_reg_1219_pp0_iter13_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z4_m_1_reg_1219_pp0_iter14_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal f_Z3_reg_1225 : STD_LOGIC_VECTOR (25 downto 0);
    signal exp_Z3_m_1_fu_641_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal exp_Z3_m_1_reg_1230 : STD_LOGIC_VECTOR (42 downto 0);
    signal exp_Z3_m_1_reg_1230_pp0_iter13_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal exp_Z3_m_1_reg_1230_pp0_iter14_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_2_reg_1245 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_fu_687_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1255 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1255_pp0_iter16_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1255_pp0_iter17_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1255_pp0_iter18_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1255_pp0_iter19_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_reg_1255_pp0_iter20_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_3_reg_1261 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_reg_1261_pp0_iter16_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_reg_1261_pp0_iter17_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_reg_1261_pp0_iter18_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_reg_1261_pp0_iter19_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_reg_1261_pp0_iter20_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_7_reg_1282 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_reg_1287 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_reg_1287_pp0_iter22_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_reg_1287_pp0_iter23_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_reg_1287_pp0_iter24_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_reg_1287_pp0_iter25_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_reg_1292 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_reg_1297 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln297_fu_794_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal add_ln297_reg_1312 : STD_LOGIC_VECTOR (57 downto 0);
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal mul_ln297_reg_1317 : STD_LOGIC_VECTOR (99 downto 0);
    signal add_ln297_1_fu_809_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal add_ln297_1_reg_1322 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_9_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_1_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln309_1_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_reg_1340 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln336_fu_857_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln336_reg_1345 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln114_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln119_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln292_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_258_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_258_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_262_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_262_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_266_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal data_fu_270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal es_exp_fu_282_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal es_sig_fu_292_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln486_fu_308_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal e_frac_fu_318_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln221_fu_326_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_1_fu_330_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal m_exp_fu_312_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln229_fu_352_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln229_fu_358_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_frac_l_fu_376_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln229_fu_390_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal ashr_ln229_fu_394_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal shl_ln229_fu_400_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_fu_406_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_hi_fu_423_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln230_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_462_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln230_fu_473_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2_fu_478_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_fu_1064_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln243_fu_507_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_7_cast_fu_491_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln243_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln243_1_fu_516_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_500_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln243_fu_522_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal and_ln_fu_552_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal m_diff_fu_559_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z4_ind_fu_598_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_Z4_fu_618_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln115_fu_628_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln115_1_fu_631_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_258_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln130_1_fu_675_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln130_fu_678_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln130_fu_683_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln120_fu_672_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2_m_1_fu_703_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal and_ln1_fu_734_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln145_2_fu_748_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln145_fu_751_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln145_1_fu_756_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln145_fu_744_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_fu_760_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal shl_ln1_fu_799_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln297_2_fu_806_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal r_exp_1_fu_823_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_2_fu_828_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_fu_835_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln182_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_1_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln185_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_886_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_932_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_5_fu_941_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal out_exp_fu_927_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln303_fu_950_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal t_fu_957_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln185_fu_900_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln497_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln309_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln309_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_1_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln309_1_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_1_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_2_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln310_fu_919_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln18_1_fu_971_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln309_1_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln309_2_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_3_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln309_2_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln309_3_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_4_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln309_5_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln309_fu_1010_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1064_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to27 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_258_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_258_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_262_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_262_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_266_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal grp_fu_266_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component calculateLayer3_mul_13s_71s_71_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component calculateLayer3_mul_43ns_36ns_79_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component calculateLayer3_mul_49ns_44ns_93_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component calculateLayer3_mul_50ns_50ns_100_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component calculateLayer3_mac_muladd_16s_15ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_U : component calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_address0,
        ce0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0,
        q0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0);

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_U : component calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0,
        ce0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0,
        q0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0,
        address1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address1,
        ce1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1,
        q1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q1);

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_U : component calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0,
        ce0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0,
        q0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0);

    mul_13s_71s_71_5_1_U1 : component calculateLayer3_mul_13s_71s_71_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_exp_reg_1170,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        ce => ap_const_logic_1,
        dout => grp_fu_253_p2);

    mul_43ns_36ns_79_3_1_U2 : component calculateLayer3_mul_43ns_36ns_79_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_258_p0,
        din1 => grp_fu_258_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_258_p2);

    mul_49ns_44ns_93_5_1_U3 : component calculateLayer3_mul_49ns_44ns_93_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_262_p0,
        din1 => grp_fu_262_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_262_p2);

    mul_50ns_50ns_100_5_1_U4 : component calculateLayer3_mul_50ns_50ns_100_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_266_p0,
        din1 => grp_fu_266_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_266_p2);

    mac_muladd_16s_15ns_19s_31_4_1_U5 : component calculateLayer3_mac_muladd_16s_15ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_fu_423_p4,
        din1 => grp_fu_1064_p1,
        din2 => shl_ln_fu_462_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1064_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_reg_1192 <= m_diff_fu_559_p2(50 downto 43);
                Z2_reg_1192_pp0_iter11_reg <= Z2_reg_1192;
                Z2_reg_1192_pp0_iter12_reg <= Z2_reg_1192_pp0_iter11_reg;
                Z2_reg_1192_pp0_iter13_reg <= Z2_reg_1192_pp0_iter12_reg;
                Z2_reg_1192_pp0_iter14_reg <= Z2_reg_1192_pp0_iter13_reg;
                Z2_reg_1192_pp0_iter15_reg <= Z2_reg_1192_pp0_iter14_reg;
                Z2_reg_1192_pp0_iter16_reg <= Z2_reg_1192_pp0_iter15_reg;
                Z2_reg_1192_pp0_iter17_reg <= Z2_reg_1192_pp0_iter16_reg;
                Z2_reg_1192_pp0_iter18_reg <= Z2_reg_1192_pp0_iter17_reg;
                Z2_reg_1192_pp0_iter19_reg <= Z2_reg_1192_pp0_iter18_reg;
                Z2_reg_1192_pp0_iter20_reg <= Z2_reg_1192_pp0_iter19_reg;
                Z3_reg_1199 <= m_diff_fu_559_p2(42 downto 35);
                Z3_reg_1199_pp0_iter11_reg <= Z3_reg_1199;
                Z4_reg_1204 <= Z4_fu_594_p1;
                add_ln297_1_reg_1322 <= add_ln297_1_fu_809_p2;
                add_ln297_reg_1312 <= add_ln297_fu_794_p2;
                ashr_ln230_reg_1155 <= ashr_ln230_fu_457_p2;
                es_sign_reg_1075_pp0_iter10_reg <= es_sign_reg_1075_pp0_iter9_reg;
                es_sign_reg_1075_pp0_iter11_reg <= es_sign_reg_1075_pp0_iter10_reg;
                es_sign_reg_1075_pp0_iter12_reg <= es_sign_reg_1075_pp0_iter11_reg;
                es_sign_reg_1075_pp0_iter13_reg <= es_sign_reg_1075_pp0_iter12_reg;
                es_sign_reg_1075_pp0_iter14_reg <= es_sign_reg_1075_pp0_iter13_reg;
                es_sign_reg_1075_pp0_iter15_reg <= es_sign_reg_1075_pp0_iter14_reg;
                es_sign_reg_1075_pp0_iter16_reg <= es_sign_reg_1075_pp0_iter15_reg;
                es_sign_reg_1075_pp0_iter17_reg <= es_sign_reg_1075_pp0_iter16_reg;
                es_sign_reg_1075_pp0_iter18_reg <= es_sign_reg_1075_pp0_iter17_reg;
                es_sign_reg_1075_pp0_iter19_reg <= es_sign_reg_1075_pp0_iter18_reg;
                es_sign_reg_1075_pp0_iter20_reg <= es_sign_reg_1075_pp0_iter19_reg;
                es_sign_reg_1075_pp0_iter21_reg <= es_sign_reg_1075_pp0_iter20_reg;
                es_sign_reg_1075_pp0_iter22_reg <= es_sign_reg_1075_pp0_iter21_reg;
                es_sign_reg_1075_pp0_iter23_reg <= es_sign_reg_1075_pp0_iter22_reg;
                es_sign_reg_1075_pp0_iter24_reg <= es_sign_reg_1075_pp0_iter23_reg;
                es_sign_reg_1075_pp0_iter25_reg <= es_sign_reg_1075_pp0_iter24_reg;
                es_sign_reg_1075_pp0_iter26_reg <= es_sign_reg_1075_pp0_iter25_reg;
                es_sign_reg_1075_pp0_iter27_reg <= es_sign_reg_1075_pp0_iter26_reg;
                es_sign_reg_1075_pp0_iter2_reg <= es_sign_reg_1075_pp0_iter1_reg;
                es_sign_reg_1075_pp0_iter3_reg <= es_sign_reg_1075_pp0_iter2_reg;
                es_sign_reg_1075_pp0_iter4_reg <= es_sign_reg_1075_pp0_iter3_reg;
                es_sign_reg_1075_pp0_iter5_reg <= es_sign_reg_1075_pp0_iter4_reg;
                es_sign_reg_1075_pp0_iter6_reg <= es_sign_reg_1075_pp0_iter5_reg;
                es_sign_reg_1075_pp0_iter7_reg <= es_sign_reg_1075_pp0_iter6_reg;
                es_sign_reg_1075_pp0_iter8_reg <= es_sign_reg_1075_pp0_iter7_reg;
                es_sign_reg_1075_pp0_iter9_reg <= es_sign_reg_1075_pp0_iter8_reg;
                exp_Z1P_m_1_reg_1292 <= exp_Z1P_m_1_l_fu_760_p2(51 downto 2);
                exp_Z1_hi_reg_1297 <= table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0(57 downto 8);
                exp_Z1_reg_1287 <= table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_q0;
                exp_Z1_reg_1287_pp0_iter22_reg <= exp_Z1_reg_1287;
                exp_Z1_reg_1287_pp0_iter23_reg <= exp_Z1_reg_1287_pp0_iter22_reg;
                exp_Z1_reg_1287_pp0_iter24_reg <= exp_Z1_reg_1287_pp0_iter23_reg;
                exp_Z1_reg_1287_pp0_iter25_reg <= exp_Z1_reg_1287_pp0_iter24_reg;
                exp_Z2P_m_1_reg_1255 <= exp_Z2P_m_1_fu_687_p2;
                exp_Z2P_m_1_reg_1255_pp0_iter16_reg <= exp_Z2P_m_1_reg_1255;
                exp_Z2P_m_1_reg_1255_pp0_iter17_reg <= exp_Z2P_m_1_reg_1255_pp0_iter16_reg;
                exp_Z2P_m_1_reg_1255_pp0_iter18_reg <= exp_Z2P_m_1_reg_1255_pp0_iter17_reg;
                exp_Z2P_m_1_reg_1255_pp0_iter19_reg <= exp_Z2P_m_1_reg_1255_pp0_iter18_reg;
                exp_Z2P_m_1_reg_1255_pp0_iter20_reg <= exp_Z2P_m_1_reg_1255_pp0_iter19_reg;
                    exp_Z3_m_1_reg_1230(25 downto 0) <= exp_Z3_m_1_fu_641_p4(25 downto 0);    exp_Z3_m_1_reg_1230(42 downto 35) <= exp_Z3_m_1_fu_641_p4(42 downto 35);
                    exp_Z3_m_1_reg_1230_pp0_iter13_reg(25 downto 0) <= exp_Z3_m_1_reg_1230(25 downto 0);    exp_Z3_m_1_reg_1230_pp0_iter13_reg(42 downto 35) <= exp_Z3_m_1_reg_1230(42 downto 35);
                    exp_Z3_m_1_reg_1230_pp0_iter14_reg(25 downto 0) <= exp_Z3_m_1_reg_1230_pp0_iter13_reg(25 downto 0);    exp_Z3_m_1_reg_1230_pp0_iter14_reg(42 downto 35) <= exp_Z3_m_1_reg_1230_pp0_iter13_reg(42 downto 35);
                exp_Z4_m_1_reg_1219 <= exp_Z4_m_1_fu_635_p2;
                exp_Z4_m_1_reg_1219_pp0_iter12_reg <= exp_Z4_m_1_reg_1219;
                exp_Z4_m_1_reg_1219_pp0_iter13_reg <= exp_Z4_m_1_reg_1219_pp0_iter12_reg;
                exp_Z4_m_1_reg_1219_pp0_iter14_reg <= exp_Z4_m_1_reg_1219_pp0_iter13_reg;
                icmp_ln18_1_reg_1088_pp0_iter10_reg <= icmp_ln18_1_reg_1088_pp0_iter9_reg;
                icmp_ln18_1_reg_1088_pp0_iter11_reg <= icmp_ln18_1_reg_1088_pp0_iter10_reg;
                icmp_ln18_1_reg_1088_pp0_iter12_reg <= icmp_ln18_1_reg_1088_pp0_iter11_reg;
                icmp_ln18_1_reg_1088_pp0_iter13_reg <= icmp_ln18_1_reg_1088_pp0_iter12_reg;
                icmp_ln18_1_reg_1088_pp0_iter14_reg <= icmp_ln18_1_reg_1088_pp0_iter13_reg;
                icmp_ln18_1_reg_1088_pp0_iter15_reg <= icmp_ln18_1_reg_1088_pp0_iter14_reg;
                icmp_ln18_1_reg_1088_pp0_iter16_reg <= icmp_ln18_1_reg_1088_pp0_iter15_reg;
                icmp_ln18_1_reg_1088_pp0_iter17_reg <= icmp_ln18_1_reg_1088_pp0_iter16_reg;
                icmp_ln18_1_reg_1088_pp0_iter18_reg <= icmp_ln18_1_reg_1088_pp0_iter17_reg;
                icmp_ln18_1_reg_1088_pp0_iter19_reg <= icmp_ln18_1_reg_1088_pp0_iter18_reg;
                icmp_ln18_1_reg_1088_pp0_iter20_reg <= icmp_ln18_1_reg_1088_pp0_iter19_reg;
                icmp_ln18_1_reg_1088_pp0_iter21_reg <= icmp_ln18_1_reg_1088_pp0_iter20_reg;
                icmp_ln18_1_reg_1088_pp0_iter22_reg <= icmp_ln18_1_reg_1088_pp0_iter21_reg;
                icmp_ln18_1_reg_1088_pp0_iter23_reg <= icmp_ln18_1_reg_1088_pp0_iter22_reg;
                icmp_ln18_1_reg_1088_pp0_iter24_reg <= icmp_ln18_1_reg_1088_pp0_iter23_reg;
                icmp_ln18_1_reg_1088_pp0_iter25_reg <= icmp_ln18_1_reg_1088_pp0_iter24_reg;
                icmp_ln18_1_reg_1088_pp0_iter26_reg <= icmp_ln18_1_reg_1088_pp0_iter25_reg;
                icmp_ln18_1_reg_1088_pp0_iter27_reg <= icmp_ln18_1_reg_1088_pp0_iter26_reg;
                icmp_ln18_1_reg_1088_pp0_iter2_reg <= icmp_ln18_1_reg_1088_pp0_iter1_reg;
                icmp_ln18_1_reg_1088_pp0_iter3_reg <= icmp_ln18_1_reg_1088_pp0_iter2_reg;
                icmp_ln18_1_reg_1088_pp0_iter4_reg <= icmp_ln18_1_reg_1088_pp0_iter3_reg;
                icmp_ln18_1_reg_1088_pp0_iter5_reg <= icmp_ln18_1_reg_1088_pp0_iter4_reg;
                icmp_ln18_1_reg_1088_pp0_iter6_reg <= icmp_ln18_1_reg_1088_pp0_iter5_reg;
                icmp_ln18_1_reg_1088_pp0_iter7_reg <= icmp_ln18_1_reg_1088_pp0_iter6_reg;
                icmp_ln18_1_reg_1088_pp0_iter8_reg <= icmp_ln18_1_reg_1088_pp0_iter7_reg;
                icmp_ln18_1_reg_1088_pp0_iter9_reg <= icmp_ln18_1_reg_1088_pp0_iter8_reg;
                icmp_ln18_reg_1080_pp0_iter10_reg <= icmp_ln18_reg_1080_pp0_iter9_reg;
                icmp_ln18_reg_1080_pp0_iter11_reg <= icmp_ln18_reg_1080_pp0_iter10_reg;
                icmp_ln18_reg_1080_pp0_iter12_reg <= icmp_ln18_reg_1080_pp0_iter11_reg;
                icmp_ln18_reg_1080_pp0_iter13_reg <= icmp_ln18_reg_1080_pp0_iter12_reg;
                icmp_ln18_reg_1080_pp0_iter14_reg <= icmp_ln18_reg_1080_pp0_iter13_reg;
                icmp_ln18_reg_1080_pp0_iter15_reg <= icmp_ln18_reg_1080_pp0_iter14_reg;
                icmp_ln18_reg_1080_pp0_iter16_reg <= icmp_ln18_reg_1080_pp0_iter15_reg;
                icmp_ln18_reg_1080_pp0_iter17_reg <= icmp_ln18_reg_1080_pp0_iter16_reg;
                icmp_ln18_reg_1080_pp0_iter18_reg <= icmp_ln18_reg_1080_pp0_iter17_reg;
                icmp_ln18_reg_1080_pp0_iter19_reg <= icmp_ln18_reg_1080_pp0_iter18_reg;
                icmp_ln18_reg_1080_pp0_iter20_reg <= icmp_ln18_reg_1080_pp0_iter19_reg;
                icmp_ln18_reg_1080_pp0_iter21_reg <= icmp_ln18_reg_1080_pp0_iter20_reg;
                icmp_ln18_reg_1080_pp0_iter22_reg <= icmp_ln18_reg_1080_pp0_iter21_reg;
                icmp_ln18_reg_1080_pp0_iter23_reg <= icmp_ln18_reg_1080_pp0_iter22_reg;
                icmp_ln18_reg_1080_pp0_iter24_reg <= icmp_ln18_reg_1080_pp0_iter23_reg;
                icmp_ln18_reg_1080_pp0_iter25_reg <= icmp_ln18_reg_1080_pp0_iter24_reg;
                icmp_ln18_reg_1080_pp0_iter26_reg <= icmp_ln18_reg_1080_pp0_iter25_reg;
                icmp_ln18_reg_1080_pp0_iter27_reg <= icmp_ln18_reg_1080_pp0_iter26_reg;
                icmp_ln18_reg_1080_pp0_iter2_reg <= icmp_ln18_reg_1080_pp0_iter1_reg;
                icmp_ln18_reg_1080_pp0_iter3_reg <= icmp_ln18_reg_1080_pp0_iter2_reg;
                icmp_ln18_reg_1080_pp0_iter4_reg <= icmp_ln18_reg_1080_pp0_iter3_reg;
                icmp_ln18_reg_1080_pp0_iter5_reg <= icmp_ln18_reg_1080_pp0_iter4_reg;
                icmp_ln18_reg_1080_pp0_iter6_reg <= icmp_ln18_reg_1080_pp0_iter5_reg;
                icmp_ln18_reg_1080_pp0_iter7_reg <= icmp_ln18_reg_1080_pp0_iter6_reg;
                icmp_ln18_reg_1080_pp0_iter8_reg <= icmp_ln18_reg_1080_pp0_iter7_reg;
                icmp_ln18_reg_1080_pp0_iter9_reg <= icmp_ln18_reg_1080_pp0_iter8_reg;
                icmp_ln309_1_reg_1333 <= icmp_ln309_1_fu_845_p2;
                icmp_ln309_2_reg_1165 <= icmp_ln309_2_fu_486_p2;
                icmp_ln309_2_reg_1165_pp0_iter10_reg <= icmp_ln309_2_reg_1165_pp0_iter9_reg;
                icmp_ln309_2_reg_1165_pp0_iter11_reg <= icmp_ln309_2_reg_1165_pp0_iter10_reg;
                icmp_ln309_2_reg_1165_pp0_iter12_reg <= icmp_ln309_2_reg_1165_pp0_iter11_reg;
                icmp_ln309_2_reg_1165_pp0_iter13_reg <= icmp_ln309_2_reg_1165_pp0_iter12_reg;
                icmp_ln309_2_reg_1165_pp0_iter14_reg <= icmp_ln309_2_reg_1165_pp0_iter13_reg;
                icmp_ln309_2_reg_1165_pp0_iter15_reg <= icmp_ln309_2_reg_1165_pp0_iter14_reg;
                icmp_ln309_2_reg_1165_pp0_iter16_reg <= icmp_ln309_2_reg_1165_pp0_iter15_reg;
                icmp_ln309_2_reg_1165_pp0_iter17_reg <= icmp_ln309_2_reg_1165_pp0_iter16_reg;
                icmp_ln309_2_reg_1165_pp0_iter18_reg <= icmp_ln309_2_reg_1165_pp0_iter17_reg;
                icmp_ln309_2_reg_1165_pp0_iter19_reg <= icmp_ln309_2_reg_1165_pp0_iter18_reg;
                icmp_ln309_2_reg_1165_pp0_iter20_reg <= icmp_ln309_2_reg_1165_pp0_iter19_reg;
                icmp_ln309_2_reg_1165_pp0_iter21_reg <= icmp_ln309_2_reg_1165_pp0_iter20_reg;
                icmp_ln309_2_reg_1165_pp0_iter22_reg <= icmp_ln309_2_reg_1165_pp0_iter21_reg;
                icmp_ln309_2_reg_1165_pp0_iter23_reg <= icmp_ln309_2_reg_1165_pp0_iter22_reg;
                icmp_ln309_2_reg_1165_pp0_iter24_reg <= icmp_ln309_2_reg_1165_pp0_iter23_reg;
                icmp_ln309_2_reg_1165_pp0_iter25_reg <= icmp_ln309_2_reg_1165_pp0_iter24_reg;
                icmp_ln309_2_reg_1165_pp0_iter26_reg <= icmp_ln309_2_reg_1165_pp0_iter25_reg;
                icmp_ln309_2_reg_1165_pp0_iter27_reg <= icmp_ln309_2_reg_1165_pp0_iter26_reg;
                icmp_ln309_2_reg_1165_pp0_iter4_reg <= icmp_ln309_2_reg_1165;
                icmp_ln309_2_reg_1165_pp0_iter5_reg <= icmp_ln309_2_reg_1165_pp0_iter4_reg;
                icmp_ln309_2_reg_1165_pp0_iter6_reg <= icmp_ln309_2_reg_1165_pp0_iter5_reg;
                icmp_ln309_2_reg_1165_pp0_iter7_reg <= icmp_ln309_2_reg_1165_pp0_iter6_reg;
                icmp_ln309_2_reg_1165_pp0_iter8_reg <= icmp_ln309_2_reg_1165_pp0_iter7_reg;
                icmp_ln309_2_reg_1165_pp0_iter9_reg <= icmp_ln309_2_reg_1165_pp0_iter8_reg;
                icmp_ln309_reg_1111_pp0_iter10_reg <= icmp_ln309_reg_1111_pp0_iter9_reg;
                icmp_ln309_reg_1111_pp0_iter11_reg <= icmp_ln309_reg_1111_pp0_iter10_reg;
                icmp_ln309_reg_1111_pp0_iter12_reg <= icmp_ln309_reg_1111_pp0_iter11_reg;
                icmp_ln309_reg_1111_pp0_iter13_reg <= icmp_ln309_reg_1111_pp0_iter12_reg;
                icmp_ln309_reg_1111_pp0_iter14_reg <= icmp_ln309_reg_1111_pp0_iter13_reg;
                icmp_ln309_reg_1111_pp0_iter15_reg <= icmp_ln309_reg_1111_pp0_iter14_reg;
                icmp_ln309_reg_1111_pp0_iter16_reg <= icmp_ln309_reg_1111_pp0_iter15_reg;
                icmp_ln309_reg_1111_pp0_iter17_reg <= icmp_ln309_reg_1111_pp0_iter16_reg;
                icmp_ln309_reg_1111_pp0_iter18_reg <= icmp_ln309_reg_1111_pp0_iter17_reg;
                icmp_ln309_reg_1111_pp0_iter19_reg <= icmp_ln309_reg_1111_pp0_iter18_reg;
                icmp_ln309_reg_1111_pp0_iter20_reg <= icmp_ln309_reg_1111_pp0_iter19_reg;
                icmp_ln309_reg_1111_pp0_iter21_reg <= icmp_ln309_reg_1111_pp0_iter20_reg;
                icmp_ln309_reg_1111_pp0_iter22_reg <= icmp_ln309_reg_1111_pp0_iter21_reg;
                icmp_ln309_reg_1111_pp0_iter23_reg <= icmp_ln309_reg_1111_pp0_iter22_reg;
                icmp_ln309_reg_1111_pp0_iter24_reg <= icmp_ln309_reg_1111_pp0_iter23_reg;
                icmp_ln309_reg_1111_pp0_iter25_reg <= icmp_ln309_reg_1111_pp0_iter24_reg;
                icmp_ln309_reg_1111_pp0_iter26_reg <= icmp_ln309_reg_1111_pp0_iter25_reg;
                icmp_ln309_reg_1111_pp0_iter27_reg <= icmp_ln309_reg_1111_pp0_iter26_reg;
                icmp_ln309_reg_1111_pp0_iter2_reg <= icmp_ln309_reg_1111_pp0_iter1_reg;
                icmp_ln309_reg_1111_pp0_iter3_reg <= icmp_ln309_reg_1111_pp0_iter2_reg;
                icmp_ln309_reg_1111_pp0_iter4_reg <= icmp_ln309_reg_1111_pp0_iter3_reg;
                icmp_ln309_reg_1111_pp0_iter5_reg <= icmp_ln309_reg_1111_pp0_iter4_reg;
                icmp_ln309_reg_1111_pp0_iter6_reg <= icmp_ln309_reg_1111_pp0_iter5_reg;
                icmp_ln309_reg_1111_pp0_iter7_reg <= icmp_ln309_reg_1111_pp0_iter6_reg;
                icmp_ln309_reg_1111_pp0_iter8_reg <= icmp_ln309_reg_1111_pp0_iter7_reg;
                icmp_ln309_reg_1111_pp0_iter9_reg <= icmp_ln309_reg_1111_pp0_iter8_reg;
                icmp_ln326_reg_1340 <= icmp_ln326_fu_851_p2;
                m_diff_hi_reg_1187 <= m_diff_fu_559_p2(58 downto 51);
                m_diff_hi_reg_1187_pp0_iter11_reg <= m_diff_hi_reg_1187;
                m_diff_hi_reg_1187_pp0_iter12_reg <= m_diff_hi_reg_1187_pp0_iter11_reg;
                m_diff_hi_reg_1187_pp0_iter13_reg <= m_diff_hi_reg_1187_pp0_iter12_reg;
                m_diff_hi_reg_1187_pp0_iter14_reg <= m_diff_hi_reg_1187_pp0_iter13_reg;
                m_diff_hi_reg_1187_pp0_iter15_reg <= m_diff_hi_reg_1187_pp0_iter14_reg;
                m_diff_hi_reg_1187_pp0_iter16_reg <= m_diff_hi_reg_1187_pp0_iter15_reg;
                m_diff_hi_reg_1187_pp0_iter17_reg <= m_diff_hi_reg_1187_pp0_iter16_reg;
                m_diff_hi_reg_1187_pp0_iter18_reg <= m_diff_hi_reg_1187_pp0_iter17_reg;
                m_diff_hi_reg_1187_pp0_iter19_reg <= m_diff_hi_reg_1187_pp0_iter18_reg;
                mul_ln297_reg_1317 <= grp_fu_266_p2;
                r_exp_reg_1170 <= r_exp_fu_530_p3;
                r_exp_reg_1170_pp0_iter10_reg <= r_exp_reg_1170_pp0_iter9_reg;
                r_exp_reg_1170_pp0_iter11_reg <= r_exp_reg_1170_pp0_iter10_reg;
                r_exp_reg_1170_pp0_iter12_reg <= r_exp_reg_1170_pp0_iter11_reg;
                r_exp_reg_1170_pp0_iter13_reg <= r_exp_reg_1170_pp0_iter12_reg;
                r_exp_reg_1170_pp0_iter14_reg <= r_exp_reg_1170_pp0_iter13_reg;
                r_exp_reg_1170_pp0_iter15_reg <= r_exp_reg_1170_pp0_iter14_reg;
                r_exp_reg_1170_pp0_iter16_reg <= r_exp_reg_1170_pp0_iter15_reg;
                r_exp_reg_1170_pp0_iter17_reg <= r_exp_reg_1170_pp0_iter16_reg;
                r_exp_reg_1170_pp0_iter18_reg <= r_exp_reg_1170_pp0_iter17_reg;
                r_exp_reg_1170_pp0_iter19_reg <= r_exp_reg_1170_pp0_iter18_reg;
                r_exp_reg_1170_pp0_iter20_reg <= r_exp_reg_1170_pp0_iter19_reg;
                r_exp_reg_1170_pp0_iter21_reg <= r_exp_reg_1170_pp0_iter20_reg;
                r_exp_reg_1170_pp0_iter22_reg <= r_exp_reg_1170_pp0_iter21_reg;
                r_exp_reg_1170_pp0_iter23_reg <= r_exp_reg_1170_pp0_iter22_reg;
                r_exp_reg_1170_pp0_iter24_reg <= r_exp_reg_1170_pp0_iter23_reg;
                r_exp_reg_1170_pp0_iter25_reg <= r_exp_reg_1170_pp0_iter24_reg;
                r_exp_reg_1170_pp0_iter26_reg <= r_exp_reg_1170_pp0_iter25_reg;
                r_exp_reg_1170_pp0_iter5_reg <= r_exp_reg_1170;
                r_exp_reg_1170_pp0_iter6_reg <= r_exp_reg_1170_pp0_iter5_reg;
                r_exp_reg_1170_pp0_iter7_reg <= r_exp_reg_1170_pp0_iter6_reg;
                r_exp_reg_1170_pp0_iter8_reg <= r_exp_reg_1170_pp0_iter7_reg;
                r_exp_reg_1170_pp0_iter9_reg <= r_exp_reg_1170_pp0_iter8_reg;
                select_ln224_reg_1094_pp0_iter10_reg <= select_ln224_reg_1094_pp0_iter9_reg;
                select_ln224_reg_1094_pp0_iter11_reg <= select_ln224_reg_1094_pp0_iter10_reg;
                select_ln224_reg_1094_pp0_iter12_reg <= select_ln224_reg_1094_pp0_iter11_reg;
                select_ln224_reg_1094_pp0_iter13_reg <= select_ln224_reg_1094_pp0_iter12_reg;
                select_ln224_reg_1094_pp0_iter14_reg <= select_ln224_reg_1094_pp0_iter13_reg;
                select_ln224_reg_1094_pp0_iter15_reg <= select_ln224_reg_1094_pp0_iter14_reg;
                select_ln224_reg_1094_pp0_iter16_reg <= select_ln224_reg_1094_pp0_iter15_reg;
                select_ln224_reg_1094_pp0_iter17_reg <= select_ln224_reg_1094_pp0_iter16_reg;
                select_ln224_reg_1094_pp0_iter18_reg <= select_ln224_reg_1094_pp0_iter17_reg;
                select_ln224_reg_1094_pp0_iter19_reg <= select_ln224_reg_1094_pp0_iter18_reg;
                select_ln224_reg_1094_pp0_iter20_reg <= select_ln224_reg_1094_pp0_iter19_reg;
                select_ln224_reg_1094_pp0_iter21_reg <= select_ln224_reg_1094_pp0_iter20_reg;
                select_ln224_reg_1094_pp0_iter22_reg <= select_ln224_reg_1094_pp0_iter21_reg;
                select_ln224_reg_1094_pp0_iter23_reg <= select_ln224_reg_1094_pp0_iter22_reg;
                select_ln224_reg_1094_pp0_iter24_reg <= select_ln224_reg_1094_pp0_iter23_reg;
                select_ln224_reg_1094_pp0_iter25_reg <= select_ln224_reg_1094_pp0_iter24_reg;
                select_ln224_reg_1094_pp0_iter26_reg <= select_ln224_reg_1094_pp0_iter25_reg;
                select_ln224_reg_1094_pp0_iter27_reg <= select_ln224_reg_1094_pp0_iter26_reg;
                select_ln224_reg_1094_pp0_iter2_reg <= select_ln224_reg_1094_pp0_iter1_reg;
                select_ln224_reg_1094_pp0_iter3_reg <= select_ln224_reg_1094_pp0_iter2_reg;
                select_ln224_reg_1094_pp0_iter4_reg <= select_ln224_reg_1094_pp0_iter3_reg;
                select_ln224_reg_1094_pp0_iter5_reg <= select_ln224_reg_1094_pp0_iter4_reg;
                select_ln224_reg_1094_pp0_iter6_reg <= select_ln224_reg_1094_pp0_iter5_reg;
                select_ln224_reg_1094_pp0_iter7_reg <= select_ln224_reg_1094_pp0_iter6_reg;
                select_ln224_reg_1094_pp0_iter8_reg <= select_ln224_reg_1094_pp0_iter7_reg;
                select_ln224_reg_1094_pp0_iter9_reg <= select_ln224_reg_1094_pp0_iter8_reg;
                    sext_ln227_reg_1119_pp0_iter2_reg(70 downto 7) <= sext_ln227_reg_1119(70 downto 7);
                shl_ln230_reg_1150 <= shl_ln230_fu_452_p2;
                tmp_1_reg_1182 <= grp_fu_253_p2(70 downto 13);
                tmp_2_reg_1245 <= grp_fu_258_p2(78 downto 59);
                tmp_3_reg_1261 <= table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0(41 downto 2);
                tmp_3_reg_1261_pp0_iter16_reg <= tmp_3_reg_1261;
                tmp_3_reg_1261_pp0_iter17_reg <= tmp_3_reg_1261_pp0_iter16_reg;
                tmp_3_reg_1261_pp0_iter18_reg <= tmp_3_reg_1261_pp0_iter17_reg;
                tmp_3_reg_1261_pp0_iter19_reg <= tmp_3_reg_1261_pp0_iter18_reg;
                tmp_3_reg_1261_pp0_iter20_reg <= tmp_3_reg_1261_pp0_iter19_reg;
                tmp_6_reg_1135_pp0_iter2_reg <= tmp_6_reg_1135;
                tmp_7_reg_1282 <= grp_fu_262_p2(92 downto 57);
                tmp_9_reg_1328 <= add_ln297_1_fu_809_p2(106 downto 106);
                tmp_reg_1100_pp0_iter2_reg <= tmp_reg_1100_pp0_iter1_reg;
                trunc_ln255_reg_1145_pp0_iter2_reg <= trunc_ln255_reg_1145;
                trunc_ln255_reg_1145_pp0_iter3_reg <= trunc_ln255_reg_1145_pp0_iter2_reg;
                trunc_ln255_reg_1145_pp0_iter4_reg <= trunc_ln255_reg_1145_pp0_iter3_reg;
                trunc_ln255_reg_1145_pp0_iter5_reg <= trunc_ln255_reg_1145_pp0_iter4_reg;
                trunc_ln255_reg_1145_pp0_iter6_reg <= trunc_ln255_reg_1145_pp0_iter5_reg;
                trunc_ln255_reg_1145_pp0_iter7_reg <= trunc_ln255_reg_1145_pp0_iter6_reg;
                trunc_ln255_reg_1145_pp0_iter8_reg <= trunc_ln255_reg_1145_pp0_iter7_reg;
                trunc_ln255_reg_1145_pp0_iter9_reg <= trunc_ln255_reg_1145_pp0_iter8_reg;
                trunc_ln336_reg_1345 <= trunc_ln336_fu_857_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                es_sign_reg_1075 <= data_fu_270_p1(63 downto 63);
                es_sign_reg_1075_pp0_iter1_reg <= es_sign_reg_1075;
                icmp_ln18_1_reg_1088 <= icmp_ln18_1_fu_302_p2;
                icmp_ln18_1_reg_1088_pp0_iter1_reg <= icmp_ln18_1_reg_1088;
                icmp_ln18_reg_1080 <= icmp_ln18_fu_296_p2;
                icmp_ln18_reg_1080_pp0_iter1_reg <= icmp_ln18_reg_1080;
                icmp_ln309_reg_1111 <= icmp_ln309_fu_370_p2;
                icmp_ln309_reg_1111_pp0_iter1_reg <= icmp_ln309_reg_1111;
                m_fix_l_reg_1129 <= m_fix_fu_406_p3(70 downto 7);
                select_ln224_reg_1094 <= select_ln224_fu_336_p3;
                select_ln224_reg_1094_pp0_iter1_reg <= select_ln224_reg_1094;
                select_ln229_reg_1106 <= select_ln229_fu_362_p3;
                    sext_ln227_reg_1119(70 downto 7) <= sext_ln227_fu_383_p1(70 downto 7);
                sext_ln229_1_reg_1124 <= sext_ln229_1_fu_387_p1;
                tmp_6_reg_1135 <= m_fix_fu_406_p3(70 downto 70);
                tmp_reg_1100 <= m_exp_fu_312_p2(11 downto 11);
                tmp_reg_1100_pp0_iter1_reg <= tmp_reg_1100;
                trunc_ln255_reg_1145 <= trunc_ln255_fu_445_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                f_Z3_reg_1225 <= table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q0;
            end if;
        end if;
    end process;
    sext_ln227_reg_1119(6 downto 0) <= "0000000";
    sext_ln227_reg_1119_pp0_iter2_reg(6 downto 0) <= "0000000";
    exp_Z3_m_1_reg_1230(34 downto 26) <= "000000000";
    exp_Z3_m_1_reg_1230_pp0_iter13_reg(34 downto 26) <= "000000000";
    exp_Z3_m_1_reg_1230_pp0_iter14_reg(34 downto 26) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z3_fu_584_p4 <= m_diff_fu_559_p2(42 downto 35);
    Z4_fu_594_p1 <= m_diff_fu_559_p2(35 - 1 downto 0);
    Z4_ind_fu_598_p4 <= m_diff_fu_559_p2(34 downto 27);
    add_ln130_fu_678_p2 <= std_logic_vector(unsigned(exp_Z4_m_1_reg_1219_pp0_iter14_reg) + unsigned(zext_ln130_1_fu_675_p1));
    add_ln145_fu_751_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_reg_1255_pp0_iter20_reg) + unsigned(zext_ln145_2_fu_748_p1));
    add_ln243_1_fu_516_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_491_p4) + unsigned(ap_const_lv13_1));
    add_ln297_1_fu_809_p2 <= std_logic_vector(unsigned(shl_ln1_fu_799_p3) + unsigned(zext_ln297_2_fu_806_p1));
    add_ln297_fu_794_p2 <= std_logic_vector(unsigned(exp_Z1_reg_1287_pp0_iter25_reg) + unsigned(ap_const_lv58_10));
    and_ln182_1_fu_866_p2 <= (xor_ln182_fu_861_p2 and icmp_ln18_1_reg_1088_pp0_iter27_reg);
    and_ln182_fu_871_p2 <= (icmp_ln18_reg_1080_pp0_iter27_reg and and_ln182_1_fu_866_p2);
    and_ln18_fu_881_p2 <= (xor_ln18_fu_876_p2 and icmp_ln18_reg_1080_pp0_iter27_reg);
    and_ln1_fu_734_p5 <= (((Z2_reg_1192_pp0_iter20_reg & ap_const_lv1_0) & tmp_3_reg_1261_pp0_iter20_reg) & ap_const_lv2_0);
    and_ln309_1_fu_988_p2 <= (xor_ln309_fu_983_p2 and icmp_ln309_1_reg_1333);
    and_ln309_2_fu_1004_p2 <= (xor_ln18_1_fu_999_p2 and or_ln309_1_fu_993_p2);
    and_ln309_3_fu_1024_p2 <= (xor_ln309_1_fu_1018_p2 and icmp_ln309_reg_1111_pp0_iter27_reg);
    and_ln309_4_fu_1045_p2 <= (xor_ln18_1_fu_999_p2 and or_ln309_3_fu_1039_p2);
    and_ln309_5_fu_1051_p2 <= (icmp_ln326_reg_1340 and and_ln309_4_fu_1045_p2);
    and_ln309_fu_978_p2 <= (or_ln309_fu_908_p2 and icmp_ln309_reg_1111_pp0_iter27_reg);
    and_ln_fu_552_p3 <= (tmp_1_reg_1182 & ap_const_lv1_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to27_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_0to27 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to27)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to27 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv64_0 when (and_ln309_5_fu_1051_p2(0) = '1') else 
        select_ln309_fu_1010_p3;
    ashr_ln229_fu_394_p2 <= std_logic_vector(shift_right(signed(sext_ln227_fu_383_p1),to_integer(unsigned('0' & zext_ln229_fu_390_p1(31-1 downto 0)))));
    ashr_ln230_fu_457_p2 <= std_logic_vector(shift_right(signed(m_fix_l_reg_1129),to_integer(unsigned('0' & zext_ln230_fu_449_p1(31-1 downto 0)))));
    bitcast_ln497_fu_967_p1 <= t_fu_957_p4;
    data_fu_270_p1 <= x;
    e_frac_1_fu_330_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln221_fu_326_p1));
    e_frac_fu_318_p3 <= (ap_const_lv1_1 & es_sig_fu_292_p1);
    es_exp_fu_282_p4 <= data_fu_270_p1(62 downto 52);
    es_sig_fu_292_p1 <= data_fu_270_p1(52 - 1 downto 0);
    es_sign_fu_274_p3 <= data_fu_270_p1(63 downto 63);
    exp_Z1P_m_1_l_fu_760_p2 <= std_logic_vector(unsigned(zext_ln145_1_fu_756_p1) + unsigned(zext_ln145_fu_744_p1));
    exp_Z2P_m_1_fu_687_p2 <= std_logic_vector(unsigned(zext_ln130_fu_683_p1) + unsigned(zext_ln120_fu_672_p1));
    exp_Z2_m_1_fu_703_p4 <= ((Z2_reg_1192_pp0_iter15_reg & ap_const_lv1_0) & tmp_3_reg_1261);
    exp_Z3_m_1_fu_641_p4 <= ((Z3_reg_1199_pp0_iter11_reg & ap_const_lv9_0) & f_Z3_reg_1225);
    exp_Z4_m_1_fu_635_p2 <= std_logic_vector(unsigned(zext_ln115_fu_628_p1) + unsigned(zext_ln115_1_fu_631_p1));
    f_Z4_fu_618_p4 <= table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_q1(25 downto 16);
    grp_fu_1064_p1 <= ap_const_lv31_5C55(15 - 1 downto 0);
    grp_fu_258_p0 <= grp_fu_258_p00(43 - 1 downto 0);
    grp_fu_258_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z3_m_1_fu_641_p4),79));
    grp_fu_258_p1 <= grp_fu_258_p10(36 - 1 downto 0);
    grp_fu_258_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z4_m_1_reg_1219),79));
    grp_fu_262_p0 <= grp_fu_262_p00(49 - 1 downto 0);
    grp_fu_262_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_fu_703_p4),93));
    grp_fu_262_p1 <= grp_fu_262_p10(44 - 1 downto 0);
    grp_fu_262_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_reg_1255),93));
    grp_fu_266_p0 <= grp_fu_266_p00(50 - 1 downto 0);
    grp_fu_266_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_reg_1292),100));
    grp_fu_266_p1 <= grp_fu_266_p10(50 - 1 downto 0);
    grp_fu_266_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_reg_1297),100));
    icmp_ln18_1_fu_302_p2 <= "1" when (es_sig_fu_292_p1 = ap_const_lv52_0) else "0";
    icmp_ln18_fu_296_p2 <= "1" when (es_exp_fu_282_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln243_fu_510_p2 <= "1" when (trunc_ln243_fu_507_p1 = ap_const_lv18_0) else "0";
    icmp_ln309_1_fu_845_p2 <= "1" when (signed(tmp_10_fu_835_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln309_2_fu_486_p2 <= "0" when (shl_ln2_fu_478_p3 = sext_ln227_reg_1119_pp0_iter2_reg) else "1";
    icmp_ln309_fu_370_p2 <= "1" when (signed(m_exp_fu_312_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln326_fu_851_p2 <= "1" when (signed(r_exp_2_fu_828_p3) < signed(ap_const_lv13_1C02)) else "0";
    m_diff_fu_559_p2 <= std_logic_vector(unsigned(trunc_ln255_reg_1145_pp0_iter9_reg) - unsigned(and_ln_fu_552_p3));
    m_exp_fu_312_p2 <= std_logic_vector(unsigned(zext_ln486_fu_308_p1) + unsigned(ap_const_lv12_C01));
    m_fix_fu_406_p3 <= 
        ashr_ln229_fu_394_p2 when (tmp_reg_1100(0) = '1') else 
        shl_ln229_fu_400_p2;
    m_fix_hi_fu_423_p4 <= m_fix_fu_406_p3(70 downto 55);
    m_frac_l_fu_376_p3 <= (select_ln224_reg_1094 & ap_const_lv7_0);
    or_ln185_fu_894_p2 <= (and_ln18_fu_881_p2 or and_ln182_fu_871_p2);
    or_ln309_1_fu_993_p2 <= (and_ln309_fu_978_p2 or and_ln309_1_fu_988_p2);
    or_ln309_2_fu_1029_p2 <= (icmp_ln309_reg_1111_pp0_iter27_reg or icmp_ln309_1_reg_1333);
    or_ln309_3_fu_1039_p2 <= (xor_ln309_2_fu_1033_p2 or and_ln309_3_fu_1024_p2);
    or_ln309_fu_908_p2 <= (icmp_ln309_2_reg_1165_pp0_iter27_reg or icmp_ln309_1_reg_1333);
    out_exp_fu_927_p2 <= std_logic_vector(unsigned(trunc_ln336_reg_1345) + unsigned(ap_const_lv11_3FF));
    r_exp_1_fu_823_p2 <= std_logic_vector(signed(r_exp_reg_1170_pp0_iter26_reg) + signed(ap_const_lv13_1FFF));
    r_exp_2_fu_828_p3 <= 
        r_exp_reg_1170_pp0_iter26_reg when (tmp_9_fu_815_p3(0) = '1') else 
        r_exp_1_fu_823_p2;
    r_exp_fu_530_p3 <= 
        select_ln243_fu_522_p3 when (tmp_8_fu_500_p3(0) = '1') else 
        tmp_7_cast_fu_491_p4;
    select_ln185_fu_900_p3 <= 
        select_ln18_fu_886_p3 when (or_ln185_fu_894_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln18_1_fu_971_p3 <= 
        select_ln185_fu_900_p3 when (icmp_ln18_reg_1080_pp0_iter27_reg(0) = '1') else 
        bitcast_ln497_fu_967_p1;
    select_ln18_fu_886_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (and_ln18_fu_881_p2(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln224_fu_336_p3 <= 
        e_frac_1_fu_330_p2 when (es_sign_fu_274_p3(0) = '1') else 
        zext_ln221_fu_326_p1;
    select_ln229_fu_362_p3 <= 
        sext_ln229_fu_358_p1 when (tmp_fu_344_p3(0) = '1') else 
        m_exp_fu_312_p2;
    select_ln230_fu_473_p3 <= 
        shl_ln230_reg_1150 when (tmp_reg_1100_pp0_iter2_reg(0) = '1') else 
        ashr_ln230_reg_1155;
    select_ln243_fu_522_p3 <= 
        tmp_7_cast_fu_491_p4 when (icmp_ln243_fu_510_p2(0) = '1') else 
        add_ln243_1_fu_516_p2;
    select_ln303_fu_950_p3 <= 
        tmp_4_fu_932_p4 when (tmp_9_reg_1328(0) = '1') else 
        tmp_5_fu_941_p4;
    select_ln309_fu_1010_p3 <= 
        select_ln310_fu_919_p3 when (and_ln309_2_fu_1004_p2(0) = '1') else 
        select_ln18_1_fu_971_p3;
    select_ln310_fu_919_p3 <= 
        ap_const_lv64_0 when (tmp_11_fu_912_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
        sext_ln227_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_fu_376_p3),71));

        sext_ln229_1_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln229_reg_1106),32));

        sext_ln229_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln229_fu_352_p2),12));

    shl_ln1_fu_799_p3 <= (add_ln297_reg_1312 & ap_const_lv49_0);
    shl_ln229_fu_400_p2 <= std_logic_vector(shift_left(unsigned(sext_ln227_fu_383_p1),to_integer(unsigned('0' & zext_ln229_fu_390_p1(31-1 downto 0)))));
    shl_ln230_fu_452_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_reg_1129),to_integer(unsigned('0' & zext_ln230_fu_449_p1(31-1 downto 0)))));
    shl_ln2_fu_478_p3 <= (select_ln230_fu_473_p3 & ap_const_lv7_0);
    shl_ln_fu_462_p3 <= (tmp_6_reg_1135_pp0_iter2_reg & ap_const_lv18_20000);
    sub_ln229_fu_352_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(es_exp_fu_282_p4));
    t_fu_957_p4 <= ((ap_const_lv1_0 & out_exp_fu_927_p2) & select_ln303_fu_950_p3);
    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_address0 <= zext_ln292_fu_720_p1(8 - 1 downto 0);

    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter20, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0 <= ap_const_logic_1;
        else 
            table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 <= zext_ln138_fu_668_p1(8 - 1 downto 0);

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0 <= ap_const_logic_1;
        else 
            table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address0 <= zext_ln119_fu_613_p1(8 - 1 downto 0);
    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_address1 <= zext_ln114_fu_608_p1(8 - 1 downto 0);

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0 <= ap_const_logic_1;
        else 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1 <= ap_const_logic_1;
        else 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_835_p4 <= r_exp_2_fu_828_p3(12 downto 10);
    tmp_11_fu_912_p3 <= select_ln224_reg_1094_pp0_iter27_reg(53 downto 53);
    tmp_4_fu_932_p4 <= add_ln297_1_reg_1322(105 downto 54);
    tmp_5_fu_941_p4 <= add_ln297_1_reg_1322(104 downto 53);
    tmp_7_cast_fu_491_p4 <= grp_fu_1064_p3(30 downto 18);
    tmp_8_fu_500_p3 <= grp_fu_1064_p3(30 downto 30);
    tmp_9_fu_815_p3 <= add_ln297_1_fu_809_p2(106 downto 106);
    tmp_fu_344_p3 <= m_exp_fu_312_p2(11 downto 11);
    trunc_ln243_fu_507_p1 <= grp_fu_1064_p3(18 - 1 downto 0);
    trunc_ln255_fu_445_p1 <= m_fix_fu_406_p3(59 - 1 downto 0);
    trunc_ln336_fu_857_p1 <= r_exp_2_fu_828_p3(11 - 1 downto 0);
    xor_ln182_fu_861_p2 <= (es_sign_reg_1075_pp0_iter27_reg xor ap_const_lv1_1);
    xor_ln18_1_fu_999_p2 <= (icmp_ln18_reg_1080_pp0_iter27_reg xor ap_const_lv1_1);
    xor_ln18_fu_876_p2 <= (icmp_ln18_1_reg_1088_pp0_iter27_reg xor ap_const_lv1_1);
    xor_ln309_1_fu_1018_p2 <= (or_ln309_fu_908_p2 xor ap_const_lv1_1);
    xor_ln309_2_fu_1033_p2 <= (or_ln309_2_fu_1029_p2 xor ap_const_lv1_1);
    xor_ln309_fu_983_p2 <= (icmp_ln309_reg_1111_pp0_iter27_reg xor ap_const_lv1_1);
    zext_ln114_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_fu_598_p4),64));
    zext_ln115_1_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_fu_618_p4),36));
    zext_ln115_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_1204),36));
    zext_ln119_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_fu_584_p4),64));
    zext_ln120_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z3_m_1_reg_1230_pp0_iter14_reg),44));
    zext_ln130_1_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1245),36));
    zext_ln130_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_fu_678_p2),44));
    zext_ln138_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_reg_1192_pp0_iter13_reg),64));
    zext_ln145_1_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln145_fu_751_p2),52));
    zext_ln145_2_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_1282),44));
    zext_ln145_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1_fu_734_p5),52));
    zext_ln221_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e_frac_fu_318_p3),54));
    zext_ln229_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln229_1_fu_387_p1),71));
    zext_ln230_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln229_1_reg_1124),64));
    zext_ln292_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_reg_1187_pp0_iter19_reg),64));
    zext_ln297_2_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln297_reg_1317),107));
    zext_ln486_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(es_exp_fu_282_p4),12));
end behav;
