-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Lenet_HW_calculateLayer2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Layer1_Neurons_stream_TVALID : IN STD_LOGIC;
    Layer1_Weights_stream_TVALID : IN STD_LOGIC;
    Layer1_Neurons_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Neurons_stream_TREADY : OUT STD_LOGIC;
    Layer1_Weights_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_stream_TREADY : OUT STD_LOGIC;
    Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
    Layer2_Neurons_CPU_we0 : OUT STD_LOGIC;
    Layer2_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_285_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_285_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_285_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_285_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_285_p_ce : OUT STD_LOGIC;
    grp_fu_289_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_289_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_289_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_289_p_ce : OUT STD_LOGIC;
    grp_fu_163_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_163_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_163_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_163_p_ce : OUT STD_LOGIC;
    grp_generic_tanh_double_s_fu_146_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_generic_tanh_double_s_fu_146_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_generic_tanh_double_s_fu_146_p_ce : OUT STD_LOGIC;
    grp_generic_tanh_double_s_fu_146_p_start : OUT STD_LOGIC;
    grp_generic_tanh_double_s_fu_146_p_ready : IN STD_LOGIC;
    grp_generic_tanh_double_s_fu_146_p_done : IN STD_LOGIC;
    grp_generic_tanh_double_s_fu_146_p_idle : IN STD_LOGIC );
end;


architecture behav of Lenet_HW_calculateLayer2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (25 downto 0) := "00000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (25 downto 0) := "00000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (25 downto 0) := "00000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (25 downto 0) := "00000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (25 downto 0) := "00001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (25 downto 0) := "00010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (25 downto 0) := "00100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (25 downto 0) := "01000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (25 downto 0) := "10000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv64_348 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101001000";
    constant ap_const_lv64_347 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000111";
    constant ap_const_lv64_346 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000110";
    constant ap_const_lv64_345 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000101";
    constant ap_const_lv64_344 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000100";
    constant ap_const_lv64_343 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000011";
    constant ap_const_lv64_342 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000010";
    constant ap_const_lv64_341 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000001";
    constant ap_const_lv64_340 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001101000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_3FE55555571F7693 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100101010101010101010101010111000111110111011010010011";
    constant ap_const_lv64_3FFB74538EF34D6A : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111011011101000101001110001110111100110100110101101010";
    constant ap_const_lv10_3F6 : STD_LOGIC_VECTOR (9 downto 0) := "1111110110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_A9 : STD_LOGIC_VECTOR (9 downto 0) := "0010101001";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal icmp_ln43_reg_1090 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage25 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal Layer1_Neurons_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal Layer1_Weights_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln43_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal reg_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_290 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_295 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln43_reg_1090_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_1090_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_1094 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_1_fu_441_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_1_reg_1106 : STD_LOGIC_VECTOR (3 downto 0);
    signal bitcast_ln55_fu_493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_1_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_24_fu_526_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_973_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln55_2_fu_536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_25_fu_545_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_981_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_reg_1161 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_reg_1161_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_reg_1161_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_reg_1161_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln55_3_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_26_fu_564_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_4_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_27_fu_583_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_5_fu_593_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_28_fu_602_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_6_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_29_fu_621_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_7_fu_631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_30_fu_640_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_8_fu_650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_31_fu_659_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_3_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_9_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_32_fu_678_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_10_fu_688_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_33_fu_697_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_11_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_34_fu_716_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_12_fu_726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_35_fu_735_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_2_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_13_fu_745_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_36_fu_754_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_14_fu_764_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_37_fu_773_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_4_reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_15_fu_783_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_38_fu_792_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_1316 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_16_fu_802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_39_fu_811_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_1_reg_1331 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_17_fu_821_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_40_fu_830_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_2_reg_1346 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_18_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_41_fu_849_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_3_reg_1361 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_19_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_42_fu_868_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_4_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_20_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_43_fu_887_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_1391 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_21_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_44_fu_906_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_1_reg_1406 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_22_fu_916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_45_fu_925_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_2_reg_1421 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_23_fu_935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_46_fu_944_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_3_reg_1436 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_fu_954_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_24_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_4_reg_1451 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_reg_1456 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_assign_reg_1461 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_1466 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul4_reg_1471 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal conv_buff_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_buff_ce0 : STD_LOGIC;
    signal conv_buff_we0 : STD_LOGIC;
    signal conv_buff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_buff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_generic_tanh_double_s_fu_229_ap_ready : STD_LOGIC;
    signal grp_generic_tanh_double_s_fu_229_ap_ce : STD_LOGIC;
    signal ap_block_state7_pp0_stage6_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp384 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp385 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage8_11001_ignoreCallOp386 : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage9_11001_ignoreCallOp387 : BOOLEAN;
    signal ap_block_state11_pp0_stage10_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage10_11001_ignoreCallOp388 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage11_11001_ignoreCallOp389 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage12_11001_ignoreCallOp390 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp391 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp392 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp393 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage16_11001_ignoreCallOp394 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage17_11001_ignoreCallOp395 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage18_11001_ignoreCallOp396 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage19_11001_ignoreCallOp397 : BOOLEAN;
    signal ap_block_state21_pp0_stage20_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage20_11001_ignoreCallOp398 : BOOLEAN;
    signal ap_block_state22_pp0_stage21_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage21_11001_ignoreCallOp399 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage22_11001_ignoreCallOp400 : BOOLEAN;
    signal ap_block_state24_pp0_stage23_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage23_11001_ignoreCallOp401 : BOOLEAN;
    signal ap_block_state25_pp0_stage24_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage24_11001_ignoreCallOp402 : BOOLEAN;
    signal ap_block_state26_pp0_stage25_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage25_11001_ignoreCallOp403 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp405 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp406 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp407 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call204 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp404 : BOOLEAN;
    signal grp_generic_tanh_double_s_fu_229_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln58_fu_969_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_100 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln45_fu_474_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j_fu_104 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln44_fu_449_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_108 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln44_1_fu_377_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_112 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal select_ln43_fu_359_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten12_fu_116 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln43_fu_335_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten12_load : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_fu_249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_fu_461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_1_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_2_fu_522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_3_fu_541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_4_fu_560_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_5_fu_579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_6_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_7_fu_617_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_8_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_9_fu_655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_10_fu_674_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_11_fu_693_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_12_fu_712_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_13_fu_731_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_14_fu_750_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_15_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_16_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_17_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_18_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_19_fu_845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_20_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_21_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_22_fu_902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_23_fu_921_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln54_24_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_256_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln43_1_fu_353_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln44_1_fu_371_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln45_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln40_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_406_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln40_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_fu_430_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_973_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_973_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_973_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_981_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_981_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_240_ce : STD_LOGIC;
    signal grp_fu_244_ce : STD_LOGIC;
    signal grp_fu_256_ce : STD_LOGIC;
    signal grp_fu_973_ce : STD_LOGIC;
    signal grp_fu_981_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter2_stage6 : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage11_00001 : BOOLEAN;
    signal ap_block_pp0_stage13_00001 : BOOLEAN;
    signal ap_block_pp0_stage15_00001 : BOOLEAN;
    signal ap_block_pp0_stage17_00001 : BOOLEAN;
    signal ap_block_pp0_stage19_00001 : BOOLEAN;
    signal ap_block_pp0_stage21_00001 : BOOLEAN;
    signal ap_block_pp0_stage23_00001 : BOOLEAN;
    signal ap_block_pp0_stage25_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_block_pp0_stage12_00001 : BOOLEAN;
    signal ap_block_pp0_stage14_00001 : BOOLEAN;
    signal ap_block_pp0_stage16_00001 : BOOLEAN;
    signal ap_block_pp0_stage18_00001 : BOOLEAN;
    signal ap_block_pp0_stage20_00001 : BOOLEAN;
    signal ap_block_pp0_stage22_00001 : BOOLEAN;
    signal ap_block_pp0_stage24_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_973_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_973_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_981_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Lenet_HW_generic_tanh_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Lenet_HW_fadd_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Lenet_HW_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Lenet_HW_fptrunc_64ns_32_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Lenet_HW_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Lenet_HW_dmul_64ns_64ns_64_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Lenet_HW_mac_muladd_3ns_8ns_4ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Lenet_HW_mac_muladd_4ns_4ns_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Lenet_HW_calculateLayer2_conv_buff_SHIFTREG_AUTO_0R0W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Lenet_HW_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    conv_buff_U : component Lenet_HW_calculateLayer2_conv_buff_SHIFTREG_AUTO_0R0W
    generic map (
        DataWidth => 32,
        AddressRange => 841,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_buff_address0,
        ce0 => conv_buff_ce0,
        we0 => conv_buff_we0,
        d0 => conv_buff_d0,
        q0 => conv_buff_q0);

    fptrunc_64ns_32_1_no_dsp_1_U32 : component Lenet_HW_fptrunc_64ns_32_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => mul4_reg_1471,
        dout => conv2_fu_249_p1);

    fpext_32ns_64_1_no_dsp_1_U33 : component Lenet_HW_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => reg_295,
        dout => conv_fu_253_p1);

    mac_muladd_3ns_8ns_4ns_10_4_1_U35 : component Lenet_HW_mac_muladd_3ns_8ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_973_p0,
        din1 => grp_fu_973_p1,
        din2 => grp_fu_973_p2,
        ce => grp_fu_973_ce,
        dout => grp_fu_973_p3);

    mac_muladd_4ns_4ns_10ns_10_4_1_U36 : component Lenet_HW_mac_muladd_4ns_4ns_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_981_p0,
        din1 => grp_fu_981_p1,
        din2 => grp_fu_973_p3,
        ce => grp_fu_981_ce,
        dout => grp_fu_981_p3);

    flow_control_loop_pipe_sequential_init_U : component Lenet_HW_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage25,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage25)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage25_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage25_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage25_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    grp_generic_tanh_double_s_fu_229_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_generic_tanh_double_s_fu_229_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    grp_generic_tanh_double_s_fu_229_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_generic_tanh_double_s_fu_229_ap_ready = ap_const_logic_1)) then 
                    grp_generic_tanh_double_s_fu_229_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage6) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage6) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    i_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln43_fu_329_p2 = ap_const_lv1_0))) then 
                    i_fu_112 <= select_ln43_fu_359_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_112 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten12_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln43_fu_329_p2 = ap_const_lv1_0))) then 
                    indvar_flatten12_fu_116 <= add_ln43_fu_335_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten12_fu_116 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln43_fu_329_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_108 <= select_ln44_1_fu_377_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_108 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                j_fu_104 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j_fu_104 <= select_ln44_fu_449_p3;
            end if; 
        end if;
    end process;

    k_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                k_fu_100 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                k_fu_100 <= add_ln45_fu_474_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln58_reg_1161 <= grp_fu_981_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln58_reg_1161_pp0_iter1_reg <= add_ln58_reg_1161;
                add_ln58_reg_1161_pp0_iter2_reg <= add_ln58_reg_1161_pp0_iter1_reg;
                add_ln58_reg_1161_pp0_iter3_reg <= add_ln58_reg_1161_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                conv_reg_1456 <= conv_fu_253_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln43_reg_1090 <= icmp_ln43_fu_329_p2;
                icmp_ln43_reg_1090_pp0_iter1_reg <= icmp_ln43_reg_1090;
                icmp_ln43_reg_1090_pp0_iter2_reg <= icmp_ln43_reg_1090_pp0_iter1_reg;
                icmp_ln44_reg_1094 <= icmp_ln44_fu_347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul4_reg_1471 <= grp_fu_163_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                mul_1_3_reg_1226 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                mul_2_2_reg_1276 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then
                mul_2_4_reg_1301 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then
                mul_2_reg_1251 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then
                mul_3_1_reg_1331 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then
                mul_3_2_reg_1346 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then
                mul_3_3_reg_1361 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then
                mul_3_4_reg_1376 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then
                mul_3_reg_1316 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then
                mul_4_1_reg_1406 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then
                mul_4_2_reg_1421 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_4_3_reg_1436 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_4_4_reg_1451 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then
                mul_4_reg_1391 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_262 <= Layer1_Weights_stream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_266 <= Layer1_Weights_stream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_270 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_275 <= grp_fu_285_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_280 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_285 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_290 <= grp_fu_289_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_295 <= grp_fu_285_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln40_1_reg_1106 <= select_ln40_1_fu_441_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_reg_1466 <= grp_generic_tanh_double_s_fu_146_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                x_assign_reg_1461 <= grp_fu_163_p_dout0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage25_subdone, ap_block_pp0_stage6_subdone, ap_condition_exit_pp0_iter2_stage6, ap_idle_pp0_0to1, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage6) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Layer1_Neurons_stream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage25) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and 
    (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and 
    (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage3) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Layer1_Neurons_stream_TDATA_blk_n <= Layer1_Neurons_stream_TVALID;
        else 
            Layer1_Neurons_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Layer1_Neurons_stream_TREADY_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln43_reg_1090 
    = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage11_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            Layer1_Neurons_stream_TREADY <= ap_const_logic_1;
        else 
            Layer1_Neurons_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    Layer1_Weights_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, icmp_ln43_fu_329_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln43_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage25) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and 
    (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln43_reg_1090 = ap_const_lv1_0) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or 
    ((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Layer1_Weights_stream_TDATA_blk_n <= Layer1_Weights_stream_TVALID;
        else 
            Layer1_Weights_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Layer1_Weights_stream_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, icmp_ln43_fu_329_p2, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln43_reg_1090 
    = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage11_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln43_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            Layer1_Weights_stream_TREADY <= ap_const_logic_1;
        else 
            Layer1_Weights_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    Layer2_Neurons_CPU_address0 <= zext_ln58_fu_969_p1(10 - 1 downto 0);

    Layer2_Neurons_CPU_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_1;
        else 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Layer2_Neurons_CPU_d0 <= conv2_fu_249_p1;

    Layer2_Neurons_CPU_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_1;
        else 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln43_1_fu_353_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv3_1));
    add_ln43_fu_335_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten12_load) + unsigned(ap_const_lv10_1));
    add_ln44_1_fu_371_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    add_ln44_fu_430_p2 <= std_logic_vector(unsigned(select_ln40_fu_406_p3) + unsigned(ap_const_lv4_1));
    add_ln45_fu_474_p2 <= std_logic_vector(unsigned(select_ln40_1_fu_441_p3) + unsigned(ap_const_lv4_1));
    and_ln40_fu_424_p2 <= (xor_ln40_fu_413_p2 and icmp_ln45_fu_418_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp404_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0_ignore_call204)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp404 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;


    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;


    ap_block_pp0_stage10_11001_ignoreCallOp388_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0_ignore_call204)
    begin
                ap_block_pp0_stage10_11001_ignoreCallOp388 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;


    ap_block_pp0_stage11_11001_ignoreCallOp389_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0_ignore_call204)
    begin
                ap_block_pp0_stage11_11001_ignoreCallOp389 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0));
    end process;


    ap_block_pp0_stage12_11001_ignoreCallOp390_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0_ignore_call204)
    begin
                ap_block_pp0_stage12_11001_ignoreCallOp390 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;


    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;


    ap_block_pp0_stage13_11001_ignoreCallOp391_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0_ignore_call204)
    begin
                ap_block_pp0_stage13_11001_ignoreCallOp391 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;


    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;


    ap_block_pp0_stage14_11001_ignoreCallOp392_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0_ignore_call204)
    begin
                ap_block_pp0_stage14_11001_ignoreCallOp392 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;


    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;


    ap_block_pp0_stage15_11001_ignoreCallOp393_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0_ignore_call204)
    begin
                ap_block_pp0_stage15_11001_ignoreCallOp393 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;


    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;


    ap_block_pp0_stage16_11001_ignoreCallOp394_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0_ignore_call204)
    begin
                ap_block_pp0_stage16_11001_ignoreCallOp394 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0));
    end process;


    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0));
    end process;


    ap_block_pp0_stage17_11001_ignoreCallOp395_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0_ignore_call204)
    begin
                ap_block_pp0_stage17_11001_ignoreCallOp395 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;


    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;


    ap_block_pp0_stage18_11001_ignoreCallOp396_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0_ignore_call204)
    begin
                ap_block_pp0_stage18_11001_ignoreCallOp396 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage19_11001_ignoreCallOp397_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0_ignore_call204)
    begin
                ap_block_pp0_stage19_11001_ignoreCallOp397 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage1_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state2_pp0_stage1_iter0)
    begin
                ap_block_pp0_stage1_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state2_pp0_stage1_iter0)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp405_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state2_pp0_stage1_iter0_ignore_call204)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp405 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state2_pp0_stage1_iter0)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;


    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;


    ap_block_pp0_stage20_11001_ignoreCallOp398_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0_ignore_call204)
    begin
                ap_block_pp0_stage20_11001_ignoreCallOp398 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;


    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;


    ap_block_pp0_stage21_11001_ignoreCallOp399_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0_ignore_call204)
    begin
                ap_block_pp0_stage21_11001_ignoreCallOp399 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0));
    end process;


    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0));
    end process;


    ap_block_pp0_stage22_11001_ignoreCallOp400_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0_ignore_call204)
    begin
                ap_block_pp0_stage22_11001_ignoreCallOp400 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;


    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;


    ap_block_pp0_stage23_11001_ignoreCallOp401_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0_ignore_call204)
    begin
                ap_block_pp0_stage23_11001_ignoreCallOp401 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage24_11001_ignoreCallOp402_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0_ignore_call204)
    begin
                ap_block_pp0_stage24_11001_ignoreCallOp402 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;

        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0));
    end process;


    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0));
    end process;


    ap_block_pp0_stage25_11001_ignoreCallOp403_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0_ignore_call204)
    begin
                ap_block_pp0_stage25_11001_ignoreCallOp403 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_pp0_stage2_iter0)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0));
    end process;


    ap_block_pp0_stage2_11001_ignoreCallOp406_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_pp0_stage2_iter0_ignore_call204)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp406 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_pp0_stage2_iter0)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_pp0_stage3_iter0)
    begin
                ap_block_pp0_stage3_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_pp0_stage3_iter0)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0));
    end process;


    ap_block_pp0_stage3_11001_ignoreCallOp407_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_pp0_stage3_iter0_ignore_call204)
    begin
                ap_block_pp0_stage3_11001_ignoreCallOp407 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_pp0_stage3_iter0)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_pp0_stage4_iter0)
    begin
                ap_block_pp0_stage4_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage4_iter0));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_pp0_stage4_iter0)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage4_iter0));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_pp0_stage4_iter0)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage4_iter0));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state6_pp0_stage5_iter0)
    begin
                ap_block_pp0_stage5_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage5_iter0));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state6_pp0_stage5_iter0)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage5_iter0));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state6_pp0_stage5_iter0)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage5_iter0));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_pp0_stage6_iter0)
    begin
                ap_block_pp0_stage6_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_pp0_stage6_iter0)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0));
    end process;


    ap_block_pp0_stage6_11001_ignoreCallOp384_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_pp0_stage6_iter0_ignore_call204)
    begin
                ap_block_pp0_stage6_11001_ignoreCallOp384 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_pp0_stage6_iter0)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state8_pp0_stage7_iter0)
    begin
                ap_block_pp0_stage7_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state8_pp0_stage7_iter0)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0));
    end process;


    ap_block_pp0_stage7_11001_ignoreCallOp385_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state8_pp0_stage7_iter0_ignore_call204)
    begin
                ap_block_pp0_stage7_11001_ignoreCallOp385 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state8_pp0_stage7_iter0)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state9_pp0_stage8_iter0)
    begin
                ap_block_pp0_stage8_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state9_pp0_stage8_iter0)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0));
    end process;


    ap_block_pp0_stage8_11001_ignoreCallOp386_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state9_pp0_stage8_iter0_ignore_call204)
    begin
                ap_block_pp0_stage8_11001_ignoreCallOp386 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state9_pp0_stage8_iter0)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0));
    end process;


    ap_block_pp0_stage9_11001_ignoreCallOp387_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0_ignore_call204)
    begin
                ap_block_pp0_stage9_11001_ignoreCallOp387 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0_ignore_call204));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state10_pp0_stage9_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state10_pp0_stage9_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state10_pp0_stage9_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state11_pp0_stage10_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state11_pp0_stage10_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state11_pp0_stage10_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state12_pp0_stage11_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state12_pp0_stage11_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state12_pp0_stage11_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state13_pp0_stage12_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state13_pp0_stage12_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state13_pp0_stage12_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state14_pp0_stage13_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state14_pp0_stage13_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state14_pp0_stage13_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state15_pp0_stage14_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state15_pp0_stage14_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state15_pp0_stage14_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state16_pp0_stage15_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state16_pp0_stage15_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state16_pp0_stage15_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state17_pp0_stage16_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state17_pp0_stage16_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state17_pp0_stage16_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state18_pp0_stage17_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state18_pp0_stage17_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state18_pp0_stage17_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state19_pp0_stage18_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state19_pp0_stage18_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state19_pp0_stage18_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state19_pp0_stage18_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(Layer1_Weights_stream_TVALID, icmp_ln43_fu_329_p2)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((icmp_ln43_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call204_assign_proc : process(Layer1_Weights_stream_TVALID, icmp_ln43_fu_329_p2)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call204 <= ((icmp_ln43_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID));
    end process;


    ap_block_state20_pp0_stage19_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state20_pp0_stage19_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state20_pp0_stage19_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state20_pp0_stage19_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state21_pp0_stage20_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state21_pp0_stage20_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state21_pp0_stage20_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state21_pp0_stage20_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state22_pp0_stage21_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state22_pp0_stage21_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state22_pp0_stage21_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state22_pp0_stage21_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state23_pp0_stage22_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state23_pp0_stage22_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state23_pp0_stage22_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state23_pp0_stage22_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state24_pp0_stage23_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state24_pp0_stage23_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state24_pp0_stage23_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state24_pp0_stage23_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state25_pp0_stage24_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state25_pp0_stage24_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state25_pp0_stage24_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state25_pp0_stage24_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state26_pp0_stage25_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state26_pp0_stage25_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state26_pp0_stage25_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state26_pp0_stage25_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state2_pp0_stage1_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state2_pp0_stage1_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state3_pp0_stage2_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state3_pp0_stage2_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state4_pp0_stage3_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state4_pp0_stage3_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state5_pp0_stage4_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state6_pp0_stage5_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state7_pp0_stage6_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state7_pp0_stage6_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state7_pp0_stage6_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state8_pp0_stage7_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state8_pp0_stage7_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state8_pp0_stage7_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state9_pp0_stage8_iter0 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_block_state9_pp0_stage8_iter0_ignore_call204_assign_proc : process(Layer1_Neurons_stream_TVALID, icmp_ln43_reg_1090, Layer1_Weights_stream_TVALID)
    begin
                ap_block_state9_pp0_stage8_iter0_ignore_call204 <= (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Weights_stream_TVALID)) or ((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_const_logic_0 = Layer1_Neurons_stream_TVALID)));
    end process;


    ap_condition_exit_pp0_iter0_stage25_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_block_pp0_stage25_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage25_subdone) and (icmp_ln43_reg_1090 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            ap_condition_exit_pp0_iter0_stage25 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage6, icmp_ln43_reg_1090_pp0_iter2_reg, ap_block_pp0_stage6_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (icmp_ln43_reg_1090_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_exit_pp0_iter2_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage25;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage25_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_112)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_112;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten12_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten12_fu_116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten12_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten12_load <= indvar_flatten12_fu_116;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_108)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_108;
        end if; 
    end process;

    bitcast_ln54_10_fu_674_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_11_fu_693_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_12_fu_712_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_13_fu_731_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_14_fu_750_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_15_fu_769_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_16_fu_788_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_17_fu_807_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_18_fu_826_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_19_fu_845_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_1_fu_498_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_20_fu_864_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_21_fu_883_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_22_fu_902_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_23_fu_921_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_24_fu_940_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_2_fu_522_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_3_fu_541_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_4_fu_560_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_5_fu_579_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_6_fu_598_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_7_fu_617_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_8_fu_636_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_9_fu_655_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln54_fu_461_p1 <= Layer1_Neurons_stream_TDATA;
    bitcast_ln55_10_fu_688_p1 <= reg_262;
    bitcast_ln55_11_fu_707_p1 <= reg_262;
    bitcast_ln55_12_fu_726_p1 <= reg_262;
    bitcast_ln55_13_fu_745_p1 <= reg_262;
    bitcast_ln55_14_fu_764_p1 <= reg_262;
    bitcast_ln55_15_fu_783_p1 <= reg_262;
    bitcast_ln55_16_fu_802_p1 <= reg_262;
    bitcast_ln55_17_fu_821_p1 <= reg_262;
    bitcast_ln55_18_fu_840_p1 <= reg_262;
    bitcast_ln55_19_fu_859_p1 <= reg_262;
    bitcast_ln55_1_fu_517_p1 <= reg_266;
    bitcast_ln55_20_fu_878_p1 <= reg_262;
    bitcast_ln55_21_fu_897_p1 <= reg_262;
    bitcast_ln55_22_fu_916_p1 <= reg_262;
    bitcast_ln55_23_fu_935_p1 <= reg_262;
    bitcast_ln55_24_fu_964_p1 <= reg_262;
    bitcast_ln55_2_fu_536_p1 <= reg_262;
    bitcast_ln55_3_fu_555_p1 <= reg_262;
    bitcast_ln55_4_fu_574_p1 <= reg_262;
    bitcast_ln55_5_fu_593_p1 <= reg_262;
    bitcast_ln55_6_fu_612_p1 <= reg_262;
    bitcast_ln55_7_fu_631_p1 <= reg_262;
    bitcast_ln55_8_fu_650_p1 <= reg_262;
    bitcast_ln55_9_fu_669_p1 <= reg_262;
    bitcast_ln55_fu_493_p1 <= reg_266;

    conv_buff_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_buff_address0 <= ap_const_lv64_340(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage25) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)))) then 
            conv_buff_address0 <= ap_const_lv64_341(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage24) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage20) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)))) then 
            conv_buff_address0 <= ap_const_lv64_342(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage23) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            conv_buff_address0 <= ap_const_lv64_343(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            conv_buff_address0 <= ap_const_lv64_344(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            conv_buff_address0 <= ap_const_lv64_345(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            conv_buff_address0 <= ap_const_lv64_346(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            conv_buff_address0 <= ap_const_lv64_347(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            conv_buff_address0 <= ap_const_lv64_348(10 - 1 downto 0);
        else 
            conv_buff_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_buff_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln43_reg_1090 
    = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage11_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            conv_buff_ce0 <= ap_const_logic_1;
        else 
            conv_buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_buff_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, bitcast_ln54_fu_461_p1, bitcast_ln54_1_fu_498_p1, bitcast_ln54_2_fu_522_p1, bitcast_ln54_3_fu_541_p1, bitcast_ln54_4_fu_560_p1, bitcast_ln54_5_fu_579_p1, bitcast_ln54_6_fu_598_p1, bitcast_ln54_7_fu_617_p1, bitcast_ln54_8_fu_636_p1, bitcast_ln54_9_fu_655_p1, bitcast_ln54_10_fu_674_p1, bitcast_ln54_11_fu_693_p1, bitcast_ln54_12_fu_712_p1, bitcast_ln54_13_fu_731_p1, bitcast_ln54_14_fu_750_p1, bitcast_ln54_15_fu_769_p1, bitcast_ln54_16_fu_788_p1, bitcast_ln54_17_fu_807_p1, bitcast_ln54_18_fu_826_p1, bitcast_ln54_19_fu_845_p1, bitcast_ln54_20_fu_864_p1, bitcast_ln54_21_fu_883_p1, bitcast_ln54_22_fu_902_p1, bitcast_ln54_23_fu_921_p1, bitcast_ln54_24_fu_940_p1)
    begin
        if (((icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                conv_buff_d0 <= bitcast_ln54_24_fu_940_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
                conv_buff_d0 <= bitcast_ln54_23_fu_921_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
                conv_buff_d0 <= bitcast_ln54_22_fu_902_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                conv_buff_d0 <= bitcast_ln54_21_fu_883_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                conv_buff_d0 <= bitcast_ln54_20_fu_864_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
                conv_buff_d0 <= bitcast_ln54_19_fu_845_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                conv_buff_d0 <= bitcast_ln54_18_fu_826_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
                conv_buff_d0 <= bitcast_ln54_17_fu_807_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
                conv_buff_d0 <= bitcast_ln54_16_fu_788_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                conv_buff_d0 <= bitcast_ln54_15_fu_769_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                conv_buff_d0 <= bitcast_ln54_14_fu_750_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
                conv_buff_d0 <= bitcast_ln54_13_fu_731_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                conv_buff_d0 <= bitcast_ln54_12_fu_712_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                conv_buff_d0 <= bitcast_ln54_11_fu_693_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                conv_buff_d0 <= bitcast_ln54_10_fu_674_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                conv_buff_d0 <= bitcast_ln54_9_fu_655_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                conv_buff_d0 <= bitcast_ln54_8_fu_636_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                conv_buff_d0 <= bitcast_ln54_7_fu_617_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv_buff_d0 <= bitcast_ln54_6_fu_598_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv_buff_d0 <= bitcast_ln54_5_fu_579_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv_buff_d0 <= bitcast_ln54_4_fu_560_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_buff_d0 <= bitcast_ln54_3_fu_541_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_buff_d0 <= bitcast_ln54_2_fu_522_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_buff_d0 <= bitcast_ln54_1_fu_498_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_buff_d0 <= bitcast_ln54_fu_461_p1;
            else 
                conv_buff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            conv_buff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_buff_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln43_reg_1090, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln43_reg_1090 
    = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage11_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln43_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            conv_buff_we0 <= ap_const_logic_1;
        else 
            conv_buff_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_163_p_ce <= grp_fu_256_ce;
    grp_fu_163_p_din0 <= grp_fu_256_p0;
    grp_fu_163_p_din1 <= grp_fu_256_p1;

    grp_fu_240_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_240_ce <= ap_const_logic_1;
        else 
            grp_fu_240_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_240_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, reg_275, reg_295, somme_fu_512_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_240_p0 <= reg_295;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_240_p0 <= reg_275;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_240_p0 <= somme_fu_512_p1;
        else 
            grp_fu_240_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_240_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, reg_270, reg_280, reg_285, reg_290, mul_1_3_reg_1226, mul_2_reg_1251, mul_2_2_reg_1276, mul_2_4_reg_1301, mul_3_reg_1316, mul_3_1_reg_1331, mul_3_2_reg_1346, mul_3_3_reg_1361, mul_3_4_reg_1376, mul_4_reg_1391, mul_4_1_reg_1406, mul_4_2_reg_1421, mul_4_3_reg_1436, mul_4_4_reg_1451, grp_fu_289_p_dout0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_240_p1 <= mul_4_4_reg_1451;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            grp_fu_240_p1 <= mul_4_3_reg_1436;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            grp_fu_240_p1 <= mul_4_2_reg_1421;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_240_p1 <= mul_4_1_reg_1406;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            grp_fu_240_p1 <= mul_4_reg_1391;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_240_p1 <= mul_3_4_reg_1376;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_240_p1 <= mul_3_3_reg_1361;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_240_p1 <= mul_3_2_reg_1346;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_240_p1 <= mul_3_1_reg_1331;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_240_p1 <= mul_3_reg_1316;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_240_p1 <= mul_2_4_reg_1301;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_240_p1 <= mul_2_2_reg_1276;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_240_p1 <= mul_2_reg_1251;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_240_p1 <= mul_1_3_reg_1226;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_240_p1 <= reg_290;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_240_p1 <= reg_285;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_240_p1 <= reg_280;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_240_p1 <= reg_270;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_240_p1 <= grp_fu_289_p_dout0;
        else 
            grp_fu_240_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_244_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 
    = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_244_ce <= ap_const_logic_1;
        else 
            grp_fu_244_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_244_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, p_24_fu_526_p4, p_25_fu_545_p4, p_26_fu_564_p4, p_27_fu_583_p4, p_28_fu_602_p4, p_29_fu_621_p4, p_30_fu_640_p4, p_31_fu_659_p4, p_32_fu_678_p4, p_33_fu_697_p4, p_34_fu_716_p4, p_35_fu_735_p4, p_36_fu_754_p4, p_37_fu_773_p4, p_38_fu_792_p4, p_39_fu_811_p4, p_40_fu_830_p4, p_41_fu_849_p4, p_42_fu_868_p4, p_43_fu_887_p4, p_44_fu_906_p4, p_45_fu_925_p4, p_46_fu_944_p4, p_0_fu_954_p4, conv_buff_q0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_244_p0 <= p_0_fu_954_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            grp_fu_244_p0 <= p_46_fu_944_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            grp_fu_244_p0 <= p_45_fu_925_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_244_p0 <= p_44_fu_906_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            grp_fu_244_p0 <= p_43_fu_887_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            grp_fu_244_p0 <= p_42_fu_868_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_244_p0 <= p_41_fu_849_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_244_p0 <= p_40_fu_830_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            grp_fu_244_p0 <= p_39_fu_811_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
            grp_fu_244_p0 <= p_38_fu_792_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_244_p0 <= p_37_fu_773_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_244_p0 <= p_36_fu_754_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_244_p0 <= p_35_fu_735_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_244_p0 <= p_34_fu_716_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_244_p0 <= p_33_fu_697_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_244_p0 <= p_32_fu_678_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_244_p0 <= p_31_fu_659_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_244_p0 <= p_30_fu_640_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_244_p0 <= p_29_fu_621_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_244_p0 <= p_28_fu_602_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_244_p0 <= p_27_fu_583_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_244_p0 <= p_26_fu_564_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_244_p0 <= p_25_fu_545_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_244_p0 <= p_24_fu_526_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_244_p0 <= conv_buff_q0;
        else 
            grp_fu_244_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_244_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, bitcast_ln55_fu_493_p1, bitcast_ln55_1_fu_517_p1, bitcast_ln55_2_fu_536_p1, bitcast_ln55_3_fu_555_p1, bitcast_ln55_4_fu_574_p1, bitcast_ln55_5_fu_593_p1, bitcast_ln55_6_fu_612_p1, bitcast_ln55_7_fu_631_p1, bitcast_ln55_8_fu_650_p1, bitcast_ln55_9_fu_669_p1, bitcast_ln55_10_fu_688_p1, bitcast_ln55_11_fu_707_p1, bitcast_ln55_12_fu_726_p1, bitcast_ln55_13_fu_745_p1, bitcast_ln55_14_fu_764_p1, bitcast_ln55_15_fu_783_p1, bitcast_ln55_16_fu_802_p1, bitcast_ln55_17_fu_821_p1, bitcast_ln55_18_fu_840_p1, bitcast_ln55_19_fu_859_p1, bitcast_ln55_20_fu_878_p1, bitcast_ln55_21_fu_897_p1, bitcast_ln55_22_fu_916_p1, bitcast_ln55_23_fu_935_p1, bitcast_ln55_24_fu_964_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_244_p1 <= bitcast_ln55_24_fu_964_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            grp_fu_244_p1 <= bitcast_ln55_23_fu_935_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            grp_fu_244_p1 <= bitcast_ln55_22_fu_916_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_244_p1 <= bitcast_ln55_21_fu_897_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            grp_fu_244_p1 <= bitcast_ln55_20_fu_878_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            grp_fu_244_p1 <= bitcast_ln55_19_fu_859_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_244_p1 <= bitcast_ln55_18_fu_840_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_244_p1 <= bitcast_ln55_17_fu_821_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            grp_fu_244_p1 <= bitcast_ln55_16_fu_802_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
            grp_fu_244_p1 <= bitcast_ln55_15_fu_783_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_244_p1 <= bitcast_ln55_14_fu_764_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_244_p1 <= bitcast_ln55_13_fu_745_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_244_p1 <= bitcast_ln55_12_fu_726_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_244_p1 <= bitcast_ln55_11_fu_707_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_244_p1 <= bitcast_ln55_10_fu_688_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_244_p1 <= bitcast_ln55_9_fu_669_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_244_p1 <= bitcast_ln55_8_fu_650_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_244_p1 <= bitcast_ln55_7_fu_631_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_244_p1 <= bitcast_ln55_6_fu_612_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_244_p1 <= bitcast_ln55_5_fu_593_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_244_p1 <= bitcast_ln55_4_fu_574_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_244_p1 <= bitcast_ln55_3_fu_555_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_244_p1 <= bitcast_ln55_2_fu_536_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_244_p1 <= bitcast_ln55_1_fu_517_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_244_p1 <= bitcast_ln55_fu_493_p1;
        else 
            grp_fu_244_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_256_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_256_ce <= ap_const_logic_1;
        else 
            grp_fu_256_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_256_p0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, conv_reg_1456, tmp_reg_1466)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_256_p0 <= tmp_reg_1466;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_256_p0 <= conv_reg_1456;
        else 
            grp_fu_256_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_256_p1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_256_p1 <= ap_const_lv64_3FFB74538EF34D6A;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_256_p1 <= ap_const_lv64_3FE55555571F7693;
        else 
            grp_fu_256_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_285_p_ce <= grp_fu_240_ce;
    grp_fu_285_p_din0 <= grp_fu_240_p0;
    grp_fu_285_p_din1 <= grp_fu_240_p1;
    grp_fu_285_p_opcode <= ap_const_lv2_0;
    grp_fu_289_p_ce <= grp_fu_244_ce;
    grp_fu_289_p_din0 <= grp_fu_244_p0;
    grp_fu_289_p_din1 <= grp_fu_244_p1;

    grp_fu_973_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_973_ce <= ap_const_logic_1;
        else 
            grp_fu_973_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_973_p0 <= grp_fu_973_p00(3 - 1 downto 0);
    grp_fu_973_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_fu_359_p3),10));
    grp_fu_973_p1 <= ap_const_lv10_A9(8 - 1 downto 0);
    grp_fu_973_p2 <= grp_fu_973_p20(4 - 1 downto 0);
    grp_fu_973_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_1_reg_1106),10));

    grp_fu_981_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_981_ce <= ap_const_logic_1;
        else 
            grp_fu_981_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_981_p0 <= grp_fu_981_p00(4 - 1 downto 0);
    grp_fu_981_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_fu_449_p3),8));
    grp_fu_981_p1 <= ap_const_lv8_D(4 - 1 downto 0);
    grp_generic_tanh_double_s_fu_146_p_ce <= grp_generic_tanh_double_s_fu_229_ap_ce;
    grp_generic_tanh_double_s_fu_146_p_din1 <= x_assign_reg_1461;
    grp_generic_tanh_double_s_fu_146_p_start <= grp_generic_tanh_double_s_fu_229_ap_start_reg;

    grp_generic_tanh_double_s_fu_229_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage6_11001_ignoreCallOp384, ap_block_pp0_stage7_11001_ignoreCallOp385, ap_block_pp0_stage8_11001_ignoreCallOp386, ap_block_pp0_stage9_11001_ignoreCallOp387, ap_block_pp0_stage10_11001_ignoreCallOp388, ap_block_pp0_stage11_11001_ignoreCallOp389, ap_block_pp0_stage12_11001_ignoreCallOp390, ap_block_pp0_stage13_11001_ignoreCallOp391, ap_block_pp0_stage14_11001_ignoreCallOp392, ap_block_pp0_stage15_11001_ignoreCallOp393, ap_block_pp0_stage16_11001_ignoreCallOp394, ap_block_pp0_stage17_11001_ignoreCallOp395, ap_block_pp0_stage18_11001_ignoreCallOp396, ap_block_pp0_stage19_11001_ignoreCallOp397, ap_block_pp0_stage20_11001_ignoreCallOp398, ap_block_pp0_stage21_11001_ignoreCallOp399, ap_block_pp0_stage22_11001_ignoreCallOp400, ap_block_pp0_stage23_11001_ignoreCallOp401, ap_block_pp0_stage24_11001_ignoreCallOp402, ap_block_pp0_stage25_11001_ignoreCallOp403, ap_block_pp0_stage1_11001_ignoreCallOp405, ap_block_pp0_stage2_11001_ignoreCallOp406, ap_block_pp0_stage3_11001_ignoreCallOp407, ap_block_pp0_stage0_11001_ignoreCallOp404)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp407) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp406) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp405) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp404) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001_ignoreCallOp403) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001_ignoreCallOp402) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001_ignoreCallOp401) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001_ignoreCallOp400) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001_ignoreCallOp399) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001_ignoreCallOp398) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001_ignoreCallOp397) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001_ignoreCallOp396) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001_ignoreCallOp395) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001_ignoreCallOp394) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001_ignoreCallOp393) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001_ignoreCallOp392) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001_ignoreCallOp391) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001_ignoreCallOp390) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001_ignoreCallOp389) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001_ignoreCallOp388) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001_ignoreCallOp387) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001_ignoreCallOp386) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp385) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp384) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_generic_tanh_double_s_fu_229_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_tanh_double_s_fu_229_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_tanh_double_s_fu_229_ap_ready <= grp_generic_tanh_double_s_fu_146_p_ready;
    icmp_ln43_fu_329_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten12_load = ap_const_lv10_3F6) else "0";
    icmp_ln44_fu_347_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_A9) else "0";
    icmp_ln45_fu_418_p2 <= "1" when (k_fu_100 = ap_const_lv4_D) else "0";
    or_ln40_fu_436_p2 <= (icmp_ln44_reg_1094 or and_ln40_fu_424_p2);
    p_0_fu_954_p4 <= conv_buff_q0;
    p_24_fu_526_p4 <= conv_buff_q0;
    p_25_fu_545_p4 <= conv_buff_q0;
    p_26_fu_564_p4 <= conv_buff_q0;
    p_27_fu_583_p4 <= conv_buff_q0;
    p_28_fu_602_p4 <= conv_buff_q0;
    p_29_fu_621_p4 <= conv_buff_q0;
    p_30_fu_640_p4 <= conv_buff_q0;
    p_31_fu_659_p4 <= conv_buff_q0;
    p_32_fu_678_p4 <= conv_buff_q0;
    p_33_fu_697_p4 <= conv_buff_q0;
    p_34_fu_716_p4 <= conv_buff_q0;
    p_35_fu_735_p4 <= conv_buff_q0;
    p_36_fu_754_p4 <= conv_buff_q0;
    p_37_fu_773_p4 <= conv_buff_q0;
    p_38_fu_792_p4 <= conv_buff_q0;
    p_39_fu_811_p4 <= conv_buff_q0;
    p_40_fu_830_p4 <= conv_buff_q0;
    p_41_fu_849_p4 <= conv_buff_q0;
    p_42_fu_868_p4 <= conv_buff_q0;
    p_43_fu_887_p4 <= conv_buff_q0;
    p_44_fu_906_p4 <= conv_buff_q0;
    p_45_fu_925_p4 <= conv_buff_q0;
    p_46_fu_944_p4 <= conv_buff_q0;
    select_ln40_1_fu_441_p3 <= 
        ap_const_lv4_0 when (or_ln40_fu_436_p2(0) = '1') else 
        k_fu_100;
    select_ln40_fu_406_p3 <= 
        ap_const_lv4_0 when (icmp_ln44_reg_1094(0) = '1') else 
        j_fu_104;
    select_ln43_fu_359_p3 <= 
        add_ln43_1_fu_353_p2 when (icmp_ln44_fu_347_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln44_1_fu_377_p3 <= 
        ap_const_lv8_1 when (icmp_ln44_fu_347_p2(0) = '1') else 
        add_ln44_1_fu_371_p2;
    select_ln44_fu_449_p3 <= 
        add_ln44_fu_430_p2 when (and_ln40_fu_424_p2(0) = '1') else 
        select_ln40_fu_406_p3;
    somme_fu_512_p1 <= reg_262;
    xor_ln40_fu_413_p2 <= (icmp_ln44_reg_1094 xor ap_const_lv1_1);
    zext_ln58_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_reg_1161_pp0_iter3_reg),64));
end behav;
