==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.376 seconds; current allocated memory: 0.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.351 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.343 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.374 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.104 seconds; current allocated memory: 121.469 MB.
INFO: [HLS 200-10] Analyzing design file 'CNN_lenet5/calculateLayer2.cpp' ... 
WARNING: [HLS 207-989] 'LENET5_H' is used as a header guard here, followed by #define of a different macro (CNN_lenet5/lenet5.h:1:9)
INFO: [HLS 207-923] 'LENET5H' is defined here; did you mean 'LENET5_H'? (CNN_lenet5/lenet5.h:2:9)
INFO: [HLS 200-10] Analyzing design file 'CNN_lenet5/calculateLayer3.cpp' ... 
WARNING: [HLS 207-989] 'LENET5_H' is used as a header guard here, followed by #define of a different macro (CNN_lenet5/lenet5.h:1:9)
INFO: [HLS 207-923] 'LENET5H' is defined here; did you mean 'LENET5_H'? (CNN_lenet5/lenet5.h:2:9)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.372 seconds; current allocated memory: 123.379 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,353 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,079 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,106 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,796 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,687 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,687 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,534 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,846 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_23_4' is marked as complete unroll implied by the pipeline pragma (CNN_lenet5/calculateLayer3.cpp:23:21)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_5' is marked as complete unroll implied by the pipeline pragma (CNN_lenet5/calculateLayer3.cpp:24:22)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_23_4' (CNN_lenet5/calculateLayer3.cpp:23:21) in function 'calculateLayer3' completely with a factor of 5 (CNN_lenet5/calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_5' (CNN_lenet5/calculateLayer3.cpp:24:22) in function 'calculateLayer3' completely with a factor of 5 (CNN_lenet5/calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (CNN_lenet5/calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (CNN_lenet5/calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.787 seconds; current allocated memory: 126.000 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 126.000 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 138.176 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.124 seconds; current allocated memory: 143.539 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.63 seconds; current allocated memory: 174.707 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_19_2'(CNN_lenet5/calculateLayer3.cpp:19:19) and 'VITIS_LOOP_20_3'(CNN_lenet5/calculateLayer3.cpp:20:20) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_2' (CNN_lenet5/calculateLayer3.cpp:19:19) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_18_1' (CNN_lenet5/calculateLayer3.cpp:18:18) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.57 seconds; current allocated memory: 197.273 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.561 seconds; current allocated memory: 202.445 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.115 seconds; current allocated memory: 204.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 32, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 204.969 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 205.312 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_1', CNN_lenet5/calculateLayer3.cpp:25) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:25) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_2', CNN_lenet5/calculateLayer3.cpp:26) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:26) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_3', CNN_lenet5/calculateLayer3.cpp:27) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:27) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_4', CNN_lenet5/calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_130', CNN_lenet5/calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_145', CNN_lenet5/calculateLayer3.cpp:25) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:25) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_149', CNN_lenet5/calculateLayer3.cpp:29) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:29) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 150, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_150', CNN_lenet5/calculateLayer3.cpp:30) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:30) and axis read operation ('Layer2_Weights_CPU_read', CNN_lenet5/calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:22).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 151, Depth = 343, loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 9.468 seconds; current allocated memory: 260.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.67 seconds; current allocated memory: 260.184 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.657 seconds; current allocated memory: 260.184 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_3_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.511 seconds; current allocated memory: 0.340 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 122.715 MB.
INFO: [HLS 200-10] Analyzing design file 'CNN_lenet5/calculateLayer2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'CNN_lenet5/calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.376 seconds; current allocated memory: 124.887 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,353 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,079 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,106 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,796 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,687 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,687 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,534 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,846 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_23_4' is marked as complete unroll implied by the pipeline pragma (CNN_lenet5/calculateLayer3.cpp:23:21)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_5' is marked as complete unroll implied by the pipeline pragma (CNN_lenet5/calculateLayer3.cpp:24:22)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_23_4' (CNN_lenet5/calculateLayer3.cpp:23:21) in function 'calculateLayer3' completely with a factor of 5 (CNN_lenet5/calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_5' (CNN_lenet5/calculateLayer3.cpp:24:22) in function 'calculateLayer3' completely with a factor of 5 (CNN_lenet5/calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (CNN_lenet5/calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (CNN_lenet5/calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (CNN_lenet5/calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.994 seconds; current allocated memory: 127.734 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 127.734 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 139.184 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.141 seconds; current allocated memory: 145.410 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.643 seconds; current allocated memory: 176.617 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_19_2'(CNN_lenet5/calculateLayer3.cpp:19:19) and 'VITIS_LOOP_20_3'(CNN_lenet5/calculateLayer3.cpp:20:20) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_2' (CNN_lenet5/calculateLayer3.cpp:19:19) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_18_1' (CNN_lenet5/calculateLayer3.cpp:18:18) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.589 seconds; current allocated memory: 199.441 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.597 seconds; current allocated memory: 204.688 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.158 seconds; current allocated memory: 206.352 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 32, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 207.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.095 seconds; current allocated memory: 207.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried depe==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.395 seconds; current allocated memory: 0.328 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.479 seconds; current allocated memory: 0.336 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.585 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.555 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.945 seconds; current allocated memory: 0.332 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.791 seconds; current allocated memory: 0.277 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.688 seconds; current allocated memory: 0.414 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010iclg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 121.270 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.363 seconds; current allocated memory: 123.531 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,353 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,079 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,106 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,796 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,687 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,687 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,536 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,534 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,846 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_23_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:23:21)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:24:22)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_23_4' (calculateLayer3.cpp:23:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_5' (calculateLayer3.cpp:24:22) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.728 seconds; current allocated memory: 126.156 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 126.156 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 137.645 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.152 seconds; current allocated memory: 143.656 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.68 seconds; current allocated memory: 174.980 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_19_2'(calculateLayer3.cpp:19:19) and 'VITIS_LOOP_20_3'(calculateLayer3.cpp:20:20) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_2' (calculateLayer3.cpp:19:19) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_18_1' (calculateLayer3.cpp:18:18) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.686 seconds; current allocated memory: 197.562 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.578 seconds; current allocated memory: 202.609 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 204.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 32, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 204.902 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.124 seconds; current allocated memory: 205.090 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_1', calculateLayer3.cpp:25) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:25) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_2', calculateLayer3.cpp:26) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:26) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_3', calculateLayer3.cpp:27) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:27) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_4', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_130', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_145', calculateLayer3.cpp:25) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:25) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_149', calculateLayer3.cpp:29) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:29) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 150, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_150', calculateLayer3.cpp:30) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:30) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:22) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:22).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 151, Depth = 343, loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 9 seconds. CPU system time: 0 seconds. Elapsed time: 11.38 seconds; current allocated memory: 260.082 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.823 seconds; current allocated memory: 260.082 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.818 seconds; current allocated memory: 260.082 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_3_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_11_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.909 seconds; current allocated memory: 260.082 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_3_max_dsp_1' is changed to 'dmul_64ns_64ns_64_3_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.843 seconds; current allocated memory: 260.082 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 4.808 seconds; current allocated memory: 273.527 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.809 seconds; current allocated memory: 284.879 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.59 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 12 seconds. CPU system time: 3 seconds. Elapsed time: 35.607 seconds; current allocated memory: 163.637 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.127 seconds; current allocated memory: 0.625 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 121.047 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:14:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.172 seconds; current allocated memory: 123.164 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,256 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,919 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,106 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,796 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,838 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,838 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,195 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,811 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_25_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:25:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_6' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:42)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_25_4' (calculateLayer3.cpp:25:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_5' (calculateLayer3.cpp:26:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_6' (calculateLayer3.cpp:27:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:9:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:9:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:9:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:9:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.899 seconds; current allocated memory: 126.000 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 126.000 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.308 seconds; current allocated memory: 137.293 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.313 seconds; current allocated memory: 143.137 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.555 seconds; current allocated memory: 173.449 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (calculateLayer3.cpp:21:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (calculateLayer3.cpp:20:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.927 seconds; current allocated memory: 192.973 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.47 seconds; current allocated memory: 197.934 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 199.367 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 32, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.308 seconds; current allocated memory: 200.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.199 seconds; current allocated memory: 200.434 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_1', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_2', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_3', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_4', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_130', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_145', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_149', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 150, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_150', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:24) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:24).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 151, Depth = 343, loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 9 seconds. CPU system time: 0 seconds. Elapsed time: 24.285 seconds; current allocated memory: 287.898 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.654 seconds; current allocated memory: 287.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.909 seconds; current allocated memory: 287.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_3_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_11_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.307 seconds; current allocated memory: 287.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_3_max_dsp_1' is changed to 'dmul_64ns_64ns_64_3_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.183 seconds; current allocated memory: 287.898 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.132 seconds; current allocated memory: 287.898 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 3.889 seconds; current allocated memory: 287.898 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.59 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 12 seconds. CPU system time: 3 seconds. Elapsed time: 63.339 seconds; current allocated memory: 166.883 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 120.887 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:14:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.654 seconds; current allocated memory: 122.758 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,257 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,276 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 607 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 595 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 336 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,379 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,379 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,395 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,395 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,382 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,379 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRET==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.189 seconds; current allocated memory: 121.395 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:14:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.778 seconds; current allocated memory: 123.340 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,256 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,321 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 652 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 630 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 371 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 371 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 371 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 384 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 384 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 373 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 371 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,195 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,811 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_31_6' (calculateLayer3.cpp:31:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:9:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< VITIS_LOOP_26_3> at calculateLayer3.cpp:26:30 
INFO: [HLS 214-291] Loop 'VITIS_LOOP_29_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_30_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:30:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_29_4' (calculateLayer3.cpp:29:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_30_5' (calculateLayer3.cpp:30:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:9:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:9:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:9:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.294 seconds; current allocated memory: 125.934 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.016 seconds; current allocated memory: 125.934 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.527 seconds; current allocated memory: 136.980 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.436 seconds; current allocated memory: 142.734 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.256 seconds; current allocated memory: 172.273 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_2' (calculateLayer3.cpp:25:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_24_1' (calculateLayer3.cpp:24:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.938 seconds; current allocated memory: 192.883 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 7, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.594 seconds; current allocated memory: 198.031 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 199.402 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 32, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.529 seconds; current allocated memory: 200.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 200.215 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_1', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_2', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_3', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_4', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_130', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_145', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_149', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'): Unable to enforce a carried dependence constraint (II = 150, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_CPU_read_150', calculateLayer3.cpp:33) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Weights_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:28).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 151, Depth = 343, loop 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 10 seconds. CPU system time: 0 seconds. Elapsed time: 34.689 seconds; current allocated memory: 288.469 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.736 seconds; current allocated memory: 288.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.337 seconds; current allocated memory: 288.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_3_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_11_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.607 seconds; current allocated memory: 288.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_24_1_VITIS_LOOP_25_2_VITIS_LOOP_26_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_3_max_dsp_1' is changed to 'dmul_64ns_64ns_64_3_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.164 seconds; current allocated memory: 288.469 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 9.647 seconds; current allocated memory: 288.469 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 3.819 seconds; current allocated memory: 288.469 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.59 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 18 seconds. CPU system time: 4 seconds. Elapsed time: 81.564 seconds; current allocated memory: 167.105 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 121.039 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:9:52)
ERROR: [HLS 207-3776] use of undeclared identifier 'SIGMOID' (calculateLayer3.cpp:41:68)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.169 seconds; current allocated memory: 0.723 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.19 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 121.730 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:12:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.048 seconds; current allocated memory: 123.527 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,290 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,432 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,206 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,892 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,172 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,661 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_29_6' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_36_7' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:36:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_37_8' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:37:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_38_9' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:38:42)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (calculateLayer3.cpp:26:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_5' (calculateLayer3.cpp:27:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_29_6' (calculateLayer3.cpp:29:19) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_36_7' (calculateLayer3.cpp:36:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_37_8' (calculateLayer3.cpp:37:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_38_9' (calculateLayer3.cpp:38:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:8:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.982 seconds; current allocated memory: 126.496 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 126.496 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 137.488 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 142.875 MB.
INFO: [XFORM 203-102] Partitioning array 'line_buffer' (calculateLayer3.cpp:14) in dimension 1 automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.656 seconds; current allocated memory: 171.723 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_20_2'(calculateLayer3.cpp:20:26) and 'VITIS_LOOP_21_3'(calculateLayer3.cpp:21:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_2' (calculateLayer3.cpp:20:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_1' (calculateLayer3.cpp:19:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.137 seconds; current allocated memory: 199.711 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.418 seconds; current allocated memory: 203.438 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 204.633 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 32, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 204.801 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 204.820 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('p_0232', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('p_0233', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('p_0234', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('p_0235', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('p_0162', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('p_0177', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_CPU_read_24', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 150, Depth = 350, loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 9 seconds. CPU system time: 0 seconds. Elapsed time: 23.411 seconds; current allocated memory: 290.027 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.538 seconds; current allocated memory: 290.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.733 seconds; current allocated memory: 290.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_3_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_11_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.992 seconds; current allocated memory: 290.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_3_max_dsp_1' is changed to 'dmul_64ns_64ns_64_3_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_3_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [RTMG 210-278] Implementing memory 'calculateLayer3_line_buffer_0_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.835 seconds; current allocated memory: 290.027 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.597 seconds; current allocated memory: 290.027 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.828 seconds; current allocated memory: 290.027 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 34.59 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 11 seconds. CPU system time: 1 seconds. Elapsed time: 56.974 seconds; current allocated memory: 168.328 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 80ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 80 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.153 seconds; current allocated memory: 121.598 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:12:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.577 seconds; current allocated memory: 123.531 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,290 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,432 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,206 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,892 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,172 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,661 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_29_6' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_36_7' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:36:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_37_8' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:37:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_38_9' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:38:42)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (calculateLayer3.cpp:26:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_5' (calculateLayer3.cpp:27:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_29_6' (calculateLayer3.cpp:29:19) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_36_7' (calculateLayer3.cpp:36:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_37_8' (calculateLayer3.cpp:37:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_38_9' (calculateLayer3.cpp:38:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:8:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.172 seconds; current allocated memory: 126.730 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 126.730 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.257 seconds; current allocated memory: 137.941 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.225 seconds; current allocated memory: 143.477 MB.
INFO: [XFORM 203-102] Partitioning array 'line_buffer' (calculateLayer3.cpp:14) in dimension 1 automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.62 seconds; current allocated memory: 173.129 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_20_2'(calculateLayer3.cpp:20:26) and 'VITIS_LOOP_21_3'(calculateLayer3.cpp:21:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_2' (calculateLayer3.cpp:20:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_1' (calculateLayer3.cpp:19:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.962 seconds; current allocated memory: 200.246 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.193 seconds; current allocated memory: 204.012 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.133 seconds; current allocated memory: 205.215 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 20, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.302 seconds; current allocated memory: 205.379 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 205.387 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('p_0232', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('p_0233', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('p_0234', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('p_0235', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('p_0162', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('p_0177', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_CPU_read_24', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and axis read operation ('p_0231', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 150, Depth = 184, loop 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 20.191 seconds; current allocated memory: 284.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.485 seconds; current allocated memory: 284.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.708 seconds; current allocated memory: 284.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_7_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.163 seconds; current allocated memory: 284.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_19_1_VITIS_LOOP_20_2_VITIS_LOOP_21_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_1_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [RTMG 210-278] Implementing memory 'calculateLayer3_line_buffer_0_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.887 seconds; current allocated memory: 284.535 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.677 seconds; current allocated memory: 284.535 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.985 seconds; current allocated memory: 284.535 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 17.47 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 52.334 seconds; current allocated memory: 162.965 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.201 seconds; current allocated memory: 120.586 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:9:52)
ERROR: [HLS 207-3776] use of undeclared identifier 'SIGMOID' (calculateLayer3.cpp:43:68)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.015 seconds; current allocated memory: 0.918 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.169 seconds; current allocated memory: 121.168 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:12:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.638 seconds; current allocated memory: 123.023 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,290 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,432 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,206 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,892 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,172 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,661 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_28_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_30_6' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:30:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_38_7' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:38:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_39_8' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:39:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_40_9' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:40:42)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_4' (calculateLayer3.cpp:27:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_28_5' (calculateLayer3.cpp:28:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_30_6' (calculateLayer3.cpp:30:19) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_38_7' (calculateLayer3.cpp:38:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_39_8' (calculateLayer3.cpp:39:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_40_9' (calculateLayer3.cpp:40:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:8:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.052 seconds; current allocated memory: 126.270 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 126.270 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.257 seconds; current allocated memory: 137.523 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 142.699 MB.
INFO: [XFORM 203-102] Partitioning array 'line_buffer' (calculateLayer3.cpp:15) in dimension 1 automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.619 seconds; current allocated memory: 172.824 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_21_2'(calculateLayer3.cpp:21:26) and 'VITIS_LOOP_22_3'(calculateLayer3.cpp:22:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (calculateLayer3.cpp:21:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (calculateLayer3.cpp:20:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.022 seconds; current allocated memory: 200.148 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.185 seconds; current allocated memory: 203.934 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 205.137 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.278 seconds; current allocated memory: 205.293 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.148 seconds; current allocated memory: 205.309 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('p_0232', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('p_0233', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('p_0234', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('p_0235', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('p_0162', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('p_0177', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_CPU_read_24', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and axis read operation ('p_0231', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 150, Depth = 340, loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 21.947 seconds; current allocated memory: 286.668 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.501 seconds; current allocated memory: 286.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.733 seconds; current allocated memory: 286.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.925 seconds; current allocated memory: 286.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [RTMG 210-278] Implementing memory 'calculateLayer3_line_buffer_0_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.506 seconds; current allocated memory: 286.668 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.347 seconds; current allocated memory: 286.668 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.752 seconds; current allocated memory: 286.668 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 26.38 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 52.857 seconds; current allocated memory: 165.535 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.149 seconds; current allocated memory: 121.422 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 207-5565] unexpected pragma parameter 'bundle' (calculateLayer3.cpp:12:52)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.648 seconds; current allocated memory: 123.316 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,290 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,432 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,206 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,892 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,933 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,633 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,172 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,661 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_28_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_29_6' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:42)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_37_7' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:37:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_38_8' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:38:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_39_9' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:39:42)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_4' (calculateLayer3.cpp:27:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_28_5' (calculateLayer3.cpp:28:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_29_6' (calculateLayer3.cpp:29:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_37_7' (calculateLayer3.cpp:37:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_38_8' (calculateLayer3.cpp:38:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_39_9' (calculateLayer3.cpp:39:42) in function 'calculateLayer3' completely with a factor of 6 (calculateLayer3.cpp:8:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Weights_CPU' (calculateLayer3.cpp:8:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:8:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.049 seconds; current allocated memory: 126.488 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 126.488 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.294 seconds; current allocated memory: 137.781 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.192 seconds; current allocated memory: 143.199 MB.
INFO: [XFORM 203-102] Partitioning array 'line_buffer' (calculateLayer3.cpp:15) in dimension 1 automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.577 seconds; current allocated memory: 172.785 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_21_2'(calculateLayer3.cpp:21:26) and 'VITIS_LOOP_22_3'(calculateLayer3.cpp:22:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (calculateLayer3.cpp:21:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (calculateLayer3.cpp:20:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.975 seconds; current allocated memory: 200.504 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.131 seconds; current allocated memory: 204.273 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 205.480 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.328 seconds; current allocated memory: 205.648 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.162 seconds; current allocated memory: 205.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('p_0232', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('p_0233', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('p_0234', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('p_0235', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between axis read operation ('p_0162', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between axis read operation ('p_0177', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_CPU_read_24', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and axis read operation ('p_0231', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 150, Depth = 340, loop 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 13 seconds. CPU system time: 0 seconds. Elapsed time: 34.371 seconds; current allocated memory: 292.098 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.494 seconds; current allocated memory: 292.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.799 seconds; current allocated memory: 292.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.995 seconds; current allocated memory: 292.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_20_1_VITIS_LOOP_21_2_VITIS_LOOP_22_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [RTMG 210-278] Implementing memory 'calculateLayer3_line_buffer_0_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.609 seconds; current allocated memory: 292.098 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.465 seconds; current allocated memory: 292.098 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.913 seconds; current allocated memory: 292.098 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 26.38 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 15 seconds. CPU system time: 1 seconds. Elapsed time: 65.767 seconds; current allocated memory: 170.723 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 121.098 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.722 seconds; current allocated memory: 123.055 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,313 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,627 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 956 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 948 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 689 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 840 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,154 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (calculateLayer3.cpp:26:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_5' (calculateLayer3.cpp:27:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(hls::stream<float, 0>&, hls::stream<float, 0>&, hls::stream<float, 0>&)' (calculateLayer3.cpp:9:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.031 seconds; current allocated memory: 125.645 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 125.645 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.282 seconds; current allocated memory: 135.902 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.218 seconds; current allocated memory: 142.582 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.424 seconds; current allocated memory: 171.281 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_2' (calculateLayer3.cpp:19:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_18_1' (calculateLayer3.cpp:18:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.499 seconds; current allocated memory: 188.844 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.906 seconds; current allocated memory: 194.508 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.203 seconds; current allocated memory: 196.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 39, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.309 seconds; current allocated memory: 196.988 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.203 seconds; current allocated memory: 197.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_1', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_2', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_3', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_4', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 67, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_67', calculateLayer3.cpp:34) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:34) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 98, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_98', calculateLayer3.cpp:35) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:35) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 114, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_114', calculateLayer3.cpp:36) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:36) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 122, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_122', calculateLayer3.cpp:34) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:34) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 124, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_124', calculateLayer3.cpp:36) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:36) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 125, Depth = 429, loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 6.471 seconds; current allocated memory: 231.609 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.436 seconds; current allocated memory: 231.609 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.707 seconds; current allocated memory: 231.609 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_4_full_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_14_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_4_full_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.06 seconds; current allocated memory: 231.609 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_4_max_dsp_1' is changed to 'dmul_64ns_64ns_64_4_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-104] Estimated max fanout for 'calculateLayer3' is 5592 from HDL expression: (((1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001_ignoreCallOp1415)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001_ignoreCallOp1414)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001_ignoreCallOp1413)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001_ignoreCallOp1412)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001_ignoreCallOp1411)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41_11001_ignoreCallOp1410)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001_ignoreCallOp1409)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp1408)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp1407)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp1406)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp1405)) | ((1'b1 == ap_CS_fsm_pp0_stage35) 
    & (1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp1404)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp1403)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp1402)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp1401)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp1400)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp1399)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001_ignoreCallOp1398)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001_ignoreCallOp1397)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001_ignoreCallOp1396)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001_ignoreCallOp1395)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001_ignoreCallOp1394)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001_ignoreCallOp1393)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001_ignoreCallOp1392)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001_ignoreCallOp1391)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001_ignoreCallOp1390)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001_ignoreCallOp1389)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001_ignoreCallOp1388)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001_ignoreCallOp1387)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp1386)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp1385)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp1384)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp1383)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp1382)) | ((1'b1 == ap_CS_fsm_pp0_stage12) 
    & (1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp1381)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp1380)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp1379)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp1378)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp1377)))
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_3_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.613 seconds; current allocated memory: 231.609 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.018 seconds; current allocated memory: 238.770 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.776 seconds; current allocated memory: 248.492 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 46.14 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 31.438 seconds; current allocated memory: 127.691 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 60ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 60 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.181 seconds; current allocated memory: 121.086 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.71 seconds; current allocated memory: 122.840 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,313 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,627 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 956 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 948 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 689 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 840 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,154 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (calculateLayer3.cpp:26:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_5' (calculateLayer3.cpp:27:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(hls::stream<float, 0>&, hls::stream<float, 0>&, hls::stream<float, 0>&)' (calculateLayer3.cpp:9:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.837 seconds; current allocated memory: 125.508 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 125.508 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.157 seconds; current allocated memory: 135.797 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 142.082 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 171.086 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_2' (calculateLayer3.cpp:19:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_18_1' (calculateLayer3.cpp:18:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.449 seconds; current allocated memory: 189.508 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.713 seconds; current allocated memory: 194.719 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 196.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 22, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.336 seconds; current allocated memory: 197.086 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.153 seconds; current allocated memory: 197.309 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_1', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_2', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_3', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_4', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:31) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:31).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 67, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_67', calculateLayer3.cpp:34) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:34) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 98, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_98', calculateLayer3.cpp:35) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:35) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 114, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_114', calculateLayer3.cpp:36) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:36) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 122, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_122', calculateLayer3.cpp:34) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:34) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 124, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_124', calculateLayer3.cpp:36) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:36) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 125, Depth = 280, loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 5.666 seconds; current allocated memory: 233.656 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.318 seconds; current allocated memory: 233.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.637 seconds; current allocated memory: 233.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_8_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.963 seconds; current allocated memory: 233.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.333 seconds; current allocated memory: 233.656 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.566 seconds; current allocated memory: 234.410 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.597 seconds; current allocated memory: 244.574 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 22.94 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 28.919 seconds; current allocated memory: 123.855 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 127.102 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.825 seconds; current allocated memory: 128.852 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,313 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,627 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 956 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 948 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 689 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 686 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 840 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,154 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_5' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (calculateLayer3.cpp:26:34) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_5' (calculateLayer3.cpp:27:38) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(hls::stream<float, 0>&, hls::stream<float, 0>&, hls::stream<float, 0>&)' (calculateLayer3.cpp:9:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.993 seconds; current allocated memory: 131.520 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.013 seconds; current allocated memory: 131.520 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.385 seconds; current allocated memory: 141.527 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.337 seconds; current allocated memory: 148.324 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.071 seconds; current allocated memory: 176.938 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_19_2' (calculateLayer3.cpp:19:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_18_1' (calculateLayer3.cpp:18:22) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.453 seconds; current allocated memory: 195.668 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.711 seconds; current allocated memory: 201.027 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.173 seconds; current allocated memory: 202.777 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.243 seconds; current allocated memory: 203.594 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.123 seconds; current allocated memory: 203.672 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_1', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_2', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_3', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read operation ('Layer2_Weights_stream_read_4', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29) and axis read operation ('Layer2_Weights_stream_read', calculateLayer3.cpp:29) on port 'Layer2_Weights_stream' (calculateLayer3.cpp:29).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 67, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_67', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 98, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_98', calculateLayer3.cpp:33) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:33) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 114, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_114', calculateLayer3.cpp:34) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:34) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 122, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_122', calculateLayer3.cpp:32) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:32) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'): Unable to enforce a carried dependence constraint (II = 124, distance = 1, offset = 1) between axis read operation ('Layer2_Neurons_stream_read_124', calculateLayer3.cpp:34) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:34) and axis read operation ('Layer2_Neurons_stream_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_stream' (calculateLayer3.cpp:30).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 125, Depth = 283, loop 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 5.657 seconds; current allocated memory: 239.195 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 239.195 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.673 seconds; current allocated memory: 239.195 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.971 seconds; current allocated memory: 239.195 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_18_1_VITIS_LOOP_19_2_VITIS_LOOP_20_3' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.423 seconds; current allocated memory: 239.195 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.516 seconds; current allocated memory: 240.715 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.686 seconds; current allocated memory: 250.535 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 26.68 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 30.21 seconds; current allocated memory: 123.719 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 121.102 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.985 seconds; current allocated memory: 122.629 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,353 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,079 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,106 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,796 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,845 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,853 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:25:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:25:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:26:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:11:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.602 seconds; current allocated memory: 125.777 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.008 seconds; current allocated memory: 125.777 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.376 seconds; current allocated memory: 137.758 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.248 seconds; current allocated memory: 143.668 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (calculateLayer3.cpp:6:57)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.799 seconds; current allocated memory: 176.855 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'row_Loop'(calculateLayer3.cpp:21:12) and 'col_loop'(calculateLayer3.cpp:22:13) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:20:23) and 'row_Loop'(calculateLayer3.cpp:21:12) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:21:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:20:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.648 seconds; current allocated memory: 200.277 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.8 seconds; current allocated memory: 205.695 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 207.340 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.365 seconds; current allocated memory: 207.863 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 208.230 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop_col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_3', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_129', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_144', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_149', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 151, Depth = 333, loop 'calculateLayer3_loop_row_Loop_col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 10 seconds. CPU system time: 0 seconds. Elapsed time: 22.32 seconds; current allocated memory: 225.801 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.194 seconds; current allocated memory: 226.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.991 seconds; current allocated memory: 229.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.001 seconds; current allocated memory: 234.883 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'calculateLayer3_loop_row_Loop_col_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_3ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.9 seconds; current allocated memory: 253.918 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 6.236 seconds; current allocated memory: 287.938 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.081 seconds; current allocated memory: 301.293 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 26.38 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 12 seconds. CPU system time: 2 seconds. Elapsed time: 58.425 seconds; current allocated memory: 180.285 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 121.758 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.55 seconds; current allocated memory: 122.977 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,353 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 14,550 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 6,539 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,799 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,504 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,492 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,044 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,058 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'col_loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:24:12)
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:21)
INFO: [HLS 214-186] Unrolling loop 'col_loop' (calculateLayer3.cpp:24:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:26:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:27:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:11:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 36.492 seconds; current allocated memory: 126.766 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.017 seconds; current allocated memory: 126.766 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.529 seconds; current allocated memory: 143.699 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.65 seconds; current allocated memory: 149.281 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 5.055 seconds; current allocated memory: 183.887 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.002 seconds; current allocated memory: 234.801 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 0, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.366 seconds; current allocated memory: 240.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.303 seconds; current allocated memory: 241.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 0, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.526 seconds; current allocated memory: 242.539 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.239 seconds; current allocated memory: 242.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_row_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'row_Loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load', calculateLayer3.cpp:28) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_12', calculateLayer3.cpp:28) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_24', calculateLayer3.cpp:28) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_156', calculateLayer3.cpp:28) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_52', calculateLayer3.cpp:32) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_79', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 193). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_356', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 225). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_103', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 241). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_254', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 249). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_195', calculateLayer3.cpp:31) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 253). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_94', calculateLayer3.cpp:32) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 255). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_row_Loop' (loop 'row_Loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Neurons_CPU_load_106', calculateLayer3.cpp:32) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 256). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive for loop 'row_Loop': unable to pipeline.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 98 seconds. CPU system time: 1 seconds. Elapsed time: 263.421 seconds; current allocated memory: 265.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 8.062 seconds; current allocated memory: 265.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 4.895 seconds; current allocated memory: 265.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.055 seconds; current allocated memory: 265.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.621 seconds; current allocated memory: 265.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.137 seconds; current allocated memory: 265.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_row_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_5ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_row_Loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 11.162 seconds; current allocated memory: 265.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 6 seconds. Elapsed time: 23.781 seconds; current allocated memory: 313.035 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 2 seconds. Elapsed time: 7.971 seconds; current allocated memory: 327.930 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.584 seconds; current allocated memory: 366.477 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 26.23 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 116 seconds. CPU system time: 9 seconds. Elapsed time: 382.083 seconds; current allocated memory: 244.742 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.152 seconds; current allocated memory: 121.098 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.764 seconds; current allocated memory: 122.660 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 14,353 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,079 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,106 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,796 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,537 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,845 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,853 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:28:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:29:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (calculateLayer3.cpp:11:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.811 seconds; current allocated memory: 125.840 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.022 seconds; current allocated memory: 125.840 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.62 seconds; current allocated memory: 137.965 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.402 seconds; current allocated memory: 143.852 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (calculateLayer3.cpp:6:53)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.234 seconds; current allocated memory: 177.344 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'row_Loop'(calculateLayer3.cpp:22:12) and 'col_loop'(calculateLayer3.cpp:24:13) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:21:23) and 'row_Loop'(calculateLayer3.cpp:22:12) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.732 seconds; current allocated memory: 199.941 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.258 seconds; current allocated memory: 205.215 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.312 seconds; current allocated memory: 206.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.548 seconds; current allocated memory: 207.762 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 207.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln38_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop_col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_3', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_129', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_144', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_149', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 151, Depth = 333, loop 'calculateLayer3_loop_row_Loop_col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 25 seconds. CPU system time: 0 seconds. Elapsed time: 65.541 seconds; current allocated memory: 224.836 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.691 seconds; current allocated memory: 225.371 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.42 seconds; current allocated memory: 228.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.366 seconds; current allocated memory: 233.230 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'calculateLayer3_loop_row_Loop_col_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_3ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.373 seconds; current allocated memory: 252.617 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 4 seconds. Elapsed time: 15.864 seconds; current allocated memory: 286.258 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.051 seconds; current allocated memory: 299.832 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 26.38 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 33 seconds. CPU system time: 5 seconds. Elapsed time: 124.831 seconds; current allocated memory: 178.773 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.176 seconds; current allocated memory: 120.977 MB.
INFO: [HLS 200-10] Analyzing design file 'HW_CNN.cpp' ... 
ERROR: [HLS 207-813] 'lenet5.h' file not found with <angled> include; use "quotes" instead (HW_CNN.cpp:1:10)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.081 seconds; current allocated memory: 1.227 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.898 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.163 seconds; current allocated memory: 0.332 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.835 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 120.957 MB.
INFO: [HLS 200-10] Analyzing design file 'HW_CNN.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.97 seconds; current allocated memory: 122.664 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 42,838 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,885 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,562 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,178 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,382 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,379 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 34,395 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,379 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,594 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,623 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_65_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:65:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_66_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:66:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_38_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:38:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_39_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:39:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_65_4' (HW_CNN.cpp:65:34) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:52:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_66_5' (HW_CNN.cpp:66:38) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:52:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_38_4' (HW_CNN.cpp:38:34) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:26:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_39_5' (HW_CNN.cpp:39:38) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:26:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer2(float*, float*, float*)' (HW_CNN.cpp:26:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (HW_CNN.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer4(float*, float*, float*)' (HW_CNN.cpp:89:0)
INFO: [HLS 214-178] Inlining function 'calculateLayer4(float*, float*, float*)' into 'Lenet_HW(float*, float*, float*, float*, float*)' (HW_CNN.cpp:8:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< VITIS_LOOP_101_4> at HW_CNN.cpp:101:35 
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=100 dim=1' for array 'Layer2_Neurons_CPU' due to pipeline pragma (HW_CNN.cpp:63:9)
INFO: [HLS 214-248] Applying array_partition to 'Layer2_Neurons_CPU': Cyclic partitioning with factor 100 on dimension 1. (HW_CNN.cpp:15:8)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 81.174 seconds; current allocated memory: 126.488 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 126.488 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 46 seconds. CPU system time: 0 seconds. Elapsed time: 124.534 seconds; current allocated memory: 193.379 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 4.607 seconds; current allocated memory: 201.781 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (HW_CNN.cpp:57:34)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'Lenet_HW' (HW_CNN.cpp:4:35)...4 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 101 seconds. CPU system time: 0 seconds. Elapsed time: 185.77 seconds; current allocated memory: 223.422 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_61_2'(HW_CNN.cpp:61:26) and 'VITIS_LOOP_62_3'(HW_CNN.cpp:62:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_60_1'(HW_CNN.cpp:60:22) and 'VITIS_LOOP_61_2'(HW_CNN.cpp:61:26) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_34_2'(HW_CNN.cpp:34:26) and 'VITIS_LOOP_35_3'(HW_CNN.cpp:35:30) in function 'calculateLayer2' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_33_1'(HW_CNN.cpp:33:22) and 'VITIS_LOOP_34_2'(HW_CNN.cpp:34:26) in function 'calculateLayer2' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_100_3'(HW_CNN.cpp:100:31) and 'VITIS_LOOP_101_4'(HW_CNN.cpp:101:35) in function 'Lenet_HW' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_99_2'(HW_CNN.cpp:99:26) and 'VITIS_LOOP_100_3'(HW_CNN.cpp:100:31) in function 'Lenet_HW' into perfectly nested loops.
INFO: [HLS 200-2060] Failed to convert nested loops 'VITIS_LOOP_97_1'(HW_CNN.cpp:97:22) and 'VITIS_LOOP_99_2'(HW_CNN.cpp:99:26) in function 'Lenet_HW' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_61_2' (HW_CNN.cpp:61:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_1' (HW_CNN.cpp:60:22) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_34_2' (HW_CNN.cpp:34:26) in function 'calculateLayer2'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_1' (HW_CNN.cpp:33:22) in function 'calculateLayer2'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_100_3' (HW_CNN.cpp:100:31) in function 'Lenet_HW'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_99_2' (HW_CNN.cpp:99:26) in function 'Lenet_HW'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_97_1' (HW_CNN.cpp:97:22) in function 'Lenet_HW' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 190 seconds. CPU system time: 1 seconds. Elapsed time: 261.34 seconds; current allocated memory: 223.422 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Lenet_HW' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 10 seconds. CPU system time: 0 seconds. Elapsed time: 14.669 seconds; current allocated memory: 223.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 223.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 223.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.125 seconds; current allocated memory: 223.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln44_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_99'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_25'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_27'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_28'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_29'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_30'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_31'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_32'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_33'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_34'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_35'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_36'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_37'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_38'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_39'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_40'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_41'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_42'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_43'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_44'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_45'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_46'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_47'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_48'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_49'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_50'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_51'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_52'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_53'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_54'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_55'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_56'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_57'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_58'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_59'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_60'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_61'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_62'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_63'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_64'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_65'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_66'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_67'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_68'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_69'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_70'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_71'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_72'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_73'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_74'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_75'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_76'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_77'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_78'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_79'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_80'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_81'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_82'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_83'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_84'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_85'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_86'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_87'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_88'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_89'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_90'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_91'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_92'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_93'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_94'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_95'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_96'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_97'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_98'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_1', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_2', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_3', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_18', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 19). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_22', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 23). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_24', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 25). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 26, Depth = 85, loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 7.902 seconds; current allocated memory: 223.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.387 seconds; current allocated memory: 228.230 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln81_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln68_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln68_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_99'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_97'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_95'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_93'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_91'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_89'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_87'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_85'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_83'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_81'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_79'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_77'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_75'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_73'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_71'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_69'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_67'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_65'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_63'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_61'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_59'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_57'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_55'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_53'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_51'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_49'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_47'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_45'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_43'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_41'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_39'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_37'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_35'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_33'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_31'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_29'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_27'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_25'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_98'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_96'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_94'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_92'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_90'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_88'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_86'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_84'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_82'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_80'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_78'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_76'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_74'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_72'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_70'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_68'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_66'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_64'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_62'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_60'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_58'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_56'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_54'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_52'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_50'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_48'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_46'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_44'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_42'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_40'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_38'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_36'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_34'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_32'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_30'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_28'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring R==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.473 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.096 seconds; current allocated memory: 121.305 MB.
INFO: [HLS 200-10] Analyzing design file 'HW_CNN.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.832 seconds; current allocated memory: 123.492 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 42,838 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,885 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,562 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,178 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,382 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,379 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,376 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 34,395 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,379 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,594 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,623 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_65_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:65:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_66_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:66:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_38_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:38:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_39_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:39:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_65_4' (HW_CNN.cpp:65:34) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:52:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_66_5' (HW_CNN.cpp:66:38) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:52:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_38_4' (HW_CNN.cpp:38:34) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:26:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_39_5' (HW_CNN.cpp:39:38) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:26:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer2(float*, float*, float*)' (HW_CNN.cpp:26:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (HW_CNN.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer4(float*, float*, float*)' (HW_CNN.cpp:89:0)
INFO: [HLS 214-178] Inlining function 'calculateLayer4(float*, float*, float*)' into 'Lenet_HW(float*, float*, float*, float*, float*)' (HW_CNN.cpp:8:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< VITIS_LOOP_101_4> at HW_CNN.cpp:101:35 
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=100 dim=1' for array 'Layer2_Neurons_CPU' due to pipeline pragma (HW_CNN.cpp:63:9)
INFO: [HLS 214-248] Applying array_partition to 'Layer2_Neurons_CPU': Cyclic partitioning with factor 100 on dimension 1. (HW_CNN.cpp:15:8)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 80.016 seconds; current allocated memory: 126.328 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 126.328 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 80 seconds. CPU system time: 0 seconds. Elapsed time: 128.508 seconds; current allocated memory: 139.270 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.462 seconds; current allocated memory: 139.270 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (HW_CNN.cpp:57:34)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'Lenet_HW' (HW_CNN.cpp:4:35)...4 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 127 seconds. CPU system time: 1 seconds. Elapsed time: 157.147 seconds; current allocated memory: 139.270 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_61_2'(HW_CNN.cpp:61:26) and 'VITIS_LOOP_62_3'(HW_CNN.cpp:62:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_60_1'(HW_CNN.cpp:60:22) and 'VITIS_LOOP_61_2'(HW_CNN.cpp:61:26) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_34_2'(HW_CNN.cpp:34:26) and 'VITIS_LOOP_35_3'(HW_CNN.cpp:35:30) in function 'calculateLayer2' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_33_1'(HW_CNN.cpp:33:22) and 'VITIS_LOOP_34_2'(HW_CNN.cpp:34:26) in function 'calculateLayer2' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_100_3'(HW_CNN.cpp:100:31) and 'VITIS_LOOP_101_4'(HW_CNN.cpp:101:35) in function 'Lenet_HW' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_99_2'(HW_CNN.cpp:99:26) and 'VITIS_LOOP_100_3'(HW_CNN.cpp:100:31) in function 'Lenet_HW' into perfectly nested loops.
INFO: [HLS 200-2060] Failed to convert nested loops 'VITIS_LOOP_97_1'(HW_CNN.cpp:97:22) and 'VITIS_LOOP_99_2'(HW_CNN.cpp:99:26) in function 'Lenet_HW' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_61_2' (HW_CNN.cpp:61:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_1' (HW_CNN.cpp:60:22) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_34_2' (HW_CNN.cpp:34:26) in function 'calculateLayer2'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_1' (HW_CNN.cpp:33:22) in function 'calculateLayer2'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_100_3' (HW_CNN.cpp:100:31) in function 'Lenet_HW'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_99_2' (HW_CNN.cpp:99:26) in function 'Lenet_HW'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_97_1' (HW_CNN.cpp:97:22) in function 'Lenet_HW' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 205 seconds. CPU system time: 0 seconds. Elapsed time: 232.175 seconds; current allocated memory: 171.094 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Lenet_HW' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 21.807 seconds; current allocated memory: 182.848 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 193.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.394 seconds; current allocated memory: 193.691 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 193.840 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln44_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_99'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_0'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_25'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_27'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_28'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_29'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_30'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_31'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_32'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_33'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_34'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_35'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_36'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_37'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_38'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_39'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_40'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_41'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_42'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_43'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_44'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_45'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_46'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_47'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_48'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_49'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_50'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_51'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_52'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_53'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_54'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_55'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_56'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_57'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_58'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_59'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_60'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_61'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_62'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_63'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_64'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_65'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_66'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_67'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_68'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_69'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_70'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_71'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_72'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_73'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_74'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_75'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_76'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_77'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_78'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_79'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_80'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_81'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_82'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_83'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_84'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_85'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_86'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_87'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_88'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_89'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_90'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_91'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_92'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_93'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_94'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_95'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_96'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_97'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_98'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_1', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_2', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_3', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_18', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 19). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_22', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 23). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'): Unable to schedule 'load' operation 32 bit ('Layer1_Weights_CPU_load_24', HW_CNN.cpp:33) on array 'Layer1_Weights_CPU' due to limited memory ports (II = 25). Please consider using a memory core with more ports or partitioning the array 'Layer1_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 26, Depth = 85, loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 10.934 seconds; current allocated memory: 206.395 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.463 seconds; current allocated memory: 222.438 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln81_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln68_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln68_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_99'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_97'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_95'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_93'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_91'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_89'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_87'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_85'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_83'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_81'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_79'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_77'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_75'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_73'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_71'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_69'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_67'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_65'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_63'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_61'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_59'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_57'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_55'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_53'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_51'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_49'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_47'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_45'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_43'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_41'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_39'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_37'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_35'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_33'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_31'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_29'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_27'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_25'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_23'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_21'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_98'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_96'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_94'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_92'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_90'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_88'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_86'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_84'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_82'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_80'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_78'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_76'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_74'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_72'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_70'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_68'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_66'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_64'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_62'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_60'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_58'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_56'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_54'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_52'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_50'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_48'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_46'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_44'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_42'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_40'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_38'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_36'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_34'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_32'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_30'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_28'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_26'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_24'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_22'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_20'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU_0'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_1', HW_CNN.cpp:60) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load', HW_CNN.cpp:60) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_2', HW_CNN.cpp:60) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_3', HW_CNN.cpp:60) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_129', HW_CNN.cpp:60) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2_VITIS_LOOP_62_3'): Unable to schedule 'load' operation 32 bit ('Layer2_Weights_CPU_load_144', HW_CNN.cpp:60) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-8==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.655 seconds; current allocated memory: 0.125 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.113 seconds; current allocated memory: 121.141 MB.
INFO: [HLS 200-10] Analyzing design file 'HW_CNN.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.618 seconds; current allocated memory: 123.461 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 42,838 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,885 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,562 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,178 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,382 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,371 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,371 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,371 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,371 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,374 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,371 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,371 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 34,390 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 33,374 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 32,723 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 32,756 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_74_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:74:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_75_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:75:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_46_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:46:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_47_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:47:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_74_4' (HW_CNN.cpp:74:34) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:60:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_75_5' (HW_CNN.cpp:75:38) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:60:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_46_4' (HW_CNN.cpp:46:34) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:32:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_47_5' (HW_CNN.cpp:47:38) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:32:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer2(float*, float*, float*)' (HW_CNN.cpp:32:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, float*, float*)' (HW_CNN.cpp:60:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer4(float*, float*, float*)' (HW_CNN.cpp:98:0)
INFO: [HLS 214-178] Inlining function 'calculateLayer4(float*, float*, float*)' into 'Lenet_HW(float*, float*, float*, float*, float*)' (HW_CNN.cpp:13:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< VITIS_LOOP_111_4> at HW_CNN.cpp:111:35 
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=100 dim=1' for array 'Layer2_Neurons_CPU' due to pipeline pragma (HW_CNN.cpp:72:9)
INFO: [HLS 214-248] Applying array_partition to 'Layer2_Neurons_CPU': Cyclic partitioning with factor 100 on dimension 1. (HW_CNN.cpp:21:8)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 74.304 seconds; current allocated memory: 126.496 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 126.496 MB.
INFO: [HLS 200-10] Starting code transformati==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.101 seconds; current allocated memory: 120.730 MB.
INFO: [HLS 200-10] Analyzing design file 'HW_CNN.cpp' ... 
ERROR: [HLS 207-3339] no matching function for call to 'calculateLayer2' (HW_CNN.cpp:22:5)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'hls::stream<float>' to 'float *' for 1st argument (./lenet5.h:14:6)
ERROR: [HLS 207-3339] no matching function for call to 'calculateLayer3' (HW_CNN.cpp:25:5)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'hls::stream<float>' to 'float *' for 2nd argument (./lenet5.h:18:6)
ERROR: [HLS 207-3339] no matching function for call to 'calculateLayer4' (HW_CNN.cpp:27:5)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'hls::stream<float>' to 'float *' for 2nd argument (./lenet5.h:22:6)
ERROR: [HLS 207-2972] no member named 'LineBuffer' in namespace 'hls' (HW_CNN.cpp:40:10)
ERROR: [HLS 207-3776] use of undeclared identifier 'conv_buff' (HW_CNN.cpp:49:25)
ERROR: [HLS 207-3776] use of undeclared identifier 'conv_buff' (HW_CNN.cpp:50:25)
ERROR: [HLS 207-3776] use of undeclared identifier 'conv_buff' (HW_CNN.cpp:51:34)
ERROR: [HLS 207-2972] no member named 'LineBuffer' in namespace 'hls' (HW_CNN.cpp:69:10)
ERROR: [HLS 207-3776] use of undeclared identifier 'conv_buff' (HW_CNN.cpp:78:25)
ERROR: [HLS 207-3776] use of undeclared identifier 'conv_buff' (HW_CNN.cpp:79:25)
ERROR: [HLS 207-3776] use of undeclared identifier 'conv_buff' (HW_CNN.cpp:80:34)
ERROR: [HLS 207-2972] no member named 'LineBuffer' in namespace 'hls' (HW_CNN.cpp:98:10)
ERROR: [HLS 207-3776] use of undeclared identifier 'pool_buff' (HW_CNN.cpp:105:21)
ERROR: [HLS 207-3776] use of undeclared identifier 'pool_buff' (HW_CNN.cpp:106:21)
ERROR: [HLS 207-3776] use of undeclared identifier 'pool_buff' (HW_CNN.cpp:107:30)
ERROR: [HLS 207-3776] use of undeclared identifier 'n' (HW_CNN.cpp:107:51)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.227 seconds; current allocated memory: 1.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.417 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.629 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.191 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.676 seconds; current allocated memory: 0.426 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.104 seconds; current allocated memory: 121.215 MB.
INFO: [HLS 200-10] Analyzing design file 'HW_CNN.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.55 seconds; current allocated memory: 123.004 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 42,838 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,127 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,099 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,045 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,268 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,260 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,257 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,342 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,854 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'VITIS_LOOP_81_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:81:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_82_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:82:38)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_48_4' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:48:34)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_49_5' is marked as complete unroll implied by the pipeline pragma (HW_CNN.cpp:49:38)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_81_4' (HW_CNN.cpp:81:34) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:66:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_82_5' (HW_CNN.cpp:82:38) in function 'calculateLayer3' completely with a factor of 5 (HW_CNN.cpp:66:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_48_4' (HW_CNN.cpp:48:34) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:33:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_49_5' (HW_CNN.cpp:49:38) in function 'calculateLayer2' completely with a factor of 5 (HW_CNN.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.34.44.53.64)' into 'fp_struct<double>::to_double() const (.31.41.50.61)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.31.41.50.61)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer2(hls::stream<float, 0>&, hls::stream<float, 0>&, float*)' (HW_CNN.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer3(float*, hls::stream<float, 0>&, float*)' (HW_CNN.cpp:66:0)
INFO: [HLS 214-178] Inlining function 'tanh' into 'calculateLayer4(float*, hls::stream<float, 0>&, hls::stream<float, 0>&)' (HW_CNN.cpp:99:0)
INFO: [HLS 214-178] Inlining function 'calculateLayer4(float*, hls::stream<float, 0>&, hls::stream<float, 0>&)' into 'Lenet_HW(hls::stream<float, 0>&, hls::stream<float, 0>&, hls::stream<float, 0>&, hls::stream<float, 0>&, hls::stream<float, 0>&)' (HW_CNN.cpp:13:0)
WARNING: [HLS 214-167] The program may have out of bound array access
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.574 seconds; current allocated memory: 126.078 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 126.078 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 136.387 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 142.914 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (HW_CNN.cpp:7:30)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'Lenet_HW' (HW_CNN.cpp:7:35)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.378 seconds; current allocated memory: 169.992 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_77_2'(HW_CNN.cpp:77:26) and 'VITIS_LOOP_78_3'(HW_CNN.cpp:78:30) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_76_1'(HW_CNN.cpp:76:22) and 'VITIS_LOOP_77_2'(HW_CNN.cpp:77:26) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_44_2'(HW_CNN.cpp:44:26) and 'VITIS_LOOP_45_3'(HW_CNN.cpp:45:30) in function 'calculateLayer2' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_43_1'(HW_CNN.cpp:43:22) and 'VITIS_LOOP_44_2'(HW_CNN.cpp:44:26) in function 'calculateLayer2' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_114_3'(HW_CNN.cpp:114:31) and 'VITIS_LOOP_115_4'(HW_CNN.cpp:115:35) in function 'Lenet_HW' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'VITIS_LOOP_112_2'(HW_CNN.cpp:112:27) and 'VITIS_LOOP_114_3'(HW_CNN.cpp:114:31) in function 'Lenet_HW' into perfectly nested loops.
INFO: [HLS 200-2060] Failed to convert nested loops 'VITIS_LOOP_109_1'(HW_CNN.cpp:109:23) and 'VITIS_LOOP_112_2'(HW_CNN.cpp:112:27) in function 'Lenet_HW' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_77_2' (HW_CNN.cpp:77:26) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_76_1' (HW_CNN.cpp:76:22) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_44_2' (HW_CNN.cpp:44:26) in function 'calculateLayer2'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_43_1' (HW_CNN.cpp:43:22) in function 'calculateLayer2'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_114_3' (HW_CNN.cpp:114:31) in function 'Lenet_HW'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_112_2' (HW_CNN.cpp:112:27) in function 'Lenet_HW'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_109_1' (HW_CNN.cpp:109:23) in function 'Lenet_HW' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.523 seconds; current allocated memory: 213.703 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Lenet_HW' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.569 seconds; current allocated memory: 219.910 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.115 seconds; current allocated memory: 221.355 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 222.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.115 seconds; current allocated memory: 222.543 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln58_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_s', HW_CNN.cpp:54) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_24', HW_CNN.cpp:54) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_25', HW_CNN.cpp:54) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_26', HW_CNN.cpp:54) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_41', HW_CNN.cpp:54) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 23, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_45', HW_CNN.cpp:54) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer2' (loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'): Unable to enforce a carried dependence constraint (II = 25, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_0', HW_CNN.cpp:55) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:54).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 26, Depth = 85, loop 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.904 seconds; current allocated memory: 229.309 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 229.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln91_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'Layer2_Neurons_CPU'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_s', HW_CNN.cpp:87) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_1', HW_CNN.cpp:87) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_2', HW_CNN.cpp:87) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_3', HW_CNN.cpp:87) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_18', HW_CNN.cpp:87) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 23, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_22', HW_CNN.cpp:87) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'): Unable to enforce a carried dependence constraint (II = 25, distance = 1, offset = 1) between 'memshiftread' operation 32 bit ('p_0', HW_CNN.cpp:88) and 'memshiftread' operation 32 bit ('p_027', HW_CNN.cpp:87).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 26, Depth = 85, loop 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.601 seconds; current allocated memory: 231.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 231.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.342 seconds; current allocated memory: 231.465 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.131 seconds; current allocated memory: 231.496 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Lenet_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.149 seconds; current allocated memory: 231.516 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 231.570 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'Lenet_HW_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'Lenet_HW_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'Lenet_HW_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.579 seconds; current allocated memory: 233.766 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.167 seconds; current allocated memory: 238.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer2' pipeline 'VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_4ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_4ns_10ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.925 seconds; current allocated memory: 243.449 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'VITIS_LOOP_76_1_VITIS_LOOP_77_2_VITIS_LOOP_78_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_3ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.029 seconds; current allocated memory: 250.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4' pipeline 'VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Lenet_HW_Pipeline_VITIS_LOOP_112_2_VITIS_LOOP_114_3_VITIS_LOOP_115_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.181 seconds; current allocated memory: 257.230 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Lenet_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Lenet_HW/Layer1_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'Lenet_HW/Layer1_Weights_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'Lenet_HW/Layer2_Weights_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'Lenet_HW/Layer3_Weights_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'Lenet_HW/Layer4_Neurons_stream' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'Lenet_HW' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Lenet_HW'.
INFO: [RTMG 210-278] Implementing memory 'Lenet_HW_Layer2_Neurons_CPU_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'Lenet_HW_Layer3_Neurons_CPU_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.813 seconds; current allocated memory: 258.496 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.523 seconds; current allocated memory: 262.512 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.695 seconds; current allocated memory: 270.641 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for Lenet_HW.
INFO: [VLOG 209-307] Generating Verilog RTL for Lenet_HW.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 27.79 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 27.675 seconds; current allocated memory: 150.020 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
ERROR: [COSIM 212-317] C++ compile error.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-331] Aborting co-simulation: C simulation failed, compilation errors.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 11.382 seconds; current allocated memory: 15.137 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
ERROR: [COSIM 212-317] C++ compile error.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-331] Aborting co-simulation: C simulation failed, compilation errors.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 10.819 seconds; current allocated memory: 15.301 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
ERROR: [COSIM 212-317] C++ compile error.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-331] Aborting co-simulation: C simulation failed, compilation errors.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.262 seconds; current allocated memory: 15.844 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.688 seconds; current allocated memory: 0.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.589 seconds; current allocated memory: 0.277 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.563 seconds; current allocated memory: 0.289 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.849 seconds; current allocated memory: 0.297 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.59 seconds; current allocated memory: 0.293 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
ERROR: [COSIM 212-317] C++ compile error.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-331] Aborting co-simulation: C simulation failed, compilation errors.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 22.792 seconds; current allocated memory: 15.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
ERROR: [COSIM 212-317] C++ compile error.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-321] EXE file generate failed.
ERROR: [COSIM 212-331] Aborting co-simulation: C simulation failed, compilation errors.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 15.626 seconds; current allocated memory: 15.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 40 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 40ns.
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name Lenet_HW Lenet_HW 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.033 seconds; current allocated memory: 0.508 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.323 seconds; current allocated memory: 123.035 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
ERROR: [HLS 207-813] 'calculateLayer3.h' file not found with <angled> include; use "quotes" instead (calculateLayer3.cpp:3:10)
ERROR: [HLS 207-813] 'calculateLayer2.h' file not found with <angled> include; use "quotes" instead (./calculateLayer3.h:4:10)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.571 seconds; current allocated memory: 1.266 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.316 seconds; current allocated memory: 120.781 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
ERROR: [HLS 207-813] 'calculateLayer3.h' file not found with <angled> include; use "quotes" instead (calculateLayer3.cpp:3:10)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.149 seconds; current allocated memory: 1.016 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.309 seconds; current allocated memory: 121.625 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
ERROR: [HLS 207-2981] no template named 'ap_fixed' (./calculateLayer3.h:6:9)
ERROR: [HLS 207-3776] use of undeclared identifier 'hls' (calculateLayer3.cpp:36:57)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.11 seconds; current allocated memory: 1.109 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.628 seconds; current allocated memory: 0.320 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.213 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.097 seconds; current allocated memory: 0.379 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.752 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.838 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.826 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 119.216 seconds; current allocated memory: 7.188 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 30.439 seconds; current allocated memory: 0.320 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.334 seconds; current allocated memory: 120.984 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '+=' is ambiguous (with operand types 'float' and 'typename RType<16, 5, true>::mult' (aka 'ap_fixed<32, 10>')) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, float) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, double) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long double) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __float128) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, int) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __int128) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned int) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned __int128) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, float) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, double) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long double) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __float128) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, int) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __int128) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned int) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long long) (calculateLayer3.cpp:29:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned __int128) (calculateLayer3.cpp:29:12)
ERROR: [HLS 207-3325] use of overloaded operator '+=' is ambiguous (with operand types 'float' and 'typename RType<16, 5, true>::mult' (aka 'ap_fixed<32, 10>')) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, float) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, double) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long double) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __float128) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, int) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __int128) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned int) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned __int128) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, float) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, double) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long double) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __float128) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, int) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __int128) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned int) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long long) (calculateLayer3.cpp:30:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned __int128) (calculateLayer3.cpp:30:12)
ERROR: [HLS 207-3325] use of overloaded operator '+=' is ambiguous (with operand types 'float' and 'typename RType<16, 5, true>::mult' (aka 'ap_fixed<32, 10>')) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, float) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, double) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long double) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __float128) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, int) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __int128) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned int) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned __int128) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, float) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, double) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long double) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __float128) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, int) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __int128) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned int) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long long) (calculateLayer3.cpp:31:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned __int128) (calculateLayer3.cpp:31:12)
ERROR: [HLS 207-3325] use of overloaded operator '+=' is ambiguous (with operand types 'float' and 'typename RType<16, 5, true>::mult' (aka 'ap_fixed<32, 10>')) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, float) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, double) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long double) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __float128) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, int) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __int128) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned int) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned __int128) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, float) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, double) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long double) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __float128) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, int) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __int128) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned int) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long long) (calculateLayer3.cpp:32:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned __int128) (calculateLayer3.cpp:32:12)
ERROR: [HLS 207-3325] use of overloaded operator '+=' is ambiguous (with operand types 'float' and 'typename RType<16, 5, true>::mult' (aka 'ap_fixed<32, 10>')) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, float) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, double) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long double) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __float128) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, int) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __int128) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned int) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned __int128) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, float) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, double) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long double) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __float128) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, int) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __int128) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned int) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long long) (calculateLayer3.cpp:33:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned __int128) (calculateLayer3.cpp:33:12)
ERROR: [HLS 207-3325] use of overloaded operator '+=' is ambiguous (with operand types 'float' and 'typename RType<16, 5, true>::mult' (aka 'ap_fixed<32, 10>')) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, float) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, double) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long double) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __float128) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, int) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, long long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, __int128) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned int) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned long long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(float &, unsigned __int128) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, float) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, double) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long double) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __float128) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, int) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, long long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, __int128) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned int) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned long long) (calculateLayer3.cpp:34:12)
INFO: [HLS 207-4370] built-in candidate operator+=(volatile float &, unsigned __int128) (calculateLayer3.cpp:34:12)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.208 seconds; current allocated memory: 3.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.302 seconds; current allocated memory: 121.695 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 55.282 seconds; current allocated memory: 127.828 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 8,330 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,284 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,972 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,695 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 14,163 instructions in the design after the 'Array/Struct' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 5,874 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 10,404 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 10,416 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:27:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:28:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 214-248] Applying array_partition to 'Layer2_Neurons_CPU': Complete partitioning on dimension 1. (calculateLayer3.cpp:10:0)
INFO: [HLS 214-248] Applying array_partition to 'Layer3_Neurons_CPU': Complete partitioning on dimension 1. (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2042.06 seconds; current allocated memory: 128.938 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 128.938 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 41 seconds. CPU system time: 0 seconds. Elapsed time: 97.631 seconds; current allocated memory: 128.938 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 16 seconds. CPU system time: 0 seconds. Elapsed time: 38.599 seconds; current allocated memory: 130.199 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:24:9) to (calculateLayer3.cpp:36:38) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 175 seconds. CPU system time: 1 seconds. Elapsed time: 981.899 seconds; current allocated memory: 191.305 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'row_Loop'(calculateLayer3.cpp:21:12) and 'col_loop'(calculateLayer3.cpp:23:13) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:20:23) and 'row_Loop'(calculateLayer3.cpp:21:12) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:21:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:20:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 227 seconds. CPU system time: 2 seconds. Elapsed time: 281.418 seconds; current allocated memory: 341.957 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 30 seconds. CPU system time: 0 seconds. Elapsed time: 36.947 seconds; current allocated memory: 342.652 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.387 seconds; current allocated memory: 345.270 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 39, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.424 seconds; current allocated memory: 345.480 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 345.496 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.836 seconds; current allocated memory: 0.273 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.489 seconds; current allocated memory: 0.281 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.617 seconds; current allocated memory: 0.297 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.053 seconds; current allocated memory: 0.281 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.993 seconds; current allocated memory: 0.281 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.592 seconds; current allocated memory: 0.281 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.079 seconds; current allocated memory: 0.293 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 20.111 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 50.21 seconds; current allocated memory: 0.508 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 121.840 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (calculateLayer3.cpp:16:9)
WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file calculateLayer3.cpp
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 43.877 seconds; current allocated memory: 127.941 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,292 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,745 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 834 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 809 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 528 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,046 instructions in the design after the 'Array/Struct' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,021 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,021 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,021 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,027 instructions in the design after the 'Array/Struct (step 5)' phas==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.268 seconds; current allocated memory: 121.633 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (calculateLayer3.cpp:16:9)
WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file calculateLayer3.cpp
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 37.489 seconds; current allocated memory: 127.359 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,292 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,745 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 834 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 809 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 528 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,046 instructions in the design after the 'Array/Struct' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,021 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,021 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,021 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,027 instructions in the design after the 'Array/Struct (step 5)' phas==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.265 seconds; current allocated memory: 120.906 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (calculateLayer3.cpp:17:9)
WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file calculateLayer3.cpp
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 40.652 seconds; current allocated memory: 127.234 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,292 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,747 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 836 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 811 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 530 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 530 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,704 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,717 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< col_loop> at calculateLayer3.cpp:25:13 
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:27:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:28:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.92 seconds; current allocated memory: 128.805 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.009 seconds; current allocated memory: 128.805 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 142.160 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 148.613 MB.
INFO: [XFORM 203-721] Changing loop 'Loop_calculateLayer3_loop_proc' (calculateLayer3.cpp:22) to a process function for dataflow in function 'calculateLayer3'.
INFO: [XFORM 203-712] Applying dataflow to function 'calculateLayer3' (calculateLayer3.cpp:5:1), detected/extracted 1 process function(s): 
	 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:19:9) to (calculateLayer3.cpp:25:13) in function 'Loop_calculateLayer3_loop_proc'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.577 seconds; current allocated memory: 179.809 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'row_Loop'(calculateLayer3.cpp:23:12) and 'col_loop'(calculateLayer3.cpp:25:13) in function 'Loop_calculateLayer3_loop_proc' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:22:23) and 'row_Loop'(calculateLayer3.cpp:23:12) in function 'Loop_calculateLayer3_loop_proc' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:23:12) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:22:23) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.239 seconds; current allocated memory: 218.523 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.805 seconds; current allocated memory: 223.633 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.204 seconds; current allocated memory: 224.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 39, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.294 seconds; current allocated memory: 225.613 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 226.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop_col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:29) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:30) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('somme', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_128', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_143', calculateLayer3.cpp:34) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_147', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:33) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 151, Depth = 209, loop 'calculateLayer3_loop_row_Loop_col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 17 seconds. CPU system time: 0 seconds. Elapsed time: 24.414 seconds; current allocated memory: 245.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.282 seconds; current allocated memory: 247.113 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.304 seconds; current allocated memory: 248.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 248.090 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.689 seconds; current allocated memory: 251.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_4_full_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_14_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_4_full_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.733 seconds; current allocated memory: 256.914 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'Loop_calculateLayer3_loop_proc' pipeline 'calculateLayer3_loop_row_Loop_col_loop' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_4_max_dsp_1' is changed to 'dmul_64ns_64ns_64_4_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-104] Estimated max fanout for 'Loop_calculateLayer3_loop_proc' is 5592 from HDL expression: (((1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp3299)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp3298)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp3297)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp3296)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp3295)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp3294)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp3293)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001_ignoreCallOp3292)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001_ignoreCallOp3291)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001_ignoreCallOp3290)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001_ignoreCallOp3289)) | ((1'b1 == ap_CS_fsm_pp0_stage25) 
    & (1'b0 == ap_block_pp0_stage25_11001_ignoreCallOp3288)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001_ignoreCallOp3287)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001_ignoreCallOp3286)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001_ignoreCallOp3285)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001_ignoreCallOp3284)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001_ignoreCallOp3283)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001_ignoreCallOp3282)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001_ignoreCallOp3281)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp3280)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp3279)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp3278)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp3277)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp3276)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp3275)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp3274)) | ((1'b1 == ap_CS_fsm_pp0_stage49) & (1'b0 == ap_block_pp0_stage49_11001_ignoreCallOp3312)) | ((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001_ignoreCallOp3311)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47_11001_ignoreCallOp3310)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001_ignoreCallOp3309)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001_ignoreCallOp3308)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001_ignoreCallOp3307)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001_ignoreCallOp3306)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001_ignoreCallOp3305)) | ((1'b1 == ap_CS_fsm_pp0_stage41) 
    & (1'b0 == ap_block_pp0_stage41_11001_ignoreCallOp3304)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001_ignoreCallOp3303)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp3302)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp3301)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp3300)))
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_6ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_5ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.781 seconds; current allocated memory: 282.836 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [HLS 200-656] Deadlocks can occur since process Loop_calculateLayer3_loop_proc is instantiated in a dataflow region with ap_ctrl_none or without start propagation and contains an auto-rewind pipeline.
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 5 seconds. Elapsed time: 8.776 seconds; current allocated memory: 322.023 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.226 seconds; current allocated memory: 322.023 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 3.004 seconds; current allocated memory: 336.816 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 46.14 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 25 seconds. CPU system time: 7 seconds. Elapsed time: 106.664 seconds; current allocated memory: 215.992 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 60ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 60 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.266 seconds; current allocated memory: 121.766 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (calculateLayer3.cpp:17:9)
WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file calculateLayer3.cpp
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 37.835 seconds; current allocated memory: 127.746 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,292 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 40,834 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 13,091 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 12,382 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 10,971 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 10,433 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,731 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,737 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,751 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'col_loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:25:12)
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:21)
INFO: [HLS 214-186] Unrolling loop 'col_loop' (calculateLayer3.cpp:25:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:27:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:28:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 35.968 seconds; current allocated memory: 129.820 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.008 seconds; current allocated memory: 129.828 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.05 seconds; current allocated memory: 155.043 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.724 seconds; current allocated memory: 162.094 MB.
INFO: [XFORM 203-721] Changing loop 'Loop_calculateLayer3_loop_proc' (calculateLayer3.cpp:22) to a process function for dataflow in function 'calculateLayer3'.
INFO: [XFORM 203-712] Applying dataflow to function 'calculateLayer3' (calculateLayer3.cpp:5:1), detected/extracted 1 process function(s): 
	 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:24:9) to (calculateLayer3.cpp:23:12) in function 'Loop_calculateLayer3_loop_proc'... converting 76 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.381 seconds; current allocated memory: 216.379 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:22:23) and 'row_Loop'(calculateLayer3.cpp:23:12) in function 'Loop_calculateLayer3_loop_proc' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:22:23) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.51 seconds; current allocated memory: 266.371 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.812 seconds; current allocated memory: 270.699 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 272.473 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 22, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.284 seconds; current allocated memory: 273.066 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 273.211 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_316) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_150', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_162', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_314', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_184', calculateLayer3.cpp:33) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_48', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 193). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_351', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 225). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_444', calculateLayer3.cpp:33) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 241). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_210', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 249). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_79', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 253). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_271', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 255). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_357', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 256). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive for loop 'calculateLayer3_loop_row_Loop': unable to pipeline.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 183 seconds. CPU system time: 1 seconds. Elapsed time: 230.444 seconds; current allocated memory: 324.824 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 12.972 seconds; current allocated memory: 332.277 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.771 seconds; current allocated memory: 336.996 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.238 seconds; current allocated memory: 337.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.988 seconds; current allocated memory: 339.219 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_8_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.689 seconds; current allocated memory: 342.523 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 750 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_5ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_5ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.707 seconds; current allocated memory: 411.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 13 seconds. Elapsed time: 25.677 seconds; current allocated memory: 515.961 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.372 seconds; current allocated memory: 515.961 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.437 seconds; current allocated memory: 541.008 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 22.94 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 211 seconds. CPU system time: 14 seconds. Elapsed time: 372.063 seconds; current allocated memory: 419.902 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 120.750 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (calculateLayer3.cpp:17:9)
WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file calculateLayer3.cpp
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 37.286 seconds; current allocated memory: 126.891 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,292 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 8,348 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,298 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,985 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,704 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,704 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,713 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:27:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:28:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.872 seconds; current allocated memory: 128.590 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.008 seconds; current allocated memory: 128.590 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.333 seconds; current allocated memory: 141.938 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:37: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.287 seconds; current allocated memory: 148.262 MB.
INFO: [XFORM 203-721] Changing loop 'Loop_calculateLayer3_loop_proc' (calculateLayer3.cpp:22) to a process function for dataflow in function 'calculateLayer3'.
INFO: [XFORM 203-712] Applying dataflow to function 'calculateLayer3' (calculateLayer3.cpp:5:1), detected/extracted 1 process function(s): 
	 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:36:9) to (calculateLayer3.cpp:25:13) in function 'Loop_calculateLayer3_loop_proc'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.398 seconds; current allocated memory: 179.547 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'row_Loop'(calculateLayer3.cpp:23:12) and 'col_loop'(calculateLayer3.cpp:25:13) in function 'Loop_calculateLayer3_loop_proc' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:22:23) and 'row_Loop'(calculateLayer3.cpp:23:12) in function 'Loop_calculateLayer3_loop_proc' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:23:12) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:22:23) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.122 seconds; current allocated memory: 218.578 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.706 seconds; current allocated memory: 223.609 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 225.035 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.299 seconds; current allocated memory: 225.883 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.154 seconds; current allocated memory: 226.188 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop_col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('somme', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_128', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_143', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_147', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'Loop_calculateLayer3_loop_proc' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:20) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 151, Depth = 188, loop 'calculateLayer3_loop_row_Loop_col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 17 seconds. CPU system time: 0 seconds. Elapsed time: 23.758 seconds; current allocated memory: 245.328 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.097 seconds; current allocated memory: 246.340 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.23 seconds; current allocated memory: 247.473 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.137 seconds; current allocated memory: 247.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.589 seconds; current allocated memory: 250.223 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.285 seconds; current allocated memory: 255.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'Loop_calculateLayer3_loop_proc' pipeline 'calculateLayer3_loop_row_Loop_col_loop' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_6ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.139 seconds; current allocated memory: 281.805 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [HLS 200-656] Deadlocks can occur since process Loop_calculateLayer3_loop_proc is instantiated in a dataflow region with ap_ctrl_none or without start propagation and contains an auto-rewind pipeline.
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 4 seconds. Elapsed time: 8.385 seconds; current allocated memory: 321.000 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.955 seconds; current allocated memory: 321.000 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.476 seconds; current allocated memory: 335.055 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 28.04 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 26 seconds. CPU system time: 6 seconds. Elapsed time: 102.318 seconds; current allocated memory: 214.469 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.209 seconds; current allocated memory: 121.641 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 34.941 seconds; current allocated memory: 127.840 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,287 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 8,470 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,016 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,900 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,523 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,541 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,987 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,987 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,987 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 12,593 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 12,773 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-359] Unrolling loop 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3': changing partial unrolling into complete unrolling since the unrolling factor (=5) is no less than the loop trip count (=5). (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< col_loop> at calculateLayer3.cpp:24:12 
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:26:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:27:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 20.817 seconds; current allocated memory: 129.730 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 129.730 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.832 seconds; current allocated memory: 159.730 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.806 seconds; current allocated memory: 163.500 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 6.418 seconds; current allocated memory: 221.754 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.812 seconds; current allocated memory: 263.879 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.712 seconds; current allocated memory: 269.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 270.371 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 271.195 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.141 seconds; current allocated memory: 271.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_col_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load', calculateLayer3.cpp:28) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_1', calculateLayer3.cpp:29) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_2', calculateLayer3.cpp:30) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_3', calculateLayer3.cpp:31) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_129', calculateLayer3.cpp:31) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_144', calculateLayer3.cpp:28) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Neurons_CPU_load_148', calculateLayer3.cpp:32) on array 'Layer2_Neurons_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Neurons_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 150, Depth = 187, loop 'col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 16.77 seconds; current allocated memory: 288.301 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.481 seconds; current allocated memory: 289.938 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_col_loop1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:28) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:29) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:30) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_3', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_129', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_144', calculateLayer3.cpp:28) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 150, Depth = 187, loop 'col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 12 seconds. CPU system time: 0 seconds. Elapsed time: 18.357 seconds; current allocated memory: 303.645 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.223 seconds; current allocated memory: 306.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.025 seconds; current allocated memory: 307.074 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.159 seconds; current allocated memory: 307.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.655 seconds; current allocated memory: 310.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.288 seconds; current allocated memory: 314.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_col_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_col_loop' pipeline 'col_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_col_loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.69 seconds; current allocated memory: 335.922 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_col_loop1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_col_loop1' pipeline 'col_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_col_loop1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 4 seconds. Elapsed time: 7.922 seconds; current allocated memory: 379.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port CTRL_bus.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 4 seconds. Elapsed time: 7.159 seconds; current allocated memory: 411.609 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.886 seconds; current allocated memory: 411.609 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.703 seconds; current allocated memory: 431.449 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 28.44 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 44 seconds. CPU system time: 10 seconds. Elapsed time: 132.888 seconds; current allocated memory: 310.551 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.321 seconds; current allocated memory: 121.453 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 47.065 seconds; current allocated memory: 127.727 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,287 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 8,470 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 4,016 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,900 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,523 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,541 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,511 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,987 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,987 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,987 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 12,589 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 12,769 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-359] Unrolling loop 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3': changing partial unrolling into complete unrolling since the unrolling factor (=5) is no less than the loop trip count (=5). (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< col_loop> at calculateLayer3.cpp:24:12 
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:26:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:27:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 28.928 seconds; current allocated memory: 129.426 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.011 seconds; current allocated memory: 129.438 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.478 seconds; current allocated memory: 159.055 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.989 seconds; current allocated memory: 163.039 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:12) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.864 seconds; current allocated memory: 221.906 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.5 seconds; current allocated memory: 264.469 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.754 seconds; current allocated memory: 269.758 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 271.137 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.323 seconds; current allocated memory: 271.648 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.151 seconds; current allocated memory: 271.883 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_col_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:29) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:30) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_3', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_4', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_130', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_145', calculateLayer3.cpp:29) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_147', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 147). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 148). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 149, Depth = 187, loop 'col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 20.545 seconds; current allocated memory: 287.832 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.706 seconds; current allocated memory: 289.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_col_loop1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:28) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:29) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:30) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_3', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_129', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_144', calculateLayer3.cpp:28) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_col_loop1' (loop 'col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 150, Depth = 187, loop 'col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 16.923 seconds; current allocated memory: 304.629 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.547 seconds; current allocated memory: 307.035 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.088 seconds; current allocated memory: 307.738 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.177 seconds; current allocated memory: 307.809 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.702 seconds; current allocated memory: 311.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.272 seconds; current allocated memory: 315.121 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_col_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_col_loop' pipeline 'col_loop' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop/Layer2_Neurons_CPU_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop/Layer2_Neurons_CPU_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop/Layer2_Neurons_CPU_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop/Layer2_Neurons_CPU_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_col_loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.069 seconds; current allocated memory: 336.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_col_loop1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_col_loop1' pipeline 'col_loop' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop1/Layer2_Neurons_CPU_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop1/Layer2_Neurons_CPU_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop1/Layer2_Neurons_CPU_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3_Pipeline_col_loop1/Layer2_Neurons_CPU_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_col_loop1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 4 seconds. Elapsed time: 8.335 seconds; current allocated memory: 379.965 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port CTRL_bus.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 4 seconds. Elapsed time: 12.176 seconds; current allocated memory: 412.953 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.432 seconds; current allocated memory: 414.000 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 4.581 seconds; current allocated memory: 434.168 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 28.44 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 42 seconds. CPU system time: 10 seconds. Elapsed time: 168.795 seconds; current allocated memory: 313.270 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.381 seconds; current allocated memory: 126.750 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 49.109 seconds; current allocated memory: 133.090 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,287 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,732 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 825 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 801 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 530 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 524 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,698 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,700 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,712 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 214-376] automatically set the pipeline for Loop< col_loop> at calculateLayer3.cpp:24:13 
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:26:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:27:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.118 seconds; current allocated memory: 134.754 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.009 seconds; current allocated memory: 134.758 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.562 seconds; current allocated memory: 147.891 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.349 seconds; current allocated memory: 153.906 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:18:9) to (calculateLayer3.cpp:24:13) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (calculateLayer3.cpp:5:52)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.243 seconds; current allocated memory: 185.695 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'row_Loop'(calculateLayer3.cpp:22:12) and 'col_loop'(calculateLayer3.cpp:24:13) in function 'calculateLayer3' into perfectly nested loops.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:21:23) and 'row_Loop'(calculateLayer3.cpp:22:12) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.256 seconds; current allocated memory: 216.320 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.513 seconds; current allocated memory: 221.160 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.364 seconds; current allocated memory: 222.742 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.459 seconds; current allocated memory: 223.203 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 223.590 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop_col_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:28) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:29) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('somme', calculateLayer3.cpp:21) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:30) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_128', calculateLayer3.cpp:30) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_143', calculateLayer3.cpp:33) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 145). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_147', calculateLayer3.cpp:31) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 151, Depth = 188, loop 'calculateLayer3_loop_row_Loop_col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 14 seconds. CPU system time: 0 seconds. Elapsed time: 31.646 seconds; current allocated memory: 242.883 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 4.007 seconds; current allocated memory: 244.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.357 seconds; current allocated memory: 247.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.721 seconds; current allocated memory: 251.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'bram'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 's_axilite & ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'calculateLayer3_loop_row_Loop_col_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port CTRL_bus.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_2_max_dsp_1' is changed to 'dmul_64ns_64ns_64_2_max_dsp_1_x' due to conflict.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_WEN_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_Din_A' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_WEN_B' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'calculateLayer3/Layer2_Neurons_CPU_Din_B' to 0.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_3ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_3ns_6ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_5ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.987 seconds; current allocated memory: 277.219 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 7 seconds. Elapsed time: 19.174 seconds; current allocated memory: 317.297 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.225 seconds; current allocated memory: 331.734 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 28.44 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 26 seconds. CPU system time: 8 seconds. Elapsed time: 143.049 seconds; current allocated memory: 205.020 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 50ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 50 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.307 seconds; current allocated memory: 123.055 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 56.262 seconds; current allocated memory: 129.094 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,287 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 42,304 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 13,976 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 13,354 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,977 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,380 instructions in the design after the 'Array/Struct' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 10,795 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 12,295 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 11,503 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,961 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,961 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,961 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,961 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,961 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 9,070 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 10,411 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'col_loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:24:12)
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:26:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:21)
INFO: [HLS 214-186] Unrolling loop 'col_loop' (calculateLayer3.cpp:24:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:26:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:27:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.38.48.57.68)' into 'fp_struct<double>::to_double() const (.35.45.54.65)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.35.45.54.65)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 38.883 seconds; current allocated memory: 131.098 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.009 seconds; current allocated memory: 131.098 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.748 seconds; current allocated memory: 156.180 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:36: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.013 seconds; current allocated memory: 162.434 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:23:9) to (calculateLayer3.cpp:22:12) in function 'calculateLayer3'... converting 76 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.188 seconds; current allocated memory: 211.672 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:21:23) and 'row_Loop'(calculateLayer3.cpp:22:12) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 23.903 seconds; current allocated memory: 343.855 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.273 seconds; current allocated memory: 345.047 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 346.359 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 24, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.286 seconds; current allocated memory: 347.137 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.203 seconds; current allocated memory: 347.445 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln28) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_1', calculateLayer3.cpp:29) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:29) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_2', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_3', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_4', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_130', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 193, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_193', calculateLayer3.cpp:29) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:29) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 225, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_225', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 241, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_241', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 249, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_249', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 253, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_253', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 255, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_255', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop'): Unable to enforce a carried dependence constraint (II = 256, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_256', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:28) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:28).
INFO: [SCHED 204-61] Unable to satisfy pipeline directive for loop 'calculateLayer3_loop_row_Loop': unable to pipeline.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 22 seconds. CPU system time: 0 seconds. Elapsed time: 55.624 seconds; current allocated memory: 393.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 10.25 seconds; current allocated memory: 401.996 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.375 seconds; current allocated memory: 407.848 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_2_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_2_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.731 seconds; current allocated memory: 411.754 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'ap_fifo'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'ap_fifo'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'return' to AXI-Lite port CTRL_bus.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_2_max_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 750 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.235 seconds; current allocated memory: 496.086 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 6 seconds. CPU system time: 10 seconds. Elapsed time: 25.435 seconds; current allocated memory: 585.129 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 3.108 seconds; current allocated memory: 608.219 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 28.44 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 59 seconds. CPU system time: 12 seconds. Elapsed time: 237.465 seconds; current allocated memory: 485.199 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 121.094 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 46.583 seconds; current allocated memory: 127.133 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 8,632 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,436 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,124 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,847 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,847 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,847 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 3,147 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,997 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,697 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,697 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,697 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,697 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,697 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,356 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,670 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:27:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:21)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:27:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:28:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.38.48.57.68)' into 'fp_struct<double>::to_double() const (.35.45.54.65)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.35.45.54.65)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.784 seconds; current allocated memory: 128.707 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.011 seconds; current allocated memory: 128.707 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.565 seconds; current allocated memory: 141.582 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:38: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.47 seconds; current allocated memory: 148.328 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:25:9) to (calculateLayer3.cpp:24:13) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.214 seconds; current allocated memory: 182.883 MB.
INFO: [HLS 200-2061] Successfully converted nested loops 'calculateLayer3_loop'(calculateLayer3.cpp:21:23) and 'row_Loop'(calculateLayer3.cpp:22:12) in function 'calculateLayer3' into perfectly nested loops.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.42 seconds; current allocated memory: 210.750 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.051 seconds; current allocated memory: 215.668 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.204 seconds; current allocated memory: 217.188 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 39, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 218.117 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 218.504 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop_row_Loop_col_loop'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_1', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_2', calculateLayer3.cpp:32) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:32) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_3', calculateLayer3.cpp:33) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:33) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_4', calculateLayer3.cpp:34) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:34) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 130, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_130', calculateLayer3.cpp:34) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:34) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 145, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_145', calculateLayer3.cpp:31) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:31) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to enforce a carried dependence constraint (II = 149, distance = 1, offset = 1) between fifo read operation ('Layer2_Neurons_CPU_read_149', calculateLayer3.cpp:35) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:35) and fifo read operation ('Layer2_Neurons_CPU_read', calculateLayer3.cpp:30) on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:30).
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3' (loop 'calculateLayer3_loop_row_Loop_col_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:34) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 151, Depth = 209, loop 'calculateLayer3_loop_row_Loop_col_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 12 seconds. CPU system time: 0 seconds. Elapsed time: 24.381 seconds; current allocated memory: 275.359 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.439 seconds; current allocated memory: 275.359 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.347 seconds; current allocated memory: 275.359 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_4_full_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_14_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_4_full_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.4 seconds; current allocated memory: 275.359 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'ap_fifo'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'ap_fifo'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3' pipeline 'calculateLayer3_loop_row_Loop_col_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Bundling port 'Layer2_Weights_CPU' to AXI-Lite port control.
WARNING: [RTGEN 206-101] RTL name 'dmul_64ns_64ns_64_4_max_dsp_1' is changed to 'dmul_64ns_64ns_64_4_max_dsp_1_x' due to conflict.
INFO: [RTGEN 206-104] Estimated max fanout for 'calculateLayer3' is 5592 from HDL expression: (((1'b0 == ap_block_pp0_stage49_11001_ignoreCallOp2617) & (1'b1 == ap_CS_fsm_pp0_stage49)) | ((1'b0 == ap_block_pp0_stage48_11001_ignoreCallOp2616) & (1'b1 == ap_CS_fsm_pp0_stage48)) | ((1'b0 == ap_block_pp0_stage47_11001_ignoreCallOp2615) & (1'b1 == ap_CS_fsm_pp0_stage47)) | ((1'b0 == ap_block_pp0_stage46_11001_ignoreCallOp2614) & (1'b1 == ap_CS_fsm_pp0_stage46)) | ((1'b0 == ap_block_pp0_stage45_11001_ignoreCallOp2613) & (1'b1 == ap_CS_fsm_pp0_stage45)) | ((1'b0 == ap_block_pp0_stage44_11001_ignoreCallOp2612) & (1'b1 == ap_CS_fsm_pp0_stage44)) | ((1'b0 == ap_block_pp0_stage43_11001_ignoreCallOp2611) & (1'b1 == ap_CS_fsm_pp0_stage43)) | ((1'b0 == ap_block_pp0_stage42_11001_ignoreCallOp2610) & (1'b1 == ap_CS_fsm_pp0_stage42)) | ((1'b0 == ap_block_pp0_stage41_11001_ignoreCallOp2609) & (1'b1 == ap_CS_fsm_pp0_stage41)) | ((1'b0 == ap_block_pp0_stage40_11001_ignoreCallOp2608) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((1'b0 == ap_block_pp0_stage39_11001_ignoreCallOp2607) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage38_11001_ignoreCallOp2606) 
    & (1'b1 == ap_CS_fsm_pp0_stage38)) | ((1'b0 == ap_block_pp0_stage37_11001_ignoreCallOp2605) & (1'b1 == ap_CS_fsm_pp0_stage37)) | ((1'b0 == ap_block_pp0_stage36_11001_ignoreCallOp2604) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b0 == ap_block_pp0_stage35_11001_ignoreCallOp2603) & (1'b1 == ap_CS_fsm_pp0_stage35)) | ((1'b0 == ap_block_pp0_stage34_11001_ignoreCallOp2602) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage33_11001_ignoreCallOp2601) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((1'b0 == ap_block_pp0_stage32_11001_ignoreCallOp2600) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp2599) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp2598) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage29_11001_ignoreCallOp2597) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001_ignoreCallOp2596) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage27_11001_ignoreCallOp2595) & (1'b1 == ap_CS_fsm_pp0_stage27)) 
    | ((1'b0 == ap_block_pp0_stage26_11001_ignoreCallOp2594) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25_11001_ignoreCallOp2593) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage24_11001_ignoreCallOp2592) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001_ignoreCallOp2591) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22_11001_ignoreCallOp2590) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001_ignoreCallOp2589) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20_11001_ignoreCallOp2588) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001_ignoreCallOp2587) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001_ignoreCallOp2586) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp2585) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp2584) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp2583) 
    & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp2582) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp2581) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp2580) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp2579) & (1'b1 == ap_CS_fsm_pp0_stage11)))
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1_x': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_14_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.227 seconds; current allocated memory: 275.359 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 3 seconds. Elapsed time: 9.523 seconds; current allocated memory: 301.281 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.841 seconds; current allocated memory: 312.473 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 46.14 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 20 seconds. CPU system time: 4 seconds. Elapsed time: 115.578 seconds; current allocated memory: 191.848 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 121.535 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 37.545 seconds; current allocated memory: 127.598 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
ERROR: [HLS 214-274] In 'kernelCol_Loop', Pragma conflict happens on 'UNROLL' and 'PIPELINE' pragmas: Complete unroll will break the target of other loop pragmas (calculateLayer3.cpp:28:21)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 47.049 seconds; current allocated memory: 6.777 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.231 seconds; current allocated memory: 121.539 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 38.729 seconds; current allocated memory: 127.676 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,920 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,266 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,194 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 917 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 917 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 917 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 977 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 947 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 890 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 813 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 886 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:18)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:29:18) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.38.48.57.68)' into 'fp_struct<double>::to_double() const (.35.45.54.65)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.35.45.54.65)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer2_Neurons_CPU' (calculateLayer3.cpp:10:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'Layer3_Neurons_CPU' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.596 seconds; current allocated memory: 129.027 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.011 seconds; current allocated memory: 129.027 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.205 seconds; current allocated memory: 138.941 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:40: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 144.566 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:40:85) to (calculateLayer3.cpp:24:13) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.499 seconds; current allocated memory: 172.820 MB.
INFO: [HLS 200-2060] Failed to convert nested loops 'col_loop'(calculateLayer3.cpp:24:13) and 'kernelRow_Loop'(calculateLayer3.cpp:27:20) in function 'calculateLayer3' into perfectly nested loops.
WARNING: [HLS 200-960] Cannot flatten loop 'col_loop' (calculateLayer3.cpp:24:13) in function 'calculateLayer3' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.409 seconds; current allocated memory: 198.090 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_kernelRow_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'kernelRow_Loop'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 27, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 29, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 30, Depth = 34, loop 'kernelRow_Loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.832 seconds; current allocated memory: 207.762 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 208.977 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.587 seconds; current allocated memory: 209.547 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.173 seconds; current allocated memory: 210.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 210.273 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 210.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.338 seconds; current allocated memory: 210.781 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.172 seconds; current allocated memory: 211.359 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_kernelRow_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_kernelRow_Loop' pipeline 'kernelRow_Loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 30 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_kernelRow_Loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.447 seconds; current allocated memory: 217.391 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.756 seconds; current allocated memory: 224.309 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_4_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_14_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.195 seconds; current allocated memory: 228.539 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 'ap_fifo'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 'ap_fifo'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_13_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.861 seconds; current allocated memory: 231.957 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.889 seconds; current allocated memory: 237.492 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.219 seconds; current allocated memory: 247.219 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 46.14 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 2 seconds. Elapsed time: 63.349 seconds; current allocated memory: 126.297 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.201 seconds; current allocated memory: 121.246 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (calculateLayer3.cpp:17:9)
WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file calculateLayer3.cpp
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 38.141 seconds; current allocated memory: 127.320 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,292 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,876 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,248 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,175 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 894 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 891 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 888 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 894 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 910 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:18)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:29:18) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.738 seconds; current allocated memory: 129.145 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 129.145 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 139.227 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:40: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 144.656 MB.
INFO: [XFORM 203-721] Changing loop 'Loop_calculateLayer3_loop_proc' (calculateLayer3.cpp:21) to a process function for dataflow in function 'calculateLayer3'.
INFO: [XFORM 203-712] Applying dataflow to function 'calculateLayer3' (calculateLayer3.cpp:5:1), detected/extracted 1 process function(s): 
	 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:40:85) to (calculateLayer3.cpp:24:13) in function 'Loop_calculateLayer3_loop_proc'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.601 seconds; current allocated memory: 175.473 MB.
INFO: [HLS 200-2060] Failed to convert nested loops 'col_loop'(calculateLayer3.cpp:24:13) and 'kernelRow_Loop'(calculateLayer3.cpp:27:20) in function 'Loop_calculateLayer3_loop_proc' into perfectly nested loops.
WARNING: [HLS 200-960] Cannot flatten loop 'col_loop' (calculateLayer3.cpp:24:13) in function 'Loop_calculateLayer3_loop_proc' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:22:12) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.433 seconds; current allocated memory: 208.762 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'kernelRow_Loop'.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 27, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 29, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 30, Depth = 34, loop 'kernelRow_Loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.63 seconds; current allocated memory: 217.211 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.354 seconds; current allocated memory: 218.492 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.587 seconds; current allocated memory: 220.090 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 220.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.242 seconds; current allocated memory: 221.152 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 221.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln40_6) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.37 seconds; current allocated memory: 222.875 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 223.477 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.189 seconds; current allocated memory: 223.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.119 seconds; current allocated memory: 223.750 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop' pipeline 'kernelRow_Loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 30 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_5ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Loop_calculateLayer3_loop_proc_Pipeline_kernelRow_Loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.435 seconds; current allocated memory: 230.492 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.165 seconds; current allocated memory: 239.395 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_4_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_14_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.079 seconds; current allocated memory: 243.715 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Loop_calculateLayer3_loop_proc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_6ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_13_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Loop_calculateLayer3_loop_proc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.733 seconds; current allocated memory: 247.004 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.951 seconds; current allocated memory: 251.250 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.566 seconds; current allocated memory: 253.871 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.998 seconds; current allocated memory: 264.449 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 46.14 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 2 seconds. Elapsed time: 63.869 seconds; current allocated memory: 143.859 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.199 seconds; current allocated memory: 121.496 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 37.08 seconds; current allocated memory: 127.746 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 2,860 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,236 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 1,164 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 890 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 887 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 893 instructions in the design after the 'HW Transforms (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 908 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:18)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:29:18) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.551 seconds; current allocated memory: 129.426 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 129.426 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.171 seconds; current allocated memory: 139.246 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:40: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.175 seconds; current allocated memory: 145.332 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:40:85) to (calculateLayer3.cpp:24:13) in function 'calculateLayer3'... converting 16 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'calculateLayer3' (calculateLayer3.cpp:5:20)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.513 seconds; current allocated memory: 173.875 MB.
INFO: [HLS 200-2060] Failed to convert nested loops 'col_loop'(calculateLayer3.cpp:24:13) and 'kernelRow_Loop'(calculateLayer3.cpp:27:20) in function 'calculateLayer3' into perfectly nested loops.
WARNING: [HLS 200-960] Cannot flatten loop 'col_loop' (calculateLayer3.cpp:24:13) in function 'calculateLayer3' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'row_Loop' (calculateLayer3.cpp:22:12) in function 'calculateLayer3'.
INFO: [XFORM 203-541] Flattening a loop nest 'calculateLayer3_loop' (calculateLayer3.cpp:21:23) in function 'calculateLayer3'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.435 seconds; current allocated memory: 199.719 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_kernelRow_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'kernelRow_Loop'.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 27, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
WARNING: [HLS 200-880] The II Violation in module 'calculateLayer3_Pipeline_kernelRow_Loop' (loop 'kernelRow_Loop'): Unable to enforce a carried dependence constraint (II = 29, distance = 1, offset = 0) between 'store' operation 0 bit ('somme_write_ln18', calculateLayer3.cpp:18) of variable 'somme', calculateLayer3.cpp:37 on local variable 'somme', calculateLayer3.cpp:18 and 'load' operation 16 bit ('somme_load_1', calculateLayer3.cpp:32) on local variable 'somme', calculateLayer3.cpp:18.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 30, Depth = 34, loop 'kernelRow_Loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.502 seconds; current allocated memory: 208.332 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.358 seconds; current allocated memory: 209.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.624 seconds; current allocated memory: 211.406 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 211.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 212.363 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 212.605 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln40_8) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.368 seconds; current allocated memory: 213.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 214.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_kernelRow_Loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_kernelRow_Loop' pipeline 'kernelRow_Loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 30 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_5ns_8_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_kernelRow_Loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.432 seconds; current allocated memory: 220.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.19 seconds; current allocated memory: 229.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'dadddsub_64ns_64ns_64_4_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_14_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.189 seconds; current allocated memory: 233.531 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_1_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_6ns_5ns_3ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_9ns_13_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.82 seconds; current allocated memory: 236.824 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.154 seconds; current allocated memory: 243.391 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.465 seconds; current allocated memory: 253.652 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 46.14 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 2 seconds. Elapsed time: 62.294 seconds; current allocated memory: 132.859 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 30ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 30 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 121.000 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 38.412 seconds; current allocated memory: 127.148 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
WARNING: [HLS 200-1995] There were 194,509 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 57,308 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 51,092 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 44,171 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 41,716 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,340 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,370 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'row_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:23:12)
INFO: [HLS 214-291] Loop 'col_loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:25:13)
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:21)
INFO: [HLS 214-186] Unrolling loop 'row_Loop' (calculateLayer3.cpp:23:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'col_loop' (calculateLayer3.cpp:25:13) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:28:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:29:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 62.528 seconds; current allocated memory: 130.176 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.009 seconds; current allocated memory: 130.176 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.068 seconds; current allocated memory: 200.320 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:40: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.091 seconds; current allocated memory: 205.145 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:22:9) to (calculateLayer3.cpp:21:23) in function 'calculateLayer3'... converting 376 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 26 seconds. CPU system time: 0 seconds. Elapsed time: 31.137 seconds; current allocated memory: 370.660 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 20 seconds. CPU system time: 0 seconds. Elapsed time: 23.215 seconds; current allocated memory: 431.762 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 8, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.217 seconds; current allocated memory: 438.570 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.165 seconds; current allocated memory: 440.004 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 39, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.258 seconds; current allocated memory: 440.688 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.142 seconds; current allocated memory: 440.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_calculateLayer3_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_1', calculateLayer3.cpp:33) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('somme') on array 'Layer2_Weights_CPU' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_2', calculateLayer3.cpp:34) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_128', calculateLayer3.cpp:34) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARN==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
Tool Version Limit: 2023.10
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 20ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z010i-clg225-1L'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7z010i-clg225-1L 
INFO: [HLS 200-1510] Running: create_clock -period 20 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./CNN_lenet5/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name calculateLayer3 calculateLayer3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.535 seconds; current allocated memory: 120.918 MB.
INFO: [HLS 200-10] Analyzing design file 'calculateLayer3.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 122.851 seconds; current allocated memory: 126.887 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 17,286 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
WARNING: [HLS 200-1995] There were 194,509 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 57,308 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 51,092 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 44,171 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 41,716 instructions in the design after the 'Array/Struct (step 1)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,333 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,340 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 39,370 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: C:/Users/TRETEC/OneDrive/Documents/Master2/HLS-FPGA/cnn_hls/CNN_lenet5/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'row_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:23:12)
INFO: [HLS 214-291] Loop 'col_loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:25:13)
INFO: [HLS 214-291] Loop 'kernelRow_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:28:20)
INFO: [HLS 214-291] Loop 'kernelCol_Loop' is marked as complete unroll implied by the pipeline pragma (calculateLayer3.cpp:29:21)
INFO: [HLS 214-186] Unrolling loop 'row_Loop' (calculateLayer3.cpp:23:12) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'col_loop' (calculateLayer3.cpp:25:13) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelRow_Loop' (calculateLayer3.cpp:28:20) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'kernelCol_Loop' (calculateLayer3.cpp:29:21) in function 'calculateLayer3' completely with a factor of 5 (calculateLayer3.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::data() const (.39.49.58.69)' into 'fp_struct<double>::to_double() const (.36.46.55.66)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_double() const (.36.46.55.66)' into 'fp_struct<double>::to_ieee() const' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0)
INFO: [HLS 214-178] Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_nan<double>(char const*)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_nan.h:10:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isnan<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'int generic_isinf<double>(double)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::to_ieee() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::expv() const' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::exp_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double exp_reduce_::exp_generic<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:157:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'exp_reduce_::expm1(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\common\hls_exp_double.cpp:7:0)
INFO: [HLS 214-178] Inlining function 'fp_struct<double>::fp_struct(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_fabs<double>(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'double generic_nan<double>(char const*)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'exp_reduce_::expm1(double)' into 'double explog_based::generic_tanh<double>(double)' (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_tanh.h:28:0)
INFO: [HLS 214-178] Inlining function 'hls::tanh(double)' into 'calculateLayer3(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (calculateLayer3.cpp:10:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 73.732 seconds; current allocated memory: 130.000 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.009 seconds; current allocated memory: 130.000 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.018 seconds; current allocated memory: 200.219 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-23] calculateLayer3.cpp:40: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.666 seconds; current allocated memory: 204.879 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:158:9) to (C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_exp_.h:339:3) in function 'exp_reduce_::exp_generic<double>'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (calculateLayer3.cpp:22:9) to (calculateLayer3.cpp:21:23) in function 'calculateLayer3'... converting 376 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 26 seconds. CPU system time: 0 seconds. Elapsed time: 32.787 seconds; current allocated memory: 370.332 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 21 seconds. CPU system time: 1 seconds. Elapsed time: 26.011 seconds; current allocated memory: 431.461 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'calculateLayer3' ...
WARNING: [SYN 201-103] Legalizing function name 'exp_generic<double>' to 'exp_generic_double_s'.
WARNING: [SYN 201-103] Legalizing function name 'generic_tanh<double>' to 'generic_tanh_double_s'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln243) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'exp_generic<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 0, Final II = 1, Depth = 12, function 'exp_generic<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.817 seconds; current allocated memory: 439.125 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 440.629 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'generic_tanh<double>'.
INFO: [HLS 200-1470] Pipelining result : Target II = 0, Final II = 1, Depth = 55, function 'generic_tanh<double>'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.297 seconds; current allocated memory: 441.293 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.171 seconds; current allocated memory: 441.688 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3_Pipeline_calculateLayer3_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln37_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln36_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln35_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln32) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'calculateLayer3_loop'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_3', calculateLayer3.cpp:35) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 5). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_4', calculateLayer3.cpp:36) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 6). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_5', calculateLayer3.cpp:37) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_6', calculateLayer3.cpp:32) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 8). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_130', calculateLayer3.cpp:36) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 132). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_145', calculateLayer3.cpp:33) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 147). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_147', calculateLayer3.cpp:35) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 149). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
WARNING: [HLS 200-885] The II Violation in module 'calculateLayer3_Pipeline_calculateLayer3_loop' (loop 'calculateLayer3_loop'): Unable to schedule 'load' operation 16 bit ('Layer2_Weights_CPU_load_148', calculateLayer3.cpp:36) on array 'Layer2_Weights_CPU' due to limited memory ports (II = 150). Please consider using a memory core with more ports or partitioning the array 'Layer2_Weights_CPU'.
INFO: [HLS 200-1470] Pipelining result : Target II = 5, Final II = 151, Depth = 298, loop 'calculateLayer3_loop'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 250 seconds. CPU system time: 4 seconds. Elapsed time: 467.635 seconds; current allocated memory: 614.293 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 108 seconds. CPU system time: 0 seconds. Elapsed time: 130.371 seconds; current allocated memory: 639.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 8 seconds. CPU system time: 1 seconds. Elapsed time: 16.232 seconds; current allocated memory: 661.930 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.508 seconds; current allocated memory: 671.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'exp_generic_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' due to the length limit 80
INFO: [SYN 201-210] Renamed object name 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_ROM_AUTO_1R' to 'exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' due to the length limit 80
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'exp_generic_double_s' pipeline 'exp_generic<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_15ns_19s_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_13s_71s_71_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_43ns_36ns_79_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_49ns_44ns_93_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_50ns_50ns_100_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'exp_generic_double_s'.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_arbkb' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arracud' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'calculateLayer3_exp_generic_double_s_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_arradEe' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.323 seconds; current allocated memory: 676.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'generic_tanh_double_s' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'generic_tanh_double_s' pipeline 'generic_tanh<double>' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_full_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ddiv_64ns_64ns_64_22_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dsub_64ns_64ns_64_5_full_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'generic_tanh_double_s'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.386 seconds; current allocated memory: 682.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3_Pipeline_calculateLayer3_loop' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'calculateLayer3_Pipeline_calculateLayer3_loop' pipeline 'calculateLayer3_loop' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'calculateLayer3_Pipeline_calculateLayer3_loop' is 27411 from HDL expression: ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fptrunc_64ns_32_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 3750 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3_Pipeline_calculateLayer3_loop'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 28 seconds. CPU system time: 0 seconds. Elapsed time: 34.271 seconds; current allocated memory: 908.738 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'calculateLayer3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer2_Weights_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'calculateLayer3/Layer3_Neurons_CPU' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'calculateLayer3' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'Layer2_Neurons_CPU', 'Layer3_Neurons_CPU' and 'Layer2_Weights_CPU' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'calculateLayer3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 50 seconds. CPU system time: 36 seconds. Elapsed time: 130.44 seconds; current allocated memory: 1.199 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 6.574 seconds; current allocated memory: 1.246 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 7.646 seconds; current allocated memory: 1.348 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for calculateLayer3.
INFO: [VLOG 209-307] Generating Verilog RTL for calculateLayer3.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 61.89 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 513 seconds. CPU system time: 44 seconds. Elapsed time: 1069.96 seconds; current allocated memory: 1.234 GB.
