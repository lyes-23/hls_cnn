// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module calculateLayer3_generic_tanh_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] t_in;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
reg   [63:0] expx_reg_60;
reg   [63:0] expx_reg_60_pp0_iter15_reg;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] expx_reg_60_pp0_iter16_reg;
wire   [63:0] grp_fu_129_p2;
reg   [63:0] reg_139;
reg   [0:0] icmp_ln36_reg_378;
reg   [0:0] icmp_ln36_reg_378_pp0_iter25_reg;
reg   [0:0] icmp_ln45_reg_382;
reg   [0:0] icmp_ln45_reg_382_pp0_iter25_reg;
reg   [0:0] and_ln46_reg_386;
reg   [0:0] and_ln46_reg_386_pp0_iter25_reg;
reg   [0:0] tmp_2_reg_390;
reg   [0:0] tmp_2_reg_390_pp0_iter25_reg;
reg   [0:0] icmp_ln54_reg_394;
reg   [0:0] icmp_ln54_reg_394_pp0_iter25_reg;
reg    ap_predicate_pred166_state28;
reg    ap_predicate_pred174_state28;
reg   [0:0] din_sign_reg_364;
reg   [0:0] din_sign_reg_364_pp0_iter1_reg;
reg   [0:0] din_sign_reg_364_pp0_iter2_reg;
reg   [0:0] din_sign_reg_364_pp0_iter3_reg;
reg   [0:0] din_sign_reg_364_pp0_iter4_reg;
reg   [0:0] din_sign_reg_364_pp0_iter5_reg;
reg   [0:0] din_sign_reg_364_pp0_iter6_reg;
reg   [0:0] din_sign_reg_364_pp0_iter7_reg;
reg   [0:0] din_sign_reg_364_pp0_iter8_reg;
reg   [0:0] din_sign_reg_364_pp0_iter9_reg;
reg   [0:0] din_sign_reg_364_pp0_iter10_reg;
reg   [0:0] din_sign_reg_364_pp0_iter11_reg;
reg   [0:0] din_sign_reg_364_pp0_iter12_reg;
reg   [0:0] din_sign_reg_364_pp0_iter13_reg;
reg   [0:0] din_sign_reg_364_pp0_iter14_reg;
reg   [0:0] din_sign_reg_364_pp0_iter15_reg;
reg   [0:0] din_sign_reg_364_pp0_iter16_reg;
reg   [0:0] din_sign_reg_364_pp0_iter17_reg;
reg   [0:0] din_sign_reg_364_pp0_iter18_reg;
reg   [0:0] din_sign_reg_364_pp0_iter19_reg;
reg   [0:0] din_sign_reg_364_pp0_iter20_reg;
reg   [0:0] din_sign_reg_364_pp0_iter21_reg;
reg   [0:0] din_sign_reg_364_pp0_iter22_reg;
reg   [0:0] din_sign_reg_364_pp0_iter23_reg;
reg   [0:0] din_sign_reg_364_pp0_iter24_reg;
reg   [0:0] din_sign_reg_364_pp0_iter25_reg;
reg   [0:0] din_sign_reg_364_pp0_iter26_reg;
reg   [0:0] din_sign_reg_364_pp0_iter27_reg;
reg   [0:0] din_sign_reg_364_pp0_iter28_reg;
reg   [0:0] din_sign_reg_364_pp0_iter29_reg;
reg   [0:0] din_sign_reg_364_pp0_iter30_reg;
wire   [63:0] abst_in_fu_183_p1;
reg   [63:0] abst_in_reg_369;
reg   [63:0] abst_in_reg_369_pp0_iter1_reg;
reg   [63:0] abst_in_reg_369_pp0_iter2_reg;
wire   [0:0] icmp_ln36_fu_192_p2;
reg   [0:0] icmp_ln36_reg_378_pp0_iter1_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter2_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter3_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter4_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter5_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter6_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter7_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter8_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter9_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter10_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter11_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter12_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter13_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter14_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter15_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter16_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter17_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter18_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter19_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter20_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter21_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter22_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter23_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter24_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter26_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter27_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter28_reg;
reg   [0:0] icmp_ln36_reg_378_pp0_iter29_reg;
wire   [0:0] icmp_ln45_fu_198_p2;
reg   [0:0] icmp_ln45_reg_382_pp0_iter1_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter2_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter3_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter4_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter5_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter6_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter7_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter8_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter9_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter10_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter11_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter12_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter13_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter14_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter15_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter16_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter17_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter18_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter19_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter20_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter21_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter22_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter23_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter24_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter26_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter27_reg;
reg   [0:0] icmp_ln45_reg_382_pp0_iter28_reg;
wire   [0:0] and_ln46_fu_216_p2;
reg   [0:0] and_ln46_reg_386_pp0_iter1_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter2_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter3_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter4_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter5_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter6_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter7_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter8_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter9_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter10_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter11_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter12_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter13_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter14_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter15_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter16_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter17_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter18_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter19_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter20_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter21_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter22_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter23_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter24_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter26_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter27_reg;
reg   [0:0] and_ln46_reg_386_pp0_iter28_reg;
wire   [0:0] tmp_2_fu_134_p2;
reg   [0:0] tmp_2_reg_390_pp0_iter1_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter2_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter3_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter4_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter5_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter6_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter7_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter8_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter9_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter10_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter11_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter12_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter13_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter14_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter15_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter16_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter17_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter18_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter19_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter20_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter21_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter22_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter23_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter24_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter26_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter27_reg;
reg   [0:0] tmp_2_reg_390_pp0_iter28_reg;
wire   [0:0] icmp_ln54_fu_222_p2;
reg   [0:0] icmp_ln54_reg_394_pp0_iter1_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter2_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter3_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter4_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter5_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter6_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter7_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter8_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter9_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter10_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter11_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter12_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter13_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter14_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter15_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter16_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter17_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter18_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter19_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter20_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter21_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter22_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter23_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter24_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter26_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter27_reg;
reg   [0:0] icmp_ln54_reg_394_pp0_iter28_reg;
wire   [63:0] bitcast_ln55_fu_234_p1;
wire   [0:0] icmp_ln38_fu_239_p2;
reg   [0:0] icmp_ln38_reg_404;
reg   [0:0] icmp_ln38_reg_404_pp0_iter1_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter2_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter3_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter4_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter5_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter6_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter7_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter8_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter9_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter10_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter11_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter12_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter13_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter14_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter15_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter16_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter17_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter18_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter19_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter20_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter21_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter22_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter23_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter24_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter25_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter26_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter27_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter28_reg;
reg   [0:0] icmp_ln38_reg_404_pp0_iter29_reg;
wire   [63:0] x_3_fu_245_p3;
reg   [63:0] x_3_reg_409;
reg   [63:0] x_3_reg_409_pp0_iter3_reg;
wire   [63:0] grp_fu_100_p2;
reg   [63:0] add_reg_417;
wire   [0:0] and_ln9_1_fu_291_p2;
reg   [0:0] and_ln9_1_reg_422;
reg   [0:0] and_ln9_1_reg_422_pp0_iter4_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter5_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter6_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter7_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter8_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter9_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter10_reg;
reg   [0:0] and_ln9_1_reg_422_pp0_iter11_reg;
wire   [0:0] and_ln10_1_fu_315_p2;
reg   [0:0] and_ln10_1_reg_426;
reg   [0:0] and_ln10_1_reg_426_pp0_iter4_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter5_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter6_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter7_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter8_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter9_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter10_reg;
reg   [0:0] and_ln10_1_reg_426_pp0_iter11_reg;
wire   [63:0] grp_fu_125_p2;
wire   [63:0] grp_exp_generic_double_s_fu_89_ap_return;
reg   [63:0] tmp_4_reg_435;
wire   [63:0] grp_fu_109_p2;
wire   [63:0] grp_fu_114_p2;
reg   [63:0] add2_reg_445;
wire   [63:0] bitcast_ln66_1_fu_331_p1;
wire   [63:0] grp_fu_120_p2;
wire   [63:0] select_ln38_fu_336_p3;
wire    grp_exp_generic_double_s_fu_89_ap_start;
wire    grp_exp_generic_double_s_fu_89_ap_done;
wire    grp_exp_generic_double_s_fu_89_ap_idle;
wire    grp_exp_generic_double_s_fu_89_ap_ready;
reg    grp_exp_generic_double_s_fu_89_ap_ce;
reg    ap_predicate_op80_call_state5;
wire    ap_block_pp0_stage0_11001_ignoreCallOp80;
wire   [63:0] ap_phi_reg_pp0_iter0_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter1_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter2_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter3_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter4_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter5_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter6_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter7_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter8_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter9_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter10_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter11_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter12_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter13_expx_reg_60;
reg   [63:0] ap_phi_reg_pp0_iter14_expx_reg_60;
reg    ap_predicate_pred657_state14;
wire   [63:0] ap_phi_reg_pp0_iter0_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter1_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter2_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter3_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter4_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter5_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter6_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter7_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter8_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter9_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter10_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter11_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter12_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter13_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter14_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter15_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter16_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter17_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter18_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter19_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter20_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter21_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter22_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter23_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter24_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter25_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter26_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter27_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter28_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter29_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter30_resultf_3_reg_72;
reg   [63:0] ap_phi_reg_pp0_iter31_resultf_3_reg_72;
reg    ap_predicate_pred782_state31;
reg    grp_exp_generic_double_s_fu_89_ap_start_reg;
reg    ap_predicate_op80_call_state5_state4;
wire    ap_block_pp0_stage0;
reg   [63:0] grp_fu_100_p0;
reg   [63:0] grp_fu_100_p1;
reg   [63:0] grp_fu_129_p0;
reg    ap_predicate_pred891_state18;
reg    ap_predicate_pred896_state18;
wire   [63:0] data_fu_145_p1;
wire   [62:0] trunc_ln479_fu_171_p1;
wire   [63:0] t_fu_175_p3;
wire   [10:0] din_exp_fu_157_p4;
wire   [51:0] din_sig_fu_167_p1;
wire   [0:0] icmp_ln46_fu_204_p2;
wire   [0:0] icmp_ln46_1_fu_210_p2;
wire   [63:0] or_ln55_fu_228_p2;
wire   [63:0] grp_fu_104_p2;
wire   [63:0] data_1_fu_252_p1;
wire   [10:0] xs_exp_1_fu_263_p4;
wire   [0:0] icmp_ln9_fu_273_p2;
wire   [0:0] icmp_ln9_1_fu_279_p2;
wire   [0:0] and_ln9_fu_285_p2;
wire   [0:0] xs_sign_fu_255_p3;
wire   [0:0] xor_ln10_fu_297_p2;
wire   [0:0] and_ln10_fu_309_p2;
wire   [0:0] icmp_ln10_fu_303_p2;
wire   [63:0] bitcast_ln66_fu_321_p1;
wire   [63:0] xor_ln66_fu_325_p2;
wire   [63:0] bitcast_ln83_fu_343_p1;
wire   [63:0] xor_ln83_fu_347_p2;
wire   [63:0] bitcast_ln83_1_fu_353_p1;
reg   [1:0] grp_fu_100_opcode;
wire    ap_block_pp0_stage0_00001;
reg    grp_fu_100_ce;
reg    grp_fu_104_ce;
reg    grp_fu_109_ce;
reg    grp_fu_114_ce;
reg    grp_fu_120_ce;
reg    grp_fu_125_ce;
reg    grp_fu_129_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to30;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_646;
reg    ap_condition_795;
reg    ap_condition_596;
reg    ap_condition_145;
reg    ap_condition_764;
reg    ap_condition_769;
reg    ap_condition_614;
reg    ap_condition_862;
reg    ap_condition_856;
reg    ap_condition_1016;
reg    ap_condition_854;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 grp_exp_generic_double_s_fu_89_ap_start_reg = 1'b0;
end

calculateLayer3_exp_generic_double_s grp_exp_generic_double_s_fu_89(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_exp_generic_double_s_fu_89_ap_start),
    .ap_done(grp_exp_generic_double_s_fu_89_ap_done),
    .ap_idle(grp_exp_generic_double_s_fu_89_ap_idle),
    .ap_ready(grp_exp_generic_double_s_fu_89_ap_ready),
    .ap_ce(grp_exp_generic_double_s_fu_89_ap_ce),
    .x(x_3_reg_409_pp0_iter3_reg),
    .ap_return(grp_exp_generic_double_s_fu_89_ap_return)
);

calculateLayer3_dadddsub_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_3_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_100_p0),
    .din1(grp_fu_100_p1),
    .opcode(grp_fu_100_opcode),
    .ce(grp_fu_100_ce),
    .dout(grp_fu_100_p2)
);

calculateLayer3_dadd_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_3_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(abst_in_fu_183_p1),
    .din1(abst_in_fu_183_p1),
    .ce(grp_fu_104_ce),
    .dout(grp_fu_104_p2)
);

calculateLayer3_dadd_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_3_full_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_435),
    .din1(64'd13830554455654793216),
    .ce(grp_fu_109_ce),
    .dout(grp_fu_109_p2)
);

calculateLayer3_dadd_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_3_full_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter14_expx_reg_60),
    .din1(64'd4611686018427387904),
    .ce(grp_fu_114_ce),
    .dout(grp_fu_114_p2)
);

calculateLayer3_dsub_64ns_64ns_64_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_3_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(reg_139),
    .ce(grp_fu_120_ce),
    .dout(grp_fu_120_p2)
);

calculateLayer3_dmul_64ns_64ns_64_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_3_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(abst_in_reg_369_pp0_iter2_reg),
    .din1(add_reg_417),
    .ce(grp_fu_125_ce),
    .dout(grp_fu_125_p2)
);

calculateLayer3_ddiv_64ns_64ns_64_11_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_11_no_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_129_p0),
    .din1(add2_reg_445),
    .ce(grp_fu_129_ce),
    .dout(grp_fu_129_p2)
);

calculateLayer3_dcmp_64ns_64ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_1_no_dsp_1_U22(
    .din0(abst_in_fu_183_p1),
    .din1(64'd4626885667169763328),
    .opcode(5'd4),
    .dout(tmp_2_fu_134_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_predicate_op80_call_state5_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b1;
        end else if ((grp_exp_generic_double_s_fu_89_ap_ready == 1'b1)) begin
            grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_646)) begin
        if ((ap_predicate_pred657_state14 == 1'b1)) begin
            ap_phi_reg_pp0_iter14_expx_reg_60 <= grp_fu_109_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter14_expx_reg_60 <= ap_phi_reg_pp0_iter13_expx_reg_60;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_596)) begin
        if ((1'b1 == ap_condition_795)) begin
            ap_phi_reg_pp0_iter1_resultf_3_reg_72 <= 64'd4607182418800017408;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_resultf_3_reg_72 <= ap_phi_reg_pp0_iter0_resultf_3_reg_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_145)) begin
        if ((ap_predicate_pred174_state28 == 1'b1)) begin
            ap_phi_reg_pp0_iter28_resultf_3_reg_72 <= grp_fu_129_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter28_resultf_3_reg_72 <= ap_phi_reg_pp0_iter27_resultf_3_reg_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_764)) begin
        if ((icmp_ln36_reg_378_pp0_iter29_reg == 1'd1)) begin
            ap_phi_reg_pp0_iter31_resultf_3_reg_72 <= select_ln38_fu_336_p3;
        end else if ((ap_predicate_pred782_state31 == 1'b1)) begin
            ap_phi_reg_pp0_iter31_resultf_3_reg_72 <= grp_fu_120_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter31_resultf_3_reg_72 <= ap_phi_reg_pp0_iter30_resultf_3_reg_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_2_reg_390_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln45_reg_382_pp0_iter2_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter2_reg == 1'd0) & (1'b1 == ap_ce) & (1'd1 == and_ln10_1_fu_315_p2) & (1'd0 == and_ln9_1_fu_291_p2) & (1'd0 == and_ln46_reg_386_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_390_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln45_reg_382_pp0_iter2_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter2_reg == 1'd0) & (1'b1 == ap_ce) & (1'd1 == and_ln9_1_fu_291_p2) & (1'd0 == and_ln46_reg_386_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter4_expx_reg_60 <= x_3_reg_409;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_expx_reg_60 <= ap_phi_reg_pp0_iter3_expx_reg_60;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_614)) begin
        if ((1'b1 == ap_condition_769)) begin
            ap_phi_reg_pp0_iter6_resultf_3_reg_72 <= grp_fu_125_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_resultf_3_reg_72 <= ap_phi_reg_pp0_iter5_resultf_3_reg_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        abst_in_reg_369[62 : 0] <= abst_in_fu_183_p1[62 : 0];
        abst_in_reg_369_pp0_iter1_reg[62 : 0] <= abst_in_reg_369[62 : 0];
        and_ln46_reg_386 <= and_ln46_fu_216_p2;
        and_ln46_reg_386_pp0_iter1_reg <= and_ln46_reg_386;
        din_sign_reg_364 <= data_fu_145_p1[32'd63];
        din_sign_reg_364_pp0_iter1_reg <= din_sign_reg_364;
        icmp_ln36_reg_378 <= icmp_ln36_fu_192_p2;
        icmp_ln36_reg_378_pp0_iter1_reg <= icmp_ln36_reg_378;
        icmp_ln38_reg_404 <= icmp_ln38_fu_239_p2;
        icmp_ln38_reg_404_pp0_iter1_reg <= icmp_ln38_reg_404;
        icmp_ln45_reg_382 <= icmp_ln45_fu_198_p2;
        icmp_ln45_reg_382_pp0_iter1_reg <= icmp_ln45_reg_382;
        icmp_ln54_reg_394 <= icmp_ln54_fu_222_p2;
        icmp_ln54_reg_394_pp0_iter1_reg <= icmp_ln54_reg_394;
        tmp_2_reg_390 <= tmp_2_fu_134_p2;
        tmp_2_reg_390_pp0_iter1_reg <= tmp_2_reg_390;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        abst_in_reg_369_pp0_iter2_reg[62 : 0] <= abst_in_reg_369_pp0_iter1_reg[62 : 0];
        add2_reg_445 <= grp_fu_114_p2;
        and_ln10_1_reg_426 <= and_ln10_1_fu_315_p2;
        and_ln10_1_reg_426_pp0_iter10_reg <= and_ln10_1_reg_426_pp0_iter9_reg;
        and_ln10_1_reg_426_pp0_iter11_reg <= and_ln10_1_reg_426_pp0_iter10_reg;
        and_ln10_1_reg_426_pp0_iter4_reg <= and_ln10_1_reg_426;
        and_ln10_1_reg_426_pp0_iter5_reg <= and_ln10_1_reg_426_pp0_iter4_reg;
        and_ln10_1_reg_426_pp0_iter6_reg <= and_ln10_1_reg_426_pp0_iter5_reg;
        and_ln10_1_reg_426_pp0_iter7_reg <= and_ln10_1_reg_426_pp0_iter6_reg;
        and_ln10_1_reg_426_pp0_iter8_reg <= and_ln10_1_reg_426_pp0_iter7_reg;
        and_ln10_1_reg_426_pp0_iter9_reg <= and_ln10_1_reg_426_pp0_iter8_reg;
        and_ln46_reg_386_pp0_iter10_reg <= and_ln46_reg_386_pp0_iter9_reg;
        and_ln46_reg_386_pp0_iter11_reg <= and_ln46_reg_386_pp0_iter10_reg;
        and_ln46_reg_386_pp0_iter12_reg <= and_ln46_reg_386_pp0_iter11_reg;
        and_ln46_reg_386_pp0_iter13_reg <= and_ln46_reg_386_pp0_iter12_reg;
        and_ln46_reg_386_pp0_iter14_reg <= and_ln46_reg_386_pp0_iter13_reg;
        and_ln46_reg_386_pp0_iter15_reg <= and_ln46_reg_386_pp0_iter14_reg;
        and_ln46_reg_386_pp0_iter16_reg <= and_ln46_reg_386_pp0_iter15_reg;
        and_ln46_reg_386_pp0_iter17_reg <= and_ln46_reg_386_pp0_iter16_reg;
        and_ln46_reg_386_pp0_iter18_reg <= and_ln46_reg_386_pp0_iter17_reg;
        and_ln46_reg_386_pp0_iter19_reg <= and_ln46_reg_386_pp0_iter18_reg;
        and_ln46_reg_386_pp0_iter20_reg <= and_ln46_reg_386_pp0_iter19_reg;
        and_ln46_reg_386_pp0_iter21_reg <= and_ln46_reg_386_pp0_iter20_reg;
        and_ln46_reg_386_pp0_iter22_reg <= and_ln46_reg_386_pp0_iter21_reg;
        and_ln46_reg_386_pp0_iter23_reg <= and_ln46_reg_386_pp0_iter22_reg;
        and_ln46_reg_386_pp0_iter24_reg <= and_ln46_reg_386_pp0_iter23_reg;
        and_ln46_reg_386_pp0_iter25_reg <= and_ln46_reg_386_pp0_iter24_reg;
        and_ln46_reg_386_pp0_iter26_reg <= and_ln46_reg_386_pp0_iter25_reg;
        and_ln46_reg_386_pp0_iter27_reg <= and_ln46_reg_386_pp0_iter26_reg;
        and_ln46_reg_386_pp0_iter28_reg <= and_ln46_reg_386_pp0_iter27_reg;
        and_ln46_reg_386_pp0_iter2_reg <= and_ln46_reg_386_pp0_iter1_reg;
        and_ln46_reg_386_pp0_iter3_reg <= and_ln46_reg_386_pp0_iter2_reg;
        and_ln46_reg_386_pp0_iter4_reg <= and_ln46_reg_386_pp0_iter3_reg;
        and_ln46_reg_386_pp0_iter5_reg <= and_ln46_reg_386_pp0_iter4_reg;
        and_ln46_reg_386_pp0_iter6_reg <= and_ln46_reg_386_pp0_iter5_reg;
        and_ln46_reg_386_pp0_iter7_reg <= and_ln46_reg_386_pp0_iter6_reg;
        and_ln46_reg_386_pp0_iter8_reg <= and_ln46_reg_386_pp0_iter7_reg;
        and_ln46_reg_386_pp0_iter9_reg <= and_ln46_reg_386_pp0_iter8_reg;
        and_ln9_1_reg_422 <= and_ln9_1_fu_291_p2;
        and_ln9_1_reg_422_pp0_iter10_reg <= and_ln9_1_reg_422_pp0_iter9_reg;
        and_ln9_1_reg_422_pp0_iter11_reg <= and_ln9_1_reg_422_pp0_iter10_reg;
        and_ln9_1_reg_422_pp0_iter4_reg <= and_ln9_1_reg_422;
        and_ln9_1_reg_422_pp0_iter5_reg <= and_ln9_1_reg_422_pp0_iter4_reg;
        and_ln9_1_reg_422_pp0_iter6_reg <= and_ln9_1_reg_422_pp0_iter5_reg;
        and_ln9_1_reg_422_pp0_iter7_reg <= and_ln9_1_reg_422_pp0_iter6_reg;
        and_ln9_1_reg_422_pp0_iter8_reg <= and_ln9_1_reg_422_pp0_iter7_reg;
        and_ln9_1_reg_422_pp0_iter9_reg <= and_ln9_1_reg_422_pp0_iter8_reg;
        ap_predicate_pred166_state28 <= ((icmp_ln54_reg_394_pp0_iter25_reg == 1'd0) & (tmp_2_reg_390_pp0_iter25_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter25_reg == 1'd0) & (1'd0 == and_ln46_reg_386_pp0_iter25_reg) & (icmp_ln36_reg_378_pp0_iter25_reg == 1'd0));
        ap_predicate_pred174_state28 <= ((icmp_ln54_reg_394_pp0_iter25_reg == 1'd1) & (tmp_2_reg_390_pp0_iter25_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter25_reg == 1'd0) & (1'd0 == and_ln46_reg_386_pp0_iter25_reg) & (icmp_ln36_reg_378_pp0_iter25_reg == 1'd0));
        ap_predicate_pred657_state14 <= ((tmp_2_reg_390_pp0_iter11_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter11_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter11_reg == 1'd0) & (1'd0 == and_ln10_1_reg_426_pp0_iter11_reg) & (1'd0 == and_ln9_1_reg_422_pp0_iter11_reg) & (1'd0 == and_ln46_reg_386_pp0_iter11_reg));
        ap_predicate_pred782_state31 <= ((icmp_ln54_reg_394_pp0_iter28_reg == 1'd0) & (tmp_2_reg_390_pp0_iter28_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter28_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter28_reg == 1'd0) & (1'd0 == and_ln46_reg_386_pp0_iter28_reg));
        ap_predicate_pred891_state18 <= ((icmp_ln54_reg_394_pp0_iter15_reg == 1'd0) & (tmp_2_reg_390_pp0_iter15_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter15_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter15_reg == 1'd0) & (1'd0 == and_ln46_reg_386_pp0_iter15_reg));
        ap_predicate_pred896_state18 <= ((icmp_ln54_reg_394_pp0_iter15_reg == 1'd1) & (tmp_2_reg_390_pp0_iter15_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter15_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter15_reg == 1'd0) & (1'd0 == and_ln46_reg_386_pp0_iter15_reg));
        din_sign_reg_364_pp0_iter10_reg <= din_sign_reg_364_pp0_iter9_reg;
        din_sign_reg_364_pp0_iter11_reg <= din_sign_reg_364_pp0_iter10_reg;
        din_sign_reg_364_pp0_iter12_reg <= din_sign_reg_364_pp0_iter11_reg;
        din_sign_reg_364_pp0_iter13_reg <= din_sign_reg_364_pp0_iter12_reg;
        din_sign_reg_364_pp0_iter14_reg <= din_sign_reg_364_pp0_iter13_reg;
        din_sign_reg_364_pp0_iter15_reg <= din_sign_reg_364_pp0_iter14_reg;
        din_sign_reg_364_pp0_iter16_reg <= din_sign_reg_364_pp0_iter15_reg;
        din_sign_reg_364_pp0_iter17_reg <= din_sign_reg_364_pp0_iter16_reg;
        din_sign_reg_364_pp0_iter18_reg <= din_sign_reg_364_pp0_iter17_reg;
        din_sign_reg_364_pp0_iter19_reg <= din_sign_reg_364_pp0_iter18_reg;
        din_sign_reg_364_pp0_iter20_reg <= din_sign_reg_364_pp0_iter19_reg;
        din_sign_reg_364_pp0_iter21_reg <= din_sign_reg_364_pp0_iter20_reg;
        din_sign_reg_364_pp0_iter22_reg <= din_sign_reg_364_pp0_iter21_reg;
        din_sign_reg_364_pp0_iter23_reg <= din_sign_reg_364_pp0_iter22_reg;
        din_sign_reg_364_pp0_iter24_reg <= din_sign_reg_364_pp0_iter23_reg;
        din_sign_reg_364_pp0_iter25_reg <= din_sign_reg_364_pp0_iter24_reg;
        din_sign_reg_364_pp0_iter26_reg <= din_sign_reg_364_pp0_iter25_reg;
        din_sign_reg_364_pp0_iter27_reg <= din_sign_reg_364_pp0_iter26_reg;
        din_sign_reg_364_pp0_iter28_reg <= din_sign_reg_364_pp0_iter27_reg;
        din_sign_reg_364_pp0_iter29_reg <= din_sign_reg_364_pp0_iter28_reg;
        din_sign_reg_364_pp0_iter2_reg <= din_sign_reg_364_pp0_iter1_reg;
        din_sign_reg_364_pp0_iter30_reg <= din_sign_reg_364_pp0_iter29_reg;
        din_sign_reg_364_pp0_iter3_reg <= din_sign_reg_364_pp0_iter2_reg;
        din_sign_reg_364_pp0_iter4_reg <= din_sign_reg_364_pp0_iter3_reg;
        din_sign_reg_364_pp0_iter5_reg <= din_sign_reg_364_pp0_iter4_reg;
        din_sign_reg_364_pp0_iter6_reg <= din_sign_reg_364_pp0_iter5_reg;
        din_sign_reg_364_pp0_iter7_reg <= din_sign_reg_364_pp0_iter6_reg;
        din_sign_reg_364_pp0_iter8_reg <= din_sign_reg_364_pp0_iter7_reg;
        din_sign_reg_364_pp0_iter9_reg <= din_sign_reg_364_pp0_iter8_reg;
        expx_reg_60_pp0_iter15_reg <= expx_reg_60;
        expx_reg_60_pp0_iter16_reg <= expx_reg_60_pp0_iter15_reg;
        icmp_ln36_reg_378_pp0_iter10_reg <= icmp_ln36_reg_378_pp0_iter9_reg;
        icmp_ln36_reg_378_pp0_iter11_reg <= icmp_ln36_reg_378_pp0_iter10_reg;
        icmp_ln36_reg_378_pp0_iter12_reg <= icmp_ln36_reg_378_pp0_iter11_reg;
        icmp_ln36_reg_378_pp0_iter13_reg <= icmp_ln36_reg_378_pp0_iter12_reg;
        icmp_ln36_reg_378_pp0_iter14_reg <= icmp_ln36_reg_378_pp0_iter13_reg;
        icmp_ln36_reg_378_pp0_iter15_reg <= icmp_ln36_reg_378_pp0_iter14_reg;
        icmp_ln36_reg_378_pp0_iter16_reg <= icmp_ln36_reg_378_pp0_iter15_reg;
        icmp_ln36_reg_378_pp0_iter17_reg <= icmp_ln36_reg_378_pp0_iter16_reg;
        icmp_ln36_reg_378_pp0_iter18_reg <= icmp_ln36_reg_378_pp0_iter17_reg;
        icmp_ln36_reg_378_pp0_iter19_reg <= icmp_ln36_reg_378_pp0_iter18_reg;
        icmp_ln36_reg_378_pp0_iter20_reg <= icmp_ln36_reg_378_pp0_iter19_reg;
        icmp_ln36_reg_378_pp0_iter21_reg <= icmp_ln36_reg_378_pp0_iter20_reg;
        icmp_ln36_reg_378_pp0_iter22_reg <= icmp_ln36_reg_378_pp0_iter21_reg;
        icmp_ln36_reg_378_pp0_iter23_reg <= icmp_ln36_reg_378_pp0_iter22_reg;
        icmp_ln36_reg_378_pp0_iter24_reg <= icmp_ln36_reg_378_pp0_iter23_reg;
        icmp_ln36_reg_378_pp0_iter25_reg <= icmp_ln36_reg_378_pp0_iter24_reg;
        icmp_ln36_reg_378_pp0_iter26_reg <= icmp_ln36_reg_378_pp0_iter25_reg;
        icmp_ln36_reg_378_pp0_iter27_reg <= icmp_ln36_reg_378_pp0_iter26_reg;
        icmp_ln36_reg_378_pp0_iter28_reg <= icmp_ln36_reg_378_pp0_iter27_reg;
        icmp_ln36_reg_378_pp0_iter29_reg <= icmp_ln36_reg_378_pp0_iter28_reg;
        icmp_ln36_reg_378_pp0_iter2_reg <= icmp_ln36_reg_378_pp0_iter1_reg;
        icmp_ln36_reg_378_pp0_iter3_reg <= icmp_ln36_reg_378_pp0_iter2_reg;
        icmp_ln36_reg_378_pp0_iter4_reg <= icmp_ln36_reg_378_pp0_iter3_reg;
        icmp_ln36_reg_378_pp0_iter5_reg <= icmp_ln36_reg_378_pp0_iter4_reg;
        icmp_ln36_reg_378_pp0_iter6_reg <= icmp_ln36_reg_378_pp0_iter5_reg;
        icmp_ln36_reg_378_pp0_iter7_reg <= icmp_ln36_reg_378_pp0_iter6_reg;
        icmp_ln36_reg_378_pp0_iter8_reg <= icmp_ln36_reg_378_pp0_iter7_reg;
        icmp_ln36_reg_378_pp0_iter9_reg <= icmp_ln36_reg_378_pp0_iter8_reg;
        icmp_ln38_reg_404_pp0_iter10_reg <= icmp_ln38_reg_404_pp0_iter9_reg;
        icmp_ln38_reg_404_pp0_iter11_reg <= icmp_ln38_reg_404_pp0_iter10_reg;
        icmp_ln38_reg_404_pp0_iter12_reg <= icmp_ln38_reg_404_pp0_iter11_reg;
        icmp_ln38_reg_404_pp0_iter13_reg <= icmp_ln38_reg_404_pp0_iter12_reg;
        icmp_ln38_reg_404_pp0_iter14_reg <= icmp_ln38_reg_404_pp0_iter13_reg;
        icmp_ln38_reg_404_pp0_iter15_reg <= icmp_ln38_reg_404_pp0_iter14_reg;
        icmp_ln38_reg_404_pp0_iter16_reg <= icmp_ln38_reg_404_pp0_iter15_reg;
        icmp_ln38_reg_404_pp0_iter17_reg <= icmp_ln38_reg_404_pp0_iter16_reg;
        icmp_ln38_reg_404_pp0_iter18_reg <= icmp_ln38_reg_404_pp0_iter17_reg;
        icmp_ln38_reg_404_pp0_iter19_reg <= icmp_ln38_reg_404_pp0_iter18_reg;
        icmp_ln38_reg_404_pp0_iter20_reg <= icmp_ln38_reg_404_pp0_iter19_reg;
        icmp_ln38_reg_404_pp0_iter21_reg <= icmp_ln38_reg_404_pp0_iter20_reg;
        icmp_ln38_reg_404_pp0_iter22_reg <= icmp_ln38_reg_404_pp0_iter21_reg;
        icmp_ln38_reg_404_pp0_iter23_reg <= icmp_ln38_reg_404_pp0_iter22_reg;
        icmp_ln38_reg_404_pp0_iter24_reg <= icmp_ln38_reg_404_pp0_iter23_reg;
        icmp_ln38_reg_404_pp0_iter25_reg <= icmp_ln38_reg_404_pp0_iter24_reg;
        icmp_ln38_reg_404_pp0_iter26_reg <= icmp_ln38_reg_404_pp0_iter25_reg;
        icmp_ln38_reg_404_pp0_iter27_reg <= icmp_ln38_reg_404_pp0_iter26_reg;
        icmp_ln38_reg_404_pp0_iter28_reg <= icmp_ln38_reg_404_pp0_iter27_reg;
        icmp_ln38_reg_404_pp0_iter29_reg <= icmp_ln38_reg_404_pp0_iter28_reg;
        icmp_ln38_reg_404_pp0_iter2_reg <= icmp_ln38_reg_404_pp0_iter1_reg;
        icmp_ln38_reg_404_pp0_iter3_reg <= icmp_ln38_reg_404_pp0_iter2_reg;
        icmp_ln38_reg_404_pp0_iter4_reg <= icmp_ln38_reg_404_pp0_iter3_reg;
        icmp_ln38_reg_404_pp0_iter5_reg <= icmp_ln38_reg_404_pp0_iter4_reg;
        icmp_ln38_reg_404_pp0_iter6_reg <= icmp_ln38_reg_404_pp0_iter5_reg;
        icmp_ln38_reg_404_pp0_iter7_reg <= icmp_ln38_reg_404_pp0_iter6_reg;
        icmp_ln38_reg_404_pp0_iter8_reg <= icmp_ln38_reg_404_pp0_iter7_reg;
        icmp_ln38_reg_404_pp0_iter9_reg <= icmp_ln38_reg_404_pp0_iter8_reg;
        icmp_ln45_reg_382_pp0_iter10_reg <= icmp_ln45_reg_382_pp0_iter9_reg;
        icmp_ln45_reg_382_pp0_iter11_reg <= icmp_ln45_reg_382_pp0_iter10_reg;
        icmp_ln45_reg_382_pp0_iter12_reg <= icmp_ln45_reg_382_pp0_iter11_reg;
        icmp_ln45_reg_382_pp0_iter13_reg <= icmp_ln45_reg_382_pp0_iter12_reg;
        icmp_ln45_reg_382_pp0_iter14_reg <= icmp_ln45_reg_382_pp0_iter13_reg;
        icmp_ln45_reg_382_pp0_iter15_reg <= icmp_ln45_reg_382_pp0_iter14_reg;
        icmp_ln45_reg_382_pp0_iter16_reg <= icmp_ln45_reg_382_pp0_iter15_reg;
        icmp_ln45_reg_382_pp0_iter17_reg <= icmp_ln45_reg_382_pp0_iter16_reg;
        icmp_ln45_reg_382_pp0_iter18_reg <= icmp_ln45_reg_382_pp0_iter17_reg;
        icmp_ln45_reg_382_pp0_iter19_reg <= icmp_ln45_reg_382_pp0_iter18_reg;
        icmp_ln45_reg_382_pp0_iter20_reg <= icmp_ln45_reg_382_pp0_iter19_reg;
        icmp_ln45_reg_382_pp0_iter21_reg <= icmp_ln45_reg_382_pp0_iter20_reg;
        icmp_ln45_reg_382_pp0_iter22_reg <= icmp_ln45_reg_382_pp0_iter21_reg;
        icmp_ln45_reg_382_pp0_iter23_reg <= icmp_ln45_reg_382_pp0_iter22_reg;
        icmp_ln45_reg_382_pp0_iter24_reg <= icmp_ln45_reg_382_pp0_iter23_reg;
        icmp_ln45_reg_382_pp0_iter25_reg <= icmp_ln45_reg_382_pp0_iter24_reg;
        icmp_ln45_reg_382_pp0_iter26_reg <= icmp_ln45_reg_382_pp0_iter25_reg;
        icmp_ln45_reg_382_pp0_iter27_reg <= icmp_ln45_reg_382_pp0_iter26_reg;
        icmp_ln45_reg_382_pp0_iter28_reg <= icmp_ln45_reg_382_pp0_iter27_reg;
        icmp_ln45_reg_382_pp0_iter2_reg <= icmp_ln45_reg_382_pp0_iter1_reg;
        icmp_ln45_reg_382_pp0_iter3_reg <= icmp_ln45_reg_382_pp0_iter2_reg;
        icmp_ln45_reg_382_pp0_iter4_reg <= icmp_ln45_reg_382_pp0_iter3_reg;
        icmp_ln45_reg_382_pp0_iter5_reg <= icmp_ln45_reg_382_pp0_iter4_reg;
        icmp_ln45_reg_382_pp0_iter6_reg <= icmp_ln45_reg_382_pp0_iter5_reg;
        icmp_ln45_reg_382_pp0_iter7_reg <= icmp_ln45_reg_382_pp0_iter6_reg;
        icmp_ln45_reg_382_pp0_iter8_reg <= icmp_ln45_reg_382_pp0_iter7_reg;
        icmp_ln45_reg_382_pp0_iter9_reg <= icmp_ln45_reg_382_pp0_iter8_reg;
        icmp_ln54_reg_394_pp0_iter10_reg <= icmp_ln54_reg_394_pp0_iter9_reg;
        icmp_ln54_reg_394_pp0_iter11_reg <= icmp_ln54_reg_394_pp0_iter10_reg;
        icmp_ln54_reg_394_pp0_iter12_reg <= icmp_ln54_reg_394_pp0_iter11_reg;
        icmp_ln54_reg_394_pp0_iter13_reg <= icmp_ln54_reg_394_pp0_iter12_reg;
        icmp_ln54_reg_394_pp0_iter14_reg <= icmp_ln54_reg_394_pp0_iter13_reg;
        icmp_ln54_reg_394_pp0_iter15_reg <= icmp_ln54_reg_394_pp0_iter14_reg;
        icmp_ln54_reg_394_pp0_iter16_reg <= icmp_ln54_reg_394_pp0_iter15_reg;
        icmp_ln54_reg_394_pp0_iter17_reg <= icmp_ln54_reg_394_pp0_iter16_reg;
        icmp_ln54_reg_394_pp0_iter18_reg <= icmp_ln54_reg_394_pp0_iter17_reg;
        icmp_ln54_reg_394_pp0_iter19_reg <= icmp_ln54_reg_394_pp0_iter18_reg;
        icmp_ln54_reg_394_pp0_iter20_reg <= icmp_ln54_reg_394_pp0_iter19_reg;
        icmp_ln54_reg_394_pp0_iter21_reg <= icmp_ln54_reg_394_pp0_iter20_reg;
        icmp_ln54_reg_394_pp0_iter22_reg <= icmp_ln54_reg_394_pp0_iter21_reg;
        icmp_ln54_reg_394_pp0_iter23_reg <= icmp_ln54_reg_394_pp0_iter22_reg;
        icmp_ln54_reg_394_pp0_iter24_reg <= icmp_ln54_reg_394_pp0_iter23_reg;
        icmp_ln54_reg_394_pp0_iter25_reg <= icmp_ln54_reg_394_pp0_iter24_reg;
        icmp_ln54_reg_394_pp0_iter26_reg <= icmp_ln54_reg_394_pp0_iter25_reg;
        icmp_ln54_reg_394_pp0_iter27_reg <= icmp_ln54_reg_394_pp0_iter26_reg;
        icmp_ln54_reg_394_pp0_iter28_reg <= icmp_ln54_reg_394_pp0_iter27_reg;
        icmp_ln54_reg_394_pp0_iter2_reg <= icmp_ln54_reg_394_pp0_iter1_reg;
        icmp_ln54_reg_394_pp0_iter3_reg <= icmp_ln54_reg_394_pp0_iter2_reg;
        icmp_ln54_reg_394_pp0_iter4_reg <= icmp_ln54_reg_394_pp0_iter3_reg;
        icmp_ln54_reg_394_pp0_iter5_reg <= icmp_ln54_reg_394_pp0_iter4_reg;
        icmp_ln54_reg_394_pp0_iter6_reg <= icmp_ln54_reg_394_pp0_iter5_reg;
        icmp_ln54_reg_394_pp0_iter7_reg <= icmp_ln54_reg_394_pp0_iter6_reg;
        icmp_ln54_reg_394_pp0_iter8_reg <= icmp_ln54_reg_394_pp0_iter7_reg;
        icmp_ln54_reg_394_pp0_iter9_reg <= icmp_ln54_reg_394_pp0_iter8_reg;
        tmp_2_reg_390_pp0_iter10_reg <= tmp_2_reg_390_pp0_iter9_reg;
        tmp_2_reg_390_pp0_iter11_reg <= tmp_2_reg_390_pp0_iter10_reg;
        tmp_2_reg_390_pp0_iter12_reg <= tmp_2_reg_390_pp0_iter11_reg;
        tmp_2_reg_390_pp0_iter13_reg <= tmp_2_reg_390_pp0_iter12_reg;
        tmp_2_reg_390_pp0_iter14_reg <= tmp_2_reg_390_pp0_iter13_reg;
        tmp_2_reg_390_pp0_iter15_reg <= tmp_2_reg_390_pp0_iter14_reg;
        tmp_2_reg_390_pp0_iter16_reg <= tmp_2_reg_390_pp0_iter15_reg;
        tmp_2_reg_390_pp0_iter17_reg <= tmp_2_reg_390_pp0_iter16_reg;
        tmp_2_reg_390_pp0_iter18_reg <= tmp_2_reg_390_pp0_iter17_reg;
        tmp_2_reg_390_pp0_iter19_reg <= tmp_2_reg_390_pp0_iter18_reg;
        tmp_2_reg_390_pp0_iter20_reg <= tmp_2_reg_390_pp0_iter19_reg;
        tmp_2_reg_390_pp0_iter21_reg <= tmp_2_reg_390_pp0_iter20_reg;
        tmp_2_reg_390_pp0_iter22_reg <= tmp_2_reg_390_pp0_iter21_reg;
        tmp_2_reg_390_pp0_iter23_reg <= tmp_2_reg_390_pp0_iter22_reg;
        tmp_2_reg_390_pp0_iter24_reg <= tmp_2_reg_390_pp0_iter23_reg;
        tmp_2_reg_390_pp0_iter25_reg <= tmp_2_reg_390_pp0_iter24_reg;
        tmp_2_reg_390_pp0_iter26_reg <= tmp_2_reg_390_pp0_iter25_reg;
        tmp_2_reg_390_pp0_iter27_reg <= tmp_2_reg_390_pp0_iter26_reg;
        tmp_2_reg_390_pp0_iter28_reg <= tmp_2_reg_390_pp0_iter27_reg;
        tmp_2_reg_390_pp0_iter2_reg <= tmp_2_reg_390_pp0_iter1_reg;
        tmp_2_reg_390_pp0_iter3_reg <= tmp_2_reg_390_pp0_iter2_reg;
        tmp_2_reg_390_pp0_iter4_reg <= tmp_2_reg_390_pp0_iter3_reg;
        tmp_2_reg_390_pp0_iter5_reg <= tmp_2_reg_390_pp0_iter4_reg;
        tmp_2_reg_390_pp0_iter6_reg <= tmp_2_reg_390_pp0_iter5_reg;
        tmp_2_reg_390_pp0_iter7_reg <= tmp_2_reg_390_pp0_iter6_reg;
        tmp_2_reg_390_pp0_iter8_reg <= tmp_2_reg_390_pp0_iter7_reg;
        tmp_2_reg_390_pp0_iter9_reg <= tmp_2_reg_390_pp0_iter8_reg;
        tmp_4_reg_435 <= grp_exp_generic_double_s_fu_89_ap_return;
        x_3_reg_409 <= x_3_fu_245_p3;
        x_3_reg_409_pp0_iter3_reg <= x_3_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_reg_417 <= grp_fu_100_p2;
        ap_phi_reg_pp0_iter3_expx_reg_60 <= ap_phi_reg_pp0_iter2_expx_reg_60;
        ap_phi_reg_pp0_iter3_resultf_3_reg_72 <= ap_phi_reg_pp0_iter2_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_expx_reg_60 <= ap_phi_reg_pp0_iter9_expx_reg_60;
        ap_phi_reg_pp0_iter10_resultf_3_reg_72 <= ap_phi_reg_pp0_iter9_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_expx_reg_60 <= ap_phi_reg_pp0_iter10_expx_reg_60;
        ap_phi_reg_pp0_iter11_resultf_3_reg_72 <= ap_phi_reg_pp0_iter10_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_expx_reg_60 <= ap_phi_reg_pp0_iter11_expx_reg_60;
        ap_phi_reg_pp0_iter12_resultf_3_reg_72 <= ap_phi_reg_pp0_iter11_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_expx_reg_60 <= ap_phi_reg_pp0_iter12_expx_reg_60;
        ap_phi_reg_pp0_iter13_resultf_3_reg_72 <= ap_phi_reg_pp0_iter12_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_resultf_3_reg_72 <= ap_phi_reg_pp0_iter13_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_resultf_3_reg_72 <= ap_phi_reg_pp0_iter14_resultf_3_reg_72;
        expx_reg_60 <= ap_phi_reg_pp0_iter14_expx_reg_60;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_resultf_3_reg_72 <= ap_phi_reg_pp0_iter15_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_resultf_3_reg_72 <= ap_phi_reg_pp0_iter16_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_resultf_3_reg_72 <= ap_phi_reg_pp0_iter17_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_resultf_3_reg_72 <= ap_phi_reg_pp0_iter18_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_expx_reg_60 <= ap_phi_reg_pp0_iter0_expx_reg_60;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_resultf_3_reg_72 <= ap_phi_reg_pp0_iter19_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_resultf_3_reg_72 <= ap_phi_reg_pp0_iter20_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_resultf_3_reg_72 <= ap_phi_reg_pp0_iter21_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_resultf_3_reg_72 <= ap_phi_reg_pp0_iter22_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_resultf_3_reg_72 <= ap_phi_reg_pp0_iter23_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_resultf_3_reg_72 <= ap_phi_reg_pp0_iter24_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_resultf_3_reg_72 <= ap_phi_reg_pp0_iter25_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter27_resultf_3_reg_72 <= ap_phi_reg_pp0_iter26_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_resultf_3_reg_72 <= ap_phi_reg_pp0_iter28_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_expx_reg_60 <= ap_phi_reg_pp0_iter1_expx_reg_60;
        ap_phi_reg_pp0_iter2_resultf_3_reg_72 <= ap_phi_reg_pp0_iter1_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_resultf_3_reg_72 <= ap_phi_reg_pp0_iter29_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_resultf_3_reg_72 <= ap_phi_reg_pp0_iter3_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_expx_reg_60 <= ap_phi_reg_pp0_iter4_expx_reg_60;
        ap_phi_reg_pp0_iter5_resultf_3_reg_72 <= ap_phi_reg_pp0_iter4_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_expx_reg_60 <= ap_phi_reg_pp0_iter5_expx_reg_60;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_expx_reg_60 <= ap_phi_reg_pp0_iter6_expx_reg_60;
        ap_phi_reg_pp0_iter7_resultf_3_reg_72 <= ap_phi_reg_pp0_iter6_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_expx_reg_60 <= ap_phi_reg_pp0_iter7_expx_reg_60;
        ap_phi_reg_pp0_iter8_resultf_3_reg_72 <= ap_phi_reg_pp0_iter7_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_expx_reg_60 <= ap_phi_reg_pp0_iter8_expx_reg_60;
        ap_phi_reg_pp0_iter9_resultf_3_reg_72 <= ap_phi_reg_pp0_iter8_resultf_3_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (ap_predicate_pred174_state28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((1'b1 == ap_ce) & (ap_predicate_pred166_state28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)))) begin
        reg_139 <= grp_fu_129_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) 
    & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) 
    & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to30 = 1'b1;
    end else begin
        ap_idle_pp0_0to30 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to30 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp80))) begin
        grp_exp_generic_double_s_fu_89_ap_ce = 1'b1;
    end else begin
        grp_exp_generic_double_s_fu_89_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_100_ce = 1'b1;
    end else begin
        grp_fu_100_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1016)) begin
        if ((1'b1 == ap_condition_856)) begin
            grp_fu_100_opcode = 2'd1;
        end else if ((1'b1 == ap_condition_862)) begin
            grp_fu_100_opcode = 2'd0;
        end else begin
            grp_fu_100_opcode = 'bx;
        end
    end else begin
        grp_fu_100_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_854)) begin
        if ((1'b1 == ap_condition_862)) begin
            grp_fu_100_p0 = abst_in_fu_183_p1;
        end else if ((1'b1 == ap_condition_856)) begin
            grp_fu_100_p0 = bitcast_ln55_fu_234_p1;
        end else begin
            grp_fu_100_p0 = 'bx;
        end
    end else begin
        grp_fu_100_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_854)) begin
        if ((1'b1 == ap_condition_862)) begin
            grp_fu_100_p1 = 64'd4607182418800017408;
        end else if ((1'b1 == ap_condition_856)) begin
            grp_fu_100_p1 = abst_in_fu_183_p1;
        end else begin
            grp_fu_100_p1 = 'bx;
        end
    end else begin
        grp_fu_100_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_104_ce = 1'b1;
    end else begin
        grp_fu_104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_109_ce = 1'b1;
    end else begin
        grp_fu_109_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_114_ce = 1'b1;
    end else begin
        grp_fu_114_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_120_ce = 1'b1;
    end else begin
        grp_fu_120_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_125_ce = 1'b1;
    end else begin
        grp_fu_125_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_129_ce = 1'b1;
    end else begin
        grp_fu_129_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_predicate_pred896_state18 == 1'b1)) begin
            grp_fu_129_p0 = bitcast_ln66_1_fu_331_p1;
        end else if ((ap_predicate_pred891_state18 == 1'b1)) begin
            grp_fu_129_p0 = 64'd4611686018427387904;
        end else begin
            grp_fu_129_p0 = 'bx;
        end
    end else begin
        grp_fu_129_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abst_in_fu_183_p1 = t_fu_175_p3;

assign and_ln10_1_fu_315_p2 = (icmp_ln10_fu_303_p2 & and_ln10_fu_309_p2);

assign and_ln10_fu_309_p2 = (xor_ln10_fu_297_p2 & icmp_ln9_1_fu_279_p2);

assign and_ln46_fu_216_p2 = (icmp_ln46_fu_204_p2 & icmp_ln46_1_fu_210_p2);

assign and_ln9_1_fu_291_p2 = (xs_sign_fu_255_p3 & and_ln9_fu_285_p2);

assign and_ln9_fu_285_p2 = (icmp_ln9_fu_273_p2 & icmp_ln9_1_fu_279_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp80 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_condition_1016 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001));
end

always @ (*) begin
    ap_condition_145 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1));
end

always @ (*) begin
    ap_condition_596 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_614 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_646 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_764 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1));
end

always @ (*) begin
    ap_condition_769 = (((icmp_ln45_reg_382_pp0_iter4_reg == 1'd1) & (icmp_ln36_reg_378_pp0_iter4_reg == 1'd0)) | ((icmp_ln36_reg_378_pp0_iter4_reg == 1'd0) & (1'd1 == and_ln46_reg_386_pp0_iter4_reg)));
end

always @ (*) begin
    ap_condition_795 = ((tmp_2_fu_134_p2 == 1'd0) & (icmp_ln45_fu_198_p2 == 1'd0) & (icmp_ln36_fu_192_p2 == 1'd0) & (1'd0 == and_ln46_fu_216_p2));
end

always @ (*) begin
    ap_condition_854 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_856 = ((tmp_2_fu_134_p2 == 1'd1) & (icmp_ln45_fu_198_p2 == 1'd0) & (icmp_ln36_fu_192_p2 == 1'd0) & (1'd0 == and_ln46_fu_216_p2));
end

always @ (*) begin
    ap_condition_862 = (((icmp_ln45_fu_198_p2 == 1'd1) & (icmp_ln36_fu_192_p2 == 1'd0)) | ((icmp_ln36_fu_192_p2 == 1'd0) & (1'd1 == and_ln46_fu_216_p2)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_expx_reg_60 = 'bx;

assign ap_phi_reg_pp0_iter0_resultf_3_reg_72 = 'bx;

always @ (*) begin
    ap_predicate_op80_call_state5 = ((tmp_2_reg_390_pp0_iter3_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter3_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln10_1_reg_426) & (1'd0 == and_ln9_1_reg_422) & (1'd0 == and_ln46_reg_386_pp0_iter3_reg));
end

always @ (*) begin
    ap_predicate_op80_call_state5_state4 = ((tmp_2_reg_390_pp0_iter2_reg == 1'd1) & (icmp_ln45_reg_382_pp0_iter2_reg == 1'd0) & (icmp_ln36_reg_378_pp0_iter2_reg == 1'd0) & (1'd0 == and_ln10_1_fu_315_p2) & (1'd0 == and_ln9_1_fu_291_p2) & (1'd0 == and_ln46_reg_386_pp0_iter2_reg));
end

assign ap_return = ((din_sign_reg_364_pp0_iter30_reg[0:0] == 1'b1) ? bitcast_ln83_1_fu_353_p1 : ap_phi_reg_pp0_iter31_resultf_3_reg_72);

assign bitcast_ln55_fu_234_p1 = or_ln55_fu_228_p2;

assign bitcast_ln66_1_fu_331_p1 = xor_ln66_fu_325_p2;

assign bitcast_ln66_fu_321_p1 = expx_reg_60_pp0_iter16_reg;

assign bitcast_ln83_1_fu_353_p1 = xor_ln83_fu_347_p2;

assign bitcast_ln83_fu_343_p1 = ap_phi_reg_pp0_iter31_resultf_3_reg_72;

assign data_1_fu_252_p1 = x_3_reg_409;

assign data_fu_145_p1 = t_in;

assign din_exp_fu_157_p4 = {{data_fu_145_p1[62:52]}};

assign din_sig_fu_167_p1 = data_fu_145_p1[51:0];

assign grp_exp_generic_double_s_fu_89_ap_start = grp_exp_generic_double_s_fu_89_ap_start_reg;

assign icmp_ln10_fu_303_p2 = ((xs_exp_1_fu_263_p4 < 11'd997) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_192_p2 = ((din_exp_fu_157_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_239_p2 = ((din_sig_fu_167_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_198_p2 = ((din_exp_fu_157_p4 < 11'd968) ? 1'b1 : 1'b0);

assign icmp_ln46_1_fu_210_p2 = ((din_sig_fu_167_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_204_p2 = ((din_exp_fu_157_p4 == 11'd968) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_222_p2 = ((din_exp_fu_157_p4 < 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_279_p2 = ((xs_exp_1_fu_263_p4 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_273_p2 = ((xs_exp_1_fu_263_p4 < 11'd996) ? 1'b1 : 1'b0);

assign or_ln55_fu_228_p2 = (t_fu_175_p3 | 64'd9223372036854775808);

assign select_ln38_fu_336_p3 = ((icmp_ln38_reg_404_pp0_iter29_reg[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd4607182418800017408);

assign t_fu_175_p3 = {{1'd0}, {trunc_ln479_fu_171_p1}};

assign trunc_ln479_fu_171_p1 = data_fu_145_p1[62:0];

assign x_3_fu_245_p3 = ((icmp_ln54_reg_394_pp0_iter1_reg[0:0] == 1'b1) ? grp_fu_100_p2 : grp_fu_104_p2);

assign xor_ln10_fu_297_p2 = (xs_sign_fu_255_p3 ^ 1'd1);

assign xor_ln66_fu_325_p2 = (bitcast_ln66_fu_321_p1 ^ 64'd9223372036854775808);

assign xor_ln83_fu_347_p2 = (bitcast_ln83_fu_343_p1 ^ 64'd9223372036854775808);

assign xs_exp_1_fu_263_p4 = {{data_1_fu_252_p1[62:52]}};

assign xs_sign_fu_255_p3 = data_1_fu_252_p1[32'd63];

always @ (posedge ap_clk) begin
    abst_in_reg_369[63] <= 1'b0;
    abst_in_reg_369_pp0_iter1_reg[63] <= 1'b0;
    abst_in_reg_369_pp0_iter2_reg[63] <= 1'b0;
end

endmodule //calculateLayer3_generic_tanh_double_s
