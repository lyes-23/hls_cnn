// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_Layer_Weights_AWVALID,
        m_axi_Layer_Weights_AWREADY,
        m_axi_Layer_Weights_AWADDR,
        m_axi_Layer_Weights_AWID,
        m_axi_Layer_Weights_AWLEN,
        m_axi_Layer_Weights_AWSIZE,
        m_axi_Layer_Weights_AWBURST,
        m_axi_Layer_Weights_AWLOCK,
        m_axi_Layer_Weights_AWCACHE,
        m_axi_Layer_Weights_AWPROT,
        m_axi_Layer_Weights_AWQOS,
        m_axi_Layer_Weights_AWREGION,
        m_axi_Layer_Weights_AWUSER,
        m_axi_Layer_Weights_WVALID,
        m_axi_Layer_Weights_WREADY,
        m_axi_Layer_Weights_WDATA,
        m_axi_Layer_Weights_WSTRB,
        m_axi_Layer_Weights_WLAST,
        m_axi_Layer_Weights_WID,
        m_axi_Layer_Weights_WUSER,
        m_axi_Layer_Weights_ARVALID,
        m_axi_Layer_Weights_ARREADY,
        m_axi_Layer_Weights_ARADDR,
        m_axi_Layer_Weights_ARID,
        m_axi_Layer_Weights_ARLEN,
        m_axi_Layer_Weights_ARSIZE,
        m_axi_Layer_Weights_ARBURST,
        m_axi_Layer_Weights_ARLOCK,
        m_axi_Layer_Weights_ARCACHE,
        m_axi_Layer_Weights_ARPROT,
        m_axi_Layer_Weights_ARQOS,
        m_axi_Layer_Weights_ARREGION,
        m_axi_Layer_Weights_ARUSER,
        m_axi_Layer_Weights_RVALID,
        m_axi_Layer_Weights_RREADY,
        m_axi_Layer_Weights_RDATA,
        m_axi_Layer_Weights_RLAST,
        m_axi_Layer_Weights_RID,
        m_axi_Layer_Weights_RFIFONUM,
        m_axi_Layer_Weights_RUSER,
        m_axi_Layer_Weights_RRESP,
        m_axi_Layer_Weights_BVALID,
        m_axi_Layer_Weights_BREADY,
        m_axi_Layer_Weights_BRESP,
        m_axi_Layer_Weights_BID,
        m_axi_Layer_Weights_BUSER,
        m_axi_Layer_Neurons_AWVALID,
        m_axi_Layer_Neurons_AWREADY,
        m_axi_Layer_Neurons_AWADDR,
        m_axi_Layer_Neurons_AWID,
        m_axi_Layer_Neurons_AWLEN,
        m_axi_Layer_Neurons_AWSIZE,
        m_axi_Layer_Neurons_AWBURST,
        m_axi_Layer_Neurons_AWLOCK,
        m_axi_Layer_Neurons_AWCACHE,
        m_axi_Layer_Neurons_AWPROT,
        m_axi_Layer_Neurons_AWQOS,
        m_axi_Layer_Neurons_AWREGION,
        m_axi_Layer_Neurons_AWUSER,
        m_axi_Layer_Neurons_WVALID,
        m_axi_Layer_Neurons_WREADY,
        m_axi_Layer_Neurons_WDATA,
        m_axi_Layer_Neurons_WSTRB,
        m_axi_Layer_Neurons_WLAST,
        m_axi_Layer_Neurons_WID,
        m_axi_Layer_Neurons_WUSER,
        m_axi_Layer_Neurons_ARVALID,
        m_axi_Layer_Neurons_ARREADY,
        m_axi_Layer_Neurons_ARADDR,
        m_axi_Layer_Neurons_ARID,
        m_axi_Layer_Neurons_ARLEN,
        m_axi_Layer_Neurons_ARSIZE,
        m_axi_Layer_Neurons_ARBURST,
        m_axi_Layer_Neurons_ARLOCK,
        m_axi_Layer_Neurons_ARCACHE,
        m_axi_Layer_Neurons_ARPROT,
        m_axi_Layer_Neurons_ARQOS,
        m_axi_Layer_Neurons_ARREGION,
        m_axi_Layer_Neurons_ARUSER,
        m_axi_Layer_Neurons_RVALID,
        m_axi_Layer_Neurons_RREADY,
        m_axi_Layer_Neurons_RDATA,
        m_axi_Layer_Neurons_RLAST,
        m_axi_Layer_Neurons_RID,
        m_axi_Layer_Neurons_RFIFONUM,
        m_axi_Layer_Neurons_RUSER,
        m_axi_Layer_Neurons_RRESP,
        m_axi_Layer_Neurons_BVALID,
        m_axi_Layer_Neurons_BREADY,
        m_axi_Layer_Neurons_BRESP,
        m_axi_Layer_Neurons_BID,
        m_axi_Layer_Neurons_BUSER,
        Layer1_Weights_CPU,
        Layer1_Neurons_CPU,
        Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_we0,
        Layer2_Neurons_CPU_d0,
        grp_SIGMOID_fu_244_p_din1,
        grp_SIGMOID_fu_244_p_dout0,
        grp_SIGMOID_fu_244_p_ce,
        grp_SIGMOID_fu_244_p_start,
        grp_SIGMOID_fu_244_p_ready,
        grp_SIGMOID_fu_244_p_done,
        grp_SIGMOID_fu_244_p_idle,
        grp_fu_473_p_din0,
        grp_fu_473_p_din1,
        grp_fu_473_p_opcode,
        grp_fu_473_p_dout0,
        grp_fu_473_p_ce,
        grp_fu_477_p_din0,
        grp_fu_477_p_din1,
        grp_fu_477_p_dout0,
        grp_fu_477_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 26'd1;
parameter    ap_ST_fsm_pp0_stage1 = 26'd2;
parameter    ap_ST_fsm_pp0_stage2 = 26'd4;
parameter    ap_ST_fsm_pp0_stage3 = 26'd8;
parameter    ap_ST_fsm_pp0_stage4 = 26'd16;
parameter    ap_ST_fsm_pp0_stage5 = 26'd32;
parameter    ap_ST_fsm_pp0_stage6 = 26'd64;
parameter    ap_ST_fsm_pp0_stage7 = 26'd128;
parameter    ap_ST_fsm_pp0_stage8 = 26'd256;
parameter    ap_ST_fsm_pp0_stage9 = 26'd512;
parameter    ap_ST_fsm_pp0_stage10 = 26'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 26'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 26'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 26'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 26'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 26'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 26'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 26'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 26'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 26'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 26'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 26'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 26'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 26'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 26'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_Layer_Weights_AWVALID;
input   m_axi_Layer_Weights_AWREADY;
output  [63:0] m_axi_Layer_Weights_AWADDR;
output  [0:0] m_axi_Layer_Weights_AWID;
output  [31:0] m_axi_Layer_Weights_AWLEN;
output  [2:0] m_axi_Layer_Weights_AWSIZE;
output  [1:0] m_axi_Layer_Weights_AWBURST;
output  [1:0] m_axi_Layer_Weights_AWLOCK;
output  [3:0] m_axi_Layer_Weights_AWCACHE;
output  [2:0] m_axi_Layer_Weights_AWPROT;
output  [3:0] m_axi_Layer_Weights_AWQOS;
output  [3:0] m_axi_Layer_Weights_AWREGION;
output  [0:0] m_axi_Layer_Weights_AWUSER;
output   m_axi_Layer_Weights_WVALID;
input   m_axi_Layer_Weights_WREADY;
output  [31:0] m_axi_Layer_Weights_WDATA;
output  [3:0] m_axi_Layer_Weights_WSTRB;
output   m_axi_Layer_Weights_WLAST;
output  [0:0] m_axi_Layer_Weights_WID;
output  [0:0] m_axi_Layer_Weights_WUSER;
output   m_axi_Layer_Weights_ARVALID;
input   m_axi_Layer_Weights_ARREADY;
output  [63:0] m_axi_Layer_Weights_ARADDR;
output  [0:0] m_axi_Layer_Weights_ARID;
output  [31:0] m_axi_Layer_Weights_ARLEN;
output  [2:0] m_axi_Layer_Weights_ARSIZE;
output  [1:0] m_axi_Layer_Weights_ARBURST;
output  [1:0] m_axi_Layer_Weights_ARLOCK;
output  [3:0] m_axi_Layer_Weights_ARCACHE;
output  [2:0] m_axi_Layer_Weights_ARPROT;
output  [3:0] m_axi_Layer_Weights_ARQOS;
output  [3:0] m_axi_Layer_Weights_ARREGION;
output  [0:0] m_axi_Layer_Weights_ARUSER;
input   m_axi_Layer_Weights_RVALID;
output   m_axi_Layer_Weights_RREADY;
input  [31:0] m_axi_Layer_Weights_RDATA;
input   m_axi_Layer_Weights_RLAST;
input  [0:0] m_axi_Layer_Weights_RID;
input  [8:0] m_axi_Layer_Weights_RFIFONUM;
input  [0:0] m_axi_Layer_Weights_RUSER;
input  [1:0] m_axi_Layer_Weights_RRESP;
input   m_axi_Layer_Weights_BVALID;
output   m_axi_Layer_Weights_BREADY;
input  [1:0] m_axi_Layer_Weights_BRESP;
input  [0:0] m_axi_Layer_Weights_BID;
input  [0:0] m_axi_Layer_Weights_BUSER;
output   m_axi_Layer_Neurons_AWVALID;
input   m_axi_Layer_Neurons_AWREADY;
output  [63:0] m_axi_Layer_Neurons_AWADDR;
output  [0:0] m_axi_Layer_Neurons_AWID;
output  [31:0] m_axi_Layer_Neurons_AWLEN;
output  [2:0] m_axi_Layer_Neurons_AWSIZE;
output  [1:0] m_axi_Layer_Neurons_AWBURST;
output  [1:0] m_axi_Layer_Neurons_AWLOCK;
output  [3:0] m_axi_Layer_Neurons_AWCACHE;
output  [2:0] m_axi_Layer_Neurons_AWPROT;
output  [3:0] m_axi_Layer_Neurons_AWQOS;
output  [3:0] m_axi_Layer_Neurons_AWREGION;
output  [0:0] m_axi_Layer_Neurons_AWUSER;
output   m_axi_Layer_Neurons_WVALID;
input   m_axi_Layer_Neurons_WREADY;
output  [31:0] m_axi_Layer_Neurons_WDATA;
output  [3:0] m_axi_Layer_Neurons_WSTRB;
output   m_axi_Layer_Neurons_WLAST;
output  [0:0] m_axi_Layer_Neurons_WID;
output  [0:0] m_axi_Layer_Neurons_WUSER;
output   m_axi_Layer_Neurons_ARVALID;
input   m_axi_Layer_Neurons_ARREADY;
output  [63:0] m_axi_Layer_Neurons_ARADDR;
output  [0:0] m_axi_Layer_Neurons_ARID;
output  [31:0] m_axi_Layer_Neurons_ARLEN;
output  [2:0] m_axi_Layer_Neurons_ARSIZE;
output  [1:0] m_axi_Layer_Neurons_ARBURST;
output  [1:0] m_axi_Layer_Neurons_ARLOCK;
output  [3:0] m_axi_Layer_Neurons_ARCACHE;
output  [2:0] m_axi_Layer_Neurons_ARPROT;
output  [3:0] m_axi_Layer_Neurons_ARQOS;
output  [3:0] m_axi_Layer_Neurons_ARREGION;
output  [0:0] m_axi_Layer_Neurons_ARUSER;
input   m_axi_Layer_Neurons_RVALID;
output   m_axi_Layer_Neurons_RREADY;
input  [31:0] m_axi_Layer_Neurons_RDATA;
input   m_axi_Layer_Neurons_RLAST;
input  [0:0] m_axi_Layer_Neurons_RID;
input  [8:0] m_axi_Layer_Neurons_RFIFONUM;
input  [0:0] m_axi_Layer_Neurons_RUSER;
input  [1:0] m_axi_Layer_Neurons_RRESP;
input   m_axi_Layer_Neurons_BVALID;
output   m_axi_Layer_Neurons_BREADY;
input  [1:0] m_axi_Layer_Neurons_BRESP;
input  [0:0] m_axi_Layer_Neurons_BID;
input  [0:0] m_axi_Layer_Neurons_BUSER;
input  [63:0] Layer1_Weights_CPU;
input  [63:0] Layer1_Neurons_CPU;
output  [9:0] Layer2_Neurons_CPU_address0;
output   Layer2_Neurons_CPU_ce0;
output   Layer2_Neurons_CPU_we0;
output  [31:0] Layer2_Neurons_CPU_d0;
output  [31:0] grp_SIGMOID_fu_244_p_din1;
input  [31:0] grp_SIGMOID_fu_244_p_dout0;
output   grp_SIGMOID_fu_244_p_ce;
output   grp_SIGMOID_fu_244_p_start;
input   grp_SIGMOID_fu_244_p_ready;
input   grp_SIGMOID_fu_244_p_done;
input   grp_SIGMOID_fu_244_p_idle;
output  [31:0] grp_fu_473_p_din0;
output  [31:0] grp_fu_473_p_din1;
output  [1:0] grp_fu_473_p_opcode;
input  [31:0] grp_fu_473_p_dout0;
output   grp_fu_473_p_ce;
output  [31:0] grp_fu_477_p_din0;
output  [31:0] grp_fu_477_p_din1;
input  [31:0] grp_fu_477_p_dout0;
output   grp_fu_477_p_ce;

reg ap_idle;
reg m_axi_Layer_Weights_ARVALID;
reg[63:0] m_axi_Layer_Weights_ARADDR;
reg[31:0] m_axi_Layer_Weights_ARLEN;
reg m_axi_Layer_Weights_RREADY;
reg m_axi_Layer_Neurons_ARVALID;
reg[63:0] m_axi_Layer_Neurons_ARADDR;
reg m_axi_Layer_Neurons_RREADY;
reg Layer2_Neurons_CPU_ce0;
reg Layer2_Neurons_CPU_we0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage25;
reg   [0:0] icmp_ln33_reg_1241;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_subdone;
reg    ap_condition_exit_pp0_iter0_stage25;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    Layer_Weights_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    Layer_Weights_blk_n_R;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage25;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln33_reg_1241_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] or_ln30_1_reg_1255;
reg   [0:0] or_ln34_reg_1265;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg    Layer_Neurons_blk_n_AR;
reg    Layer_Neurons_blk_n_R;
reg   [31:0] reg_294;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_state23_io;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_state27_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op191_readreq_state2;
reg    ap_block_state2_io;
reg    ap_block_state28_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state3_io;
reg    ap_block_state29_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state30_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state31_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state32_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state33_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state8_io;
reg    ap_block_state34_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state35_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] reg_298;
reg   [31:0] reg_302;
reg   [31:0] reg_307;
reg   [31:0] reg_311;
reg   [31:0] reg_316;
reg   [31:0] reg_320;
reg   [31:0] reg_324;
reg   [31:0] reg_328;
reg   [31:0] reg_333;
reg   [31:0] reg_338;
reg    ap_predicate_op255_read_state10;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
wire   [0:0] icmp_ln33_fu_375_p2;
reg   [0:0] icmp_ln33_reg_1241_pp0_iter2_reg;
reg   [0:0] icmp_ln33_reg_1241_pp0_iter3_reg;
reg   [0:0] icmp_ln33_reg_1241_pp0_iter4_reg;
wire   [0:0] icmp_ln34_fu_393_p2;
reg   [0:0] icmp_ln34_reg_1245;
wire   [0:0] and_ln30_fu_417_p2;
reg   [0:0] and_ln30_reg_1250;
wire   [0:0] or_ln30_1_fu_437_p2;
wire   [3:0] select_ln30_1_fu_449_p3;
reg   [3:0] select_ln30_1_reg_1259;
wire   [0:0] or_ln34_fu_469_p2;
wire   [9:0] zext_ln33_fu_475_p1;
wire   [9:0] empty_81_fu_479_p2;
reg   [9:0] empty_81_reg_1275;
reg   [63:0] Layer_Weights_addr_reg_1280;
wire   [9:0] empty_63_fu_600_p2;
reg   [9:0] empty_63_reg_1291;
wire   [4:0] tmp_3_fu_606_p3;
reg   [4:0] tmp_3_reg_1299;
reg   [63:0] Layer_Weights_addr_2_reg_1306;
reg   [63:0] Layer_Neurons_addr_reg_1312;
wire   [9:0] grp_fu_1170_p3;
wire   [9:0] grp_fu_1178_p3;
reg   [9:0] add_ln45_reg_1328;
reg   [9:0] add_ln45_reg_1328_pp0_iter1_reg;
reg   [9:0] add_ln45_reg_1328_pp0_iter2_reg;
reg   [9:0] add_ln45_reg_1328_pp0_iter3_reg;
reg   [9:0] add_ln45_reg_1328_pp0_iter4_reg;
reg   [63:0] Layer_Neurons_addr_1_reg_1333;
wire   [9:0] empty_65_fu_764_p2;
reg   [9:0] empty_65_reg_1339;
wire   [9:0] empty_67_fu_779_p2;
reg   [9:0] empty_67_reg_1344;
wire   [31:0] bitcast_ln41_fu_816_p1;
wire   [31:0] bitcast_ln42_fu_821_p1;
reg   [63:0] Layer_Neurons_addr_2_reg_1359;
wire   [31:0] bitcast_ln41_1_fu_846_p1;
wire   [31:0] bitcast_ln42_1_fu_851_p1;
wire   [31:0] somme_1_fu_859_p1;
wire   [31:0] bitcast_ln41_2_fu_864_p1;
wire   [31:0] bitcast_ln42_2_fu_869_p1;
reg   [31:0] mul27_s_reg_1390;
wire   [31:0] bitcast_ln41_3_fu_874_p1;
wire   [31:0] bitcast_ln42_3_fu_879_p1;
reg   [31:0] mul27_5_reg_1405;
wire   [31:0] bitcast_ln41_4_fu_884_p1;
wire   [31:0] bitcast_ln42_4_fu_889_p1;
reg   [31:0] mul27_6_reg_1420;
wire   [31:0] bitcast_ln41_5_fu_910_p1;
wire   [31:0] bitcast_ln42_5_fu_915_p1;
reg   [63:0] Layer_Neurons_addr_3_reg_1435;
wire   [31:0] bitcast_ln41_6_fu_940_p1;
wire   [31:0] bitcast_ln42_6_fu_945_p1;
reg   [31:0] mul27_1_reg_1451;
wire   [31:0] bitcast_ln41_7_fu_950_p1;
wire   [31:0] bitcast_ln42_7_fu_955_p1;
reg   [31:0] mul27_1_1_reg_1466;
wire   [31:0] bitcast_ln41_8_fu_960_p1;
wire   [31:0] bitcast_ln42_8_fu_965_p1;
reg   [31:0] mul27_1_2_reg_1481;
wire   [31:0] bitcast_ln41_9_fu_970_p1;
wire   [31:0] bitcast_ln42_9_fu_975_p1;
reg   [31:0] mul27_1_3_reg_1496;
wire   [31:0] bitcast_ln41_10_fu_996_p1;
reg   [31:0] mul27_1_4_reg_1506;
reg   [31:0] mul27_1_4_reg_1506_pp0_iter1_reg;
wire   [31:0] bitcast_ln42_10_fu_1001_p1;
reg   [63:0] Layer_Neurons_addr_4_reg_1516;
wire   [31:0] bitcast_ln41_11_fu_1026_p1;
wire   [31:0] bitcast_ln42_11_fu_1031_p1;
reg   [31:0] mul27_2_reg_1532;
reg   [31:0] mul27_2_reg_1532_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_12_fu_1036_p1;
wire   [31:0] bitcast_ln42_12_fu_1041_p1;
reg   [31:0] mul27_2_1_reg_1547;
reg   [31:0] mul27_2_1_reg_1547_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_13_fu_1046_p1;
wire   [31:0] bitcast_ln42_13_fu_1051_p1;
reg   [31:0] mul27_2_2_reg_1562;
reg   [31:0] mul27_2_2_reg_1562_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_14_fu_1056_p1;
wire   [31:0] bitcast_ln42_14_fu_1061_p1;
reg   [31:0] mul27_2_3_reg_1577;
reg   [31:0] mul27_2_3_reg_1577_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_15_fu_1066_p1;
reg   [31:0] mul27_2_4_reg_1587;
reg   [31:0] mul27_2_4_reg_1587_pp0_iter2_reg;
wire   [31:0] bitcast_ln42_15_fu_1071_p1;
wire   [31:0] bitcast_ln41_16_fu_1076_p1;
wire   [31:0] bitcast_ln42_16_fu_1081_p1;
reg   [31:0] mul27_3_reg_1607;
reg   [31:0] mul27_3_reg_1607_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_17_fu_1086_p1;
wire   [31:0] bitcast_ln42_17_fu_1091_p1;
reg   [31:0] mul27_3_1_reg_1622;
reg   [31:0] mul27_3_1_reg_1622_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_18_fu_1096_p1;
wire   [31:0] bitcast_ln42_18_fu_1101_p1;
reg   [31:0] mul27_3_2_reg_1637;
reg   [31:0] mul27_3_2_reg_1637_pp0_iter2_reg;
reg   [31:0] mul27_3_2_reg_1637_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_19_fu_1106_p1;
wire   [31:0] bitcast_ln42_19_fu_1111_p1;
reg   [31:0] mul27_3_3_reg_1652;
reg   [31:0] mul27_3_3_reg_1652_pp0_iter2_reg;
reg   [31:0] mul27_3_3_reg_1652_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_20_fu_1116_p1;
reg   [31:0] mul27_3_4_reg_1662;
reg   [31:0] mul27_3_4_reg_1662_pp0_iter2_reg;
reg   [31:0] mul27_3_4_reg_1662_pp0_iter3_reg;
wire   [31:0] bitcast_ln42_20_fu_1121_p1;
wire   [31:0] bitcast_ln41_21_fu_1126_p1;
wire   [31:0] bitcast_ln42_21_fu_1131_p1;
reg   [31:0] mul27_4_reg_1682;
reg   [31:0] mul27_4_reg_1682_pp0_iter2_reg;
reg   [31:0] mul27_4_reg_1682_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_22_fu_1136_p1;
wire   [31:0] bitcast_ln42_22_fu_1141_p1;
reg   [31:0] mul27_4_1_reg_1697;
reg   [31:0] mul27_4_1_reg_1697_pp0_iter2_reg;
reg   [31:0] mul27_4_1_reg_1697_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_23_fu_1146_p1;
wire   [31:0] bitcast_ln42_23_fu_1151_p1;
reg   [31:0] mul27_4_2_reg_1712;
reg   [31:0] mul27_4_2_reg_1712_pp0_iter2_reg;
reg   [31:0] mul27_4_2_reg_1712_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_24_fu_1156_p1;
wire   [31:0] bitcast_ln42_24_fu_1161_p1;
reg   [31:0] mul27_4_3_reg_1727;
reg   [31:0] mul27_4_3_reg_1727_pp0_iter2_reg;
reg   [31:0] mul27_4_3_reg_1727_pp0_iter3_reg;
reg   [31:0] mul27_4_4_reg_1732;
reg   [31:0] mul27_4_4_reg_1732_pp0_iter2_reg;
reg   [31:0] mul27_4_4_reg_1732_pp0_iter3_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage19_subdone;
wire    grp_SIGMOID_fu_278_ap_ready;
reg    grp_SIGMOID_fu_278_ap_ce;
reg    ap_block_state11_pp0_stage10_iter0_ignore_call220;
reg    ap_block_pp0_stage10_11001_ignoreCallOp571;
reg    ap_block_state12_pp0_stage11_iter0_ignore_call220;
reg    ap_block_pp0_stage11_11001_ignoreCallOp572;
reg    ap_block_state13_pp0_stage12_iter0_ignore_call220;
reg    ap_block_pp0_stage12_11001_ignoreCallOp573;
reg    ap_block_state14_pp0_stage13_iter0_ignore_call220;
reg    ap_block_pp0_stage13_11001_ignoreCallOp574;
reg    ap_block_state15_pp0_stage14_iter0_ignore_call220;
reg    ap_block_pp0_stage14_11001_ignoreCallOp575;
reg    ap_block_state16_pp0_stage15_iter0_ignore_call220;
reg    ap_block_pp0_stage15_11001_ignoreCallOp576;
reg    ap_block_state17_pp0_stage16_iter0_ignore_call220;
reg    ap_block_pp0_stage16_11001_ignoreCallOp577;
reg    ap_block_state18_pp0_stage17_iter0_ignore_call220;
reg    ap_block_pp0_stage17_11001_ignoreCallOp578;
reg    ap_block_state19_pp0_stage18_iter0_ignore_call220;
reg    ap_block_pp0_stage18_11001_ignoreCallOp579;
reg    ap_block_state20_pp0_stage19_iter0_ignore_call220;
reg    ap_block_pp0_stage19_11001_ignoreCallOp581;
reg   [0:0] ap_phi_mux_first_iter_1_phi_fu_260_p4;
wire    ap_loop_init;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_first_iter_0_phi_fu_270_p4;
reg    grp_SIGMOID_fu_278_ap_start_reg;
wire   [63:0] zext_ln45_fu_1166_p1;
wire  signed [63:0] p_cast_cast_fu_505_p1;
wire  signed [63:0] sext_ln41_fu_650_p1;
wire  signed [63:0] sext_ln42_fu_670_p1;
wire  signed [63:0] sext_ln42_1_fu_733_p1;
wire  signed [63:0] sext_ln42_2_fu_836_p1;
wire  signed [63:0] sext_ln42_3_fu_930_p1;
wire  signed [63:0] sext_ln42_4_fu_1016_p1;
reg   [3:0] k_fu_124;
wire   [3:0] add_ln35_fu_515_p2;
reg   [3:0] ap_sig_allocacmp_k_load;
reg   [3:0] j_fu_128;
wire   [3:0] select_ln34_fu_571_p3;
reg   [7:0] indvar_flatten_fu_132;
wire   [7:0] select_ln34_1_fu_527_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] i_fu_136;
wire   [2:0] select_ln33_fu_429_p3;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten22_fu_140;
wire   [9:0] add_ln33_fu_381_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten22_load;
reg   [31:0] Layer_Weights_load2_fu_144;
reg   [31:0] grp_fu_286_p0;
reg   [31:0] grp_fu_286_p1;
reg   [31:0] grp_fu_290_p0;
reg   [31:0] grp_fu_290_p1;
wire   [0:0] icmp_ln35_fu_411_p2;
wire   [0:0] xor_ln30_fu_405_p2;
wire   [2:0] add_ln33_1_fu_423_p2;
wire   [0:0] or_ln30_fu_399_p2;
wire   [0:0] or_ln30_2_fu_443_p2;
wire   [0:0] xor_ln34_fu_457_p2;
wire   [0:0] and_ln34_fu_463_p2;
wire   [2:0] empty_81_fu_479_p0;
wire   [7:0] empty_81_fu_479_p1;
wire   [63:0] p_cast50_fu_485_p1;
wire   [63:0] empty_82_fu_489_p2;
wire   [61:0] p_cast_fu_495_p4;
wire   [7:0] add_ln34_1_fu_521_p2;
wire   [3:0] select_ln30_fu_558_p3;
wire   [3:0] add_ln34_fu_565_p2;
wire   [9:0] empty_fu_578_p2;
wire   [63:0] p_cast51_fu_583_p1;
wire   [3:0] empty_63_fu_600_p0;
wire   [6:0] empty_63_fu_600_p1;
wire   [9:0] p_cast27_fu_613_p1;
wire   [9:0] empty_73_fu_617_p2;
wire   [11:0] tmp_8_fu_623_p3;
wire   [63:0] p_cast59_fu_631_p1;
wire   [63:0] empty_62_fu_587_p2;
wire   [61:0] trunc_ln1_fu_640_p4;
wire   [63:0] empty_74_fu_635_p2;
wire   [61:0] trunc_ln2_fu_660_p4;
wire   [5:0] p_cast25_fu_688_p1;
wire   [5:0] tmp4_fu_691_p2;
wire   [9:0] tmp4_cast_fu_697_p1;
wire   [9:0] empty_71_fu_701_p2;
wire   [11:0] tmp_7_fu_706_p3;
wire   [63:0] p_cast58_fu_714_p1;
wire   [63:0] empty_72_fu_718_p2;
wire   [61:0] trunc_ln42_1_fu_723_p4;
wire   [7:0] p_cast20_fu_751_p1;
wire   [7:0] tmp1_fu_754_p2;
wire   [9:0] tmp1_cast_fu_760_p1;
wire   [6:0] p_cast22_fu_748_p1;
wire   [6:0] tmp2_fu_769_p2;
wire   [9:0] tmp2_cast_fu_775_p1;
wire   [6:0] tmp3_fu_784_p2;
wire   [9:0] tmp3_cast_fu_790_p1;
wire   [9:0] empty_69_fu_794_p2;
wire   [11:0] tmp_6_fu_799_p3;
wire   [63:0] p_cast57_fu_807_p1;
wire   [63:0] empty_70_fu_811_p2;
wire   [61:0] trunc_ln42_2_fu_826_p4;
wire   [11:0] tmp_5_fu_894_p3;
wire   [63:0] p_cast56_fu_901_p1;
wire   [63:0] empty_68_fu_905_p2;
wire   [61:0] trunc_ln42_3_fu_920_p4;
wire   [11:0] tmp_4_fu_980_p3;
wire   [63:0] p_cast55_fu_987_p1;
wire   [63:0] empty_66_fu_991_p2;
wire   [61:0] trunc_ln42_4_fu_1006_p4;
wire   [2:0] grp_fu_1170_p0;
wire   [7:0] grp_fu_1170_p1;
wire   [3:0] grp_fu_1170_p2;
wire   [3:0] grp_fu_1178_p0;
wire   [3:0] grp_fu_1178_p1;
reg    grp_fu_286_ce;
reg    grp_fu_290_ce;
reg    grp_fu_1170_ce;
reg    grp_fu_1178_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage19;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [25:0] ap_NS_fsm;
reg    ap_idle_pp0_1to4;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_block_pp0_stage13_00001;
reg    ap_block_pp0_stage17_00001;
reg    ap_block_pp0_stage21_00001;
reg    ap_block_pp0_stage25_00001;
reg    ap_block_pp0_stage3_00001;
reg    ap_block_pp0_stage7_00001;
reg    ap_block_pp0_stage11_00001;
reg    ap_block_pp0_stage15_00001;
reg    ap_block_pp0_stage19_00001;
reg    ap_block_pp0_stage23_00001;
reg    ap_block_pp0_stage1_00001;
reg    ap_block_pp0_stage5_00001;
reg    ap_block_pp0_stage9_00001;
reg    ap_block_pp0_stage14_00001;
reg    ap_block_pp0_stage18_00001;
reg    ap_block_pp0_stage22_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage4_00001;
reg    ap_block_pp0_stage8_00001;
reg    ap_block_pp0_stage12_00001;
reg    ap_block_pp0_stage16_00001;
reg    ap_block_pp0_stage20_00001;
reg    ap_block_pp0_stage24_00001;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage6_00001;
wire   [9:0] empty_63_fu_600_p00;
wire   [9:0] grp_fu_1170_p20;
wire   [7:0] grp_fu_1178_p00;
reg    ap_condition_2342;
reg    ap_condition_2348;
reg    ap_condition_2351;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_SIGMOID_fu_278_ap_start_reg = 1'b0;
#0 k_fu_124 = 4'd0;
#0 j_fu_128 = 4'd0;
#0 indvar_flatten_fu_132 = 8'd0;
#0 i_fu_136 = 3'd0;
#0 indvar_flatten22_fu_140 = 10'd0;
#0 Layer_Weights_load2_fu_144 = 32'd0;
#0 ap_done_reg = 1'b0;
end

cnn_lenet_mul_3ns_8ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_3ns_8ns_10_1_1_U13(
    .din0(empty_81_fu_479_p0),
    .din1(empty_81_fu_479_p1),
    .dout(empty_81_fu_479_p2)
);

cnn_lenet_mul_4ns_7ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_4ns_7ns_10_1_1_U14(
    .din0(empty_63_fu_600_p0),
    .din1(empty_63_fu_600_p1),
    .dout(empty_63_fu_600_p2)
);

cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_8ns_4ns_10_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1170_p0),
    .din1(grp_fu_1170_p1),
    .din2(grp_fu_1170_p2),
    .ce(grp_fu_1170_ce),
    .dout(grp_fu_1170_p3)
);

cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_4ns_4ns_10ns_10_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1178_p0),
    .din1(grp_fu_1178_p1),
    .din2(grp_fu_1170_p3),
    .ce(grp_fu_1178_ce),
    .dout(grp_fu_1178_p3)
);

cnn_lenet_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage25),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage25)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SIGMOID_fu_278_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln33_reg_1241_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
            grp_SIGMOID_fu_278_ap_start_reg <= 1'b1;
        end else if ((grp_SIGMOID_fu_278_ap_ready == 1'b1)) begin
            grp_SIGMOID_fu_278_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage19))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage19))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage19))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln33_fu_375_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_136 <= select_ln33_fu_429_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_136 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln33_fu_375_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten22_fu_140 <= add_ln33_fu_381_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten22_fu_140 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln33_fu_375_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_132 <= select_ln34_1_fu_527_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_132 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        j_fu_128 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_1241 == 1'd0))) begin
        j_fu_128 <= select_ln34_fu_571_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln33_fu_375_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_124 <= add_ln35_fu_515_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_124 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        Layer_Neurons_addr_1_reg_1333 <= sext_ln42_1_fu_733_p1;
        mul27_4_reg_1682_pp0_iter2_reg <= mul27_4_reg_1682;
        mul27_4_reg_1682_pp0_iter3_reg <= mul27_4_reg_1682_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        Layer_Neurons_addr_2_reg_1359 <= sext_ln42_2_fu_836_p1;
        empty_65_reg_1339 <= empty_65_fu_764_p2;
        empty_67_reg_1344 <= empty_67_fu_779_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        Layer_Neurons_addr_3_reg_1435 <= sext_ln42_3_fu_930_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        Layer_Neurons_addr_4_reg_1516 <= sext_ln42_4_fu_1016_p1;
        mul27_1_4_reg_1506_pp0_iter1_reg <= mul27_1_4_reg_1506;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        Layer_Neurons_addr_reg_1312 <= sext_ln42_fu_670_p1;
        Layer_Weights_addr_2_reg_1306 <= sext_ln41_fu_650_p1;
        empty_63_reg_1291 <= empty_63_fu_600_p2;
        mul27_3_reg_1607_pp0_iter2_reg <= mul27_3_reg_1607;
        tmp_3_reg_1299[4 : 1] <= tmp_3_fu_606_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Layer_Weights_addr_reg_1280 <= p_cast_cast_fu_505_p1;
        and_ln30_reg_1250 <= and_ln30_fu_417_p2;
        empty_81_reg_1275 <= empty_81_fu_479_p2;
        icmp_ln33_reg_1241 <= icmp_ln33_fu_375_p2;
        icmp_ln33_reg_1241_pp0_iter1_reg <= icmp_ln33_reg_1241;
        icmp_ln33_reg_1241_pp0_iter2_reg <= icmp_ln33_reg_1241_pp0_iter1_reg;
        icmp_ln33_reg_1241_pp0_iter3_reg <= icmp_ln33_reg_1241_pp0_iter2_reg;
        icmp_ln33_reg_1241_pp0_iter4_reg <= icmp_ln33_reg_1241_pp0_iter3_reg;
        icmp_ln34_reg_1245 <= icmp_ln34_fu_393_p2;
        mul27_2_4_reg_1587_pp0_iter2_reg <= mul27_2_4_reg_1587;
        or_ln30_1_reg_1255 <= or_ln30_1_fu_437_p2;
        select_ln30_1_reg_1259 <= select_ln30_1_fu_449_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln34_reg_1265 == 1'd1) & (or_ln30_1_reg_1255 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln33_reg_1241 == 1'd0))) begin
        Layer_Weights_load2_fu_144 <= m_axi_Layer_Weights_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln45_reg_1328 <= grp_fu_1178_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln45_reg_1328_pp0_iter1_reg <= add_ln45_reg_1328;
        add_ln45_reg_1328_pp0_iter2_reg <= add_ln45_reg_1328_pp0_iter1_reg;
        add_ln45_reg_1328_pp0_iter3_reg <= add_ln45_reg_1328_pp0_iter2_reg;
        add_ln45_reg_1328_pp0_iter4_reg <= add_ln45_reg_1328_pp0_iter3_reg;
        mul27_3_3_reg_1652_pp0_iter2_reg <= mul27_3_3_reg_1652;
        mul27_3_3_reg_1652_pp0_iter3_reg <= mul27_3_3_reg_1652_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        mul27_1_1_reg_1466 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        mul27_1_2_reg_1481 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        mul27_1_3_reg_1496 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        mul27_1_4_reg_1506 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        mul27_1_reg_1451 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        mul27_2_1_reg_1547 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        mul27_2_1_reg_1547_pp0_iter1_reg <= mul27_2_1_reg_1547;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        mul27_2_2_reg_1562 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        mul27_2_2_reg_1562_pp0_iter1_reg <= mul27_2_2_reg_1562;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        mul27_2_3_reg_1577 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        mul27_2_3_reg_1577_pp0_iter1_reg <= mul27_2_3_reg_1577;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul27_2_4_reg_1587 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        mul27_2_reg_1532 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        mul27_2_reg_1532_pp0_iter1_reg <= mul27_2_reg_1532;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul27_3_1_reg_1622 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul27_3_1_reg_1622_pp0_iter2_reg <= mul27_3_1_reg_1622;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul27_3_2_reg_1637 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul27_3_2_reg_1637_pp0_iter2_reg <= mul27_3_2_reg_1637;
        mul27_3_2_reg_1637_pp0_iter3_reg <= mul27_3_2_reg_1637_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul27_3_3_reg_1652 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mul27_3_4_reg_1662 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mul27_3_4_reg_1662_pp0_iter2_reg <= mul27_3_4_reg_1662;
        mul27_3_4_reg_1662_pp0_iter3_reg <= mul27_3_4_reg_1662_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul27_3_reg_1607 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        mul27_4_1_reg_1697 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        mul27_4_1_reg_1697_pp0_iter2_reg <= mul27_4_1_reg_1697;
        mul27_4_1_reg_1697_pp0_iter3_reg <= mul27_4_1_reg_1697_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        mul27_4_2_reg_1712 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        mul27_4_2_reg_1712_pp0_iter2_reg <= mul27_4_2_reg_1712;
        mul27_4_2_reg_1712_pp0_iter3_reg <= mul27_4_2_reg_1712_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        mul27_4_3_reg_1727 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        mul27_4_3_reg_1727_pp0_iter2_reg <= mul27_4_3_reg_1727;
        mul27_4_3_reg_1727_pp0_iter3_reg <= mul27_4_3_reg_1727_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul27_4_4_reg_1732 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul27_4_4_reg_1732_pp0_iter2_reg <= mul27_4_4_reg_1732;
        mul27_4_4_reg_1732_pp0_iter3_reg <= mul27_4_4_reg_1732_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        mul27_4_reg_1682 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        mul27_5_reg_1405 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        mul27_6_reg_1420 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        mul27_s_reg_1390 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln34_reg_1265 <= or_ln34_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) 
    & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        reg_294 <= m_axi_Layer_Weights_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        reg_298 <= m_axi_Layer_Neurons_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)))) begin
        reg_302 <= grp_fu_477_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)))) begin
        reg_307 <= m_axi_Layer_Neurons_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)))) begin
        reg_311 <= grp_fu_473_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)))) begin
        reg_316 <= m_axi_Layer_Neurons_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)))) begin
        reg_320 <= m_axi_Layer_Neurons_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_324 <= m_axi_Layer_Neurons_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)))) begin
        reg_328 <= grp_fu_473_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)))) begin
        reg_333 <= grp_fu_473_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        reg_338 <= grp_fu_473_p_dout0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        Layer2_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_1241_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        Layer2_Neurons_CPU_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        Layer_Neurons_blk_n_AR = m_axi_Layer_Neurons_ARREADY;
    end else begin
        Layer_Neurons_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) 
    | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) 
    & (1'b0 == ap_block_pp0_stage20) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        Layer_Neurons_blk_n_R = m_axi_Layer_Neurons_RVALID;
    end else begin
        Layer_Neurons_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((or_ln34_reg_1265 == 1'd1) & (or_ln30_1_reg_1255 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        Layer_Weights_blk_n_AR = m_axi_Layer_Weights_ARREADY;
    end else begin
        Layer_Weights_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((or_ln34_reg_1265 == 1'd1) & (or_ln30_1_reg_1255 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == 
    ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln33_reg_1241 == 1'd0)) 
    | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & 
    (1'b0 == ap_block_pp0_stage14) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        Layer_Weights_blk_n_R = m_axi_Layer_Weights_RVALID;
    end else begin
        Layer_Weights_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone) & (icmp_ln33_reg_1241 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage25 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage25 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_1241_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
        ap_condition_exit_pp0_iter3_stage19 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_2342)) begin
            ap_phi_mux_first_iter_0_phi_fu_270_p4 = 1'd0;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_first_iter_0_phi_fu_270_p4 = 1'd1;
        end else begin
            ap_phi_mux_first_iter_0_phi_fu_270_p4 = 1'd0;
        end
    end else begin
        ap_phi_mux_first_iter_0_phi_fu_270_p4 = 1'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_2342)) begin
            ap_phi_mux_first_iter_1_phi_fu_260_p4 = or_ln34_reg_1265;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_first_iter_1_phi_fu_260_p4 = 1'd1;
        end else begin
            ap_phi_mux_first_iter_1_phi_fu_260_p4 = or_ln34_reg_1265;
        end
    end else begin
        ap_phi_mux_first_iter_1_phi_fu_260_p4 = or_ln34_reg_1265;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_136;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten22_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten22_load = indvar_flatten22_fu_140;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_132;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_load = 4'd0;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_124;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001_ignoreCallOp581)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001_ignoreCallOp579)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp578)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp577)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp576)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp575)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp574)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp573)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp572)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp571)))) begin
        grp_SIGMOID_fu_278_ap_ce = 1'b1;
    end else begin
        grp_SIGMOID_fu_278_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1170_ce = 1'b1;
    end else begin
        grp_fu_1170_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1178_ce = 1'b1;
    end else begin
        grp_fu_1178_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_286_ce = 1'b1;
    end else begin
        grp_fu_286_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)))) begin
        grp_fu_286_p0 = reg_338;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)))) begin
        grp_fu_286_p0 = reg_333;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)))) begin
        grp_fu_286_p0 = reg_328;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_286_p0 = reg_311;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_286_p0 = somme_1_fu_859_p1;
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_286_p1 = mul27_4_4_reg_1732_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_286_p1 = mul27_4_3_reg_1727_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_286_p1 = mul27_4_2_reg_1712_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_286_p1 = mul27_4_1_reg_1697_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_286_p1 = mul27_4_reg_1682_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_286_p1 = mul27_3_4_reg_1662_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_286_p1 = mul27_3_3_reg_1652_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_286_p1 = mul27_3_2_reg_1637_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_286_p1 = mul27_3_1_reg_1622_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_286_p1 = mul27_3_reg_1607_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_286_p1 = mul27_2_4_reg_1587_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_286_p1 = mul27_2_3_reg_1577_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_286_p1 = mul27_2_2_reg_1562_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_286_p1 = mul27_2_1_reg_1547_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_286_p1 = mul27_2_reg_1532_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_286_p1 = mul27_1_4_reg_1506_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_286_p1 = mul27_1_3_reg_1496;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_286_p1 = mul27_1_2_reg_1481;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_286_p1 = mul27_1_1_reg_1466;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_286_p1 = mul27_1_reg_1451;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
        grp_fu_286_p1 = mul27_6_reg_1420;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_286_p1 = mul27_5_reg_1405;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_286_p1 = mul27_s_reg_1390;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13)))) begin
        grp_fu_286_p1 = reg_302;
    end else begin
        grp_fu_286_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_290_p0 = bitcast_ln41_24_fu_1156_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_290_p0 = bitcast_ln41_23_fu_1146_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_290_p0 = bitcast_ln41_22_fu_1136_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_290_p0 = bitcast_ln41_21_fu_1126_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_290_p0 = bitcast_ln41_20_fu_1116_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_290_p0 = bitcast_ln41_19_fu_1106_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_290_p0 = bitcast_ln41_18_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_290_p0 = bitcast_ln41_17_fu_1086_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_290_p0 = bitcast_ln41_16_fu_1076_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_290_p0 = bitcast_ln41_15_fu_1066_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
        grp_fu_290_p0 = bitcast_ln41_14_fu_1056_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_290_p0 = bitcast_ln41_13_fu_1046_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_290_p0 = bitcast_ln41_12_fu_1036_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_290_p0 = bitcast_ln41_11_fu_1026_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_290_p0 = bitcast_ln41_10_fu_996_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_290_p0 = bitcast_ln41_9_fu_970_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_290_p0 = bitcast_ln41_8_fu_960_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_290_p0 = bitcast_ln41_7_fu_950_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_290_p0 = bitcast_ln41_6_fu_940_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_290_p0 = bitcast_ln41_5_fu_910_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_290_p0 = bitcast_ln41_4_fu_884_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_290_p0 = bitcast_ln41_3_fu_874_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_290_p0 = bitcast_ln41_2_fu_864_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_290_p0 = bitcast_ln41_1_fu_846_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_290_p0 = bitcast_ln41_fu_816_p1;
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_290_p1 = bitcast_ln42_24_fu_1161_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_290_p1 = bitcast_ln42_23_fu_1151_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_290_p1 = bitcast_ln42_22_fu_1141_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_290_p1 = bitcast_ln42_21_fu_1131_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_290_p1 = bitcast_ln42_20_fu_1121_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_290_p1 = bitcast_ln42_19_fu_1111_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_290_p1 = bitcast_ln42_18_fu_1101_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_290_p1 = bitcast_ln42_17_fu_1091_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_290_p1 = bitcast_ln42_16_fu_1081_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_290_p1 = bitcast_ln42_15_fu_1071_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
        grp_fu_290_p1 = bitcast_ln42_14_fu_1061_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_290_p1 = bitcast_ln42_13_fu_1051_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_290_p1 = bitcast_ln42_12_fu_1041_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_290_p1 = bitcast_ln42_11_fu_1031_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_290_p1 = bitcast_ln42_10_fu_1001_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_290_p1 = bitcast_ln42_9_fu_975_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_290_p1 = bitcast_ln42_8_fu_965_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_290_p1 = bitcast_ln42_7_fu_955_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_290_p1 = bitcast_ln42_6_fu_945_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_290_p1 = bitcast_ln42_5_fu_915_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_290_p1 = bitcast_ln42_4_fu_889_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_290_p1 = bitcast_ln42_3_fu_879_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_290_p1 = bitcast_ln42_2_fu_869_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_290_p1 = bitcast_ln42_1_fu_851_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_290_p1 = bitcast_ln42_fu_821_p1;
    end else begin
        grp_fu_290_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln33_reg_1241 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
            m_axi_Layer_Neurons_ARADDR = Layer_Neurons_addr_4_reg_1516;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
            m_axi_Layer_Neurons_ARADDR = Layer_Neurons_addr_3_reg_1435;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
            m_axi_Layer_Neurons_ARADDR = Layer_Neurons_addr_2_reg_1359;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
            m_axi_Layer_Neurons_ARADDR = Layer_Neurons_addr_1_reg_1333;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            m_axi_Layer_Neurons_ARADDR = Layer_Neurons_addr_reg_1312;
        end else begin
            m_axi_Layer_Neurons_ARADDR = 'bx;
        end
    end else begin
        m_axi_Layer_Neurons_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        m_axi_Layer_Neurons_ARVALID = 1'b1;
    end else begin
        m_axi_Layer_Neurons_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) 
    & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln33_reg_1241 
    == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        m_axi_Layer_Neurons_RREADY = 1'b1;
    end else begin
        m_axi_Layer_Neurons_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_2351)) begin
            m_axi_Layer_Weights_ARADDR = Layer_Weights_addr_2_reg_1306;
        end else if ((1'b1 == ap_condition_2348)) begin
            m_axi_Layer_Weights_ARADDR = Layer_Weights_addr_reg_1280;
        end else begin
            m_axi_Layer_Weights_ARADDR = 'bx;
        end
    end else begin
        m_axi_Layer_Weights_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_2351)) begin
            m_axi_Layer_Weights_ARLEN = 32'd25;
        end else if ((1'b1 == ap_condition_2348)) begin
            m_axi_Layer_Weights_ARLEN = 32'd1;
        end else begin
            m_axi_Layer_Weights_ARLEN = 'bx;
        end
    end else begin
        m_axi_Layer_Weights_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op191_readreq_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        m_axi_Layer_Weights_ARVALID = 1'b1;
    end else begin
        m_axi_Layer_Weights_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op255_read_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) 
    & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & 
    (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln33_reg_1241 == 1'd0)) | 
    ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln33_reg_1241 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln33_reg_1241 == 1'd0)))) begin
        m_axi_Layer_Weights_RREADY = 1'b1;
    end else begin
        m_axi_Layer_Weights_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage19))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Layer2_Neurons_CPU_address0 = zext_ln45_fu_1166_p1;

assign Layer2_Neurons_CPU_d0 = grp_SIGMOID_fu_244_p_dout0;

assign add_ln33_1_fu_423_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln33_fu_381_p2 = (ap_sig_allocacmp_indvar_flatten22_load + 10'd1);

assign add_ln34_1_fu_521_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln34_fu_565_p2 = (select_ln30_fu_558_p3 + 4'd1);

assign add_ln35_fu_515_p2 = (select_ln30_1_fu_449_p3 + 4'd1);

assign and_ln30_fu_417_p2 = (xor_ln30_fu_405_p2 & icmp_ln35_fu_411_p2);

assign and_ln34_fu_463_p2 = (xor_ln34_fu_457_p2 & ap_phi_mux_first_iter_1_phi_fu_260_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage10_iter0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_ignoreCallOp571 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage10_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage10_iter0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_ignoreCallOp572 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage12_iter0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage12_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage12_11001_ignoreCallOp573 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage12_iter0_ignore_call220)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage12_iter0)));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage13_iter0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage13_iter0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_ignoreCallOp574 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage13_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage13_iter0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage14_iter0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage14_iter0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001_ignoreCallOp575 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage14_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage14_iter0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_ignoreCallOp576 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage16_iter0));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage16_iter0));
end

always @ (*) begin
    ap_block_pp0_stage16_11001_ignoreCallOp577 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage16_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage16_iter0));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage17_iter0));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | (1'b1 == ap_block_state18_pp0_stage17_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage17_11001_ignoreCallOp578 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | (1'b1 == ap_block_state18_pp0_stage17_iter0_ignore_call220)));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | (1'b1 == ap_block_state18_pp0_stage17_iter0)));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage18_iter0));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage18_iter0));
end

always @ (*) begin
    ap_block_pp0_stage18_11001_ignoreCallOp579 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage18_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage18_iter0));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage19_iter0));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage19_iter0));
end

always @ (*) begin
    ap_block_pp0_stage19_11001_ignoreCallOp581 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage19_iter0_ignore_call220));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage19_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage1_iter1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage1_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage1_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage20_iter0));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage20_iter0));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage20_iter0));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage21_iter0));
end

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage21_iter0));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage21_iter0));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage22_iter0));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | (1'b1 == ap_block_state23_pp0_stage22_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state23_io) | (1'b1 == ap_block_state23_pp0_stage22_iter0)));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage23_iter0));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage23_iter0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage23_iter0));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage24_iter0));
end

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage24_iter0));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage24_iter0));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage25_iter0));
end

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage25_iter0));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage25_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage2_iter1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage2_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage2_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state30_pp0_stage3_iter1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state30_pp0_stage3_iter1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state30_pp0_stage3_iter1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage4_iter1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage4_iter1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state31_pp0_stage4_iter1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage5_iter1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage5_iter1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state32_pp0_stage5_iter1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage6_iter1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage6_iter1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage6_iter1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state34_pp0_stage7_iter1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state34_pp0_stage7_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state34_pp0_stage7_iter1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state35_pp0_stage8_iter1));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state35_pp0_stage8_iter1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state35_pp0_stage8_iter1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage9_iter0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage9_iter0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage9_iter0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((ap_predicate_op255_read_state10 == 1'b1) & (m_axi_Layer_Weights_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_Layer_Neurons_ARREADY == 1'b0) & (icmp_ln33_reg_1241 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state18_io = ((m_axi_Layer_Neurons_ARREADY == 1'b0) & (icmp_ln33_reg_1241 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0_ignore_call220 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state23_io = ((m_axi_Layer_Neurons_ARREADY == 1'b0) & (icmp_ln33_reg_1241 == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter1 = (((m_axi_Layer_Neurons_RVALID == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((icmp_ln33_reg_1241 == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state28_pp0_stage1_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state29_pp0_stage2_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((m_axi_Layer_Weights_ARREADY == 1'b0) & (ap_predicate_op191_readreq_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state30_pp0_stage3_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state31_pp0_stage4_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state32_pp0_stage5_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state33_pp0_stage6_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state34_pp0_stage7_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state35_pp0_stage8_iter1 = (((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Neurons_RVALID == 1'b0)) | ((icmp_ln33_reg_1241_pp0_iter1_reg == 1'd0) & (m_axi_Layer_Weights_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((m_axi_Layer_Weights_ARREADY == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)) | ((m_axi_Layer_Neurons_ARREADY == 1'b0) & (icmp_ln33_reg_1241 == 1'd0)));
end

always @ (*) begin
    ap_block_state8_io = ((m_axi_Layer_Neurons_ARREADY == 1'b0) & (icmp_ln33_reg_1241 == 1'd0));
end

always @ (*) begin
    ap_condition_2342 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln33_reg_1241 == 1'd0));
end

always @ (*) begin
    ap_condition_2348 = ((ap_predicate_op191_readreq_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_2351 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_1241 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage25;

always @ (*) begin
    ap_predicate_op191_readreq_state2 = ((or_ln34_reg_1265 == 1'd1) & (or_ln30_1_reg_1255 == 1'd1) & (icmp_ln33_reg_1241 == 1'd0));
end

always @ (*) begin
    ap_predicate_op255_read_state10 = ((or_ln34_reg_1265 == 1'd1) & (or_ln30_1_reg_1255 == 1'd1) & (icmp_ln33_reg_1241 == 1'd0));
end

assign bitcast_ln41_10_fu_996_p1 = reg_294;

assign bitcast_ln41_11_fu_1026_p1 = reg_294;

assign bitcast_ln41_12_fu_1036_p1 = reg_294;

assign bitcast_ln41_13_fu_1046_p1 = reg_294;

assign bitcast_ln41_14_fu_1056_p1 = reg_294;

assign bitcast_ln41_15_fu_1066_p1 = reg_294;

assign bitcast_ln41_16_fu_1076_p1 = reg_294;

assign bitcast_ln41_17_fu_1086_p1 = reg_294;

assign bitcast_ln41_18_fu_1096_p1 = reg_294;

assign bitcast_ln41_19_fu_1106_p1 = reg_294;

assign bitcast_ln41_1_fu_846_p1 = reg_294;

assign bitcast_ln41_20_fu_1116_p1 = reg_294;

assign bitcast_ln41_21_fu_1126_p1 = reg_294;

assign bitcast_ln41_22_fu_1136_p1 = reg_294;

assign bitcast_ln41_23_fu_1146_p1 = reg_294;

assign bitcast_ln41_24_fu_1156_p1 = reg_294;

assign bitcast_ln41_2_fu_864_p1 = reg_294;

assign bitcast_ln41_3_fu_874_p1 = reg_294;

assign bitcast_ln41_4_fu_884_p1 = reg_294;

assign bitcast_ln41_5_fu_910_p1 = reg_294;

assign bitcast_ln41_6_fu_940_p1 = reg_294;

assign bitcast_ln41_7_fu_950_p1 = reg_294;

assign bitcast_ln41_8_fu_960_p1 = reg_294;

assign bitcast_ln41_9_fu_970_p1 = reg_294;

assign bitcast_ln41_fu_816_p1 = reg_294;

assign bitcast_ln42_10_fu_1001_p1 = reg_316;

assign bitcast_ln42_11_fu_1031_p1 = reg_316;

assign bitcast_ln42_12_fu_1041_p1 = reg_316;

assign bitcast_ln42_13_fu_1051_p1 = reg_316;

assign bitcast_ln42_14_fu_1061_p1 = reg_316;

assign bitcast_ln42_15_fu_1071_p1 = reg_320;

assign bitcast_ln42_16_fu_1081_p1 = reg_320;

assign bitcast_ln42_17_fu_1091_p1 = reg_320;

assign bitcast_ln42_18_fu_1101_p1 = reg_320;

assign bitcast_ln42_19_fu_1111_p1 = reg_320;

assign bitcast_ln42_1_fu_851_p1 = reg_298;

assign bitcast_ln42_20_fu_1121_p1 = reg_324;

assign bitcast_ln42_21_fu_1131_p1 = reg_324;

assign bitcast_ln42_22_fu_1141_p1 = reg_324;

assign bitcast_ln42_23_fu_1151_p1 = reg_324;

assign bitcast_ln42_24_fu_1161_p1 = reg_324;

assign bitcast_ln42_2_fu_869_p1 = reg_298;

assign bitcast_ln42_3_fu_879_p1 = reg_298;

assign bitcast_ln42_4_fu_889_p1 = reg_298;

assign bitcast_ln42_5_fu_915_p1 = reg_307;

assign bitcast_ln42_6_fu_945_p1 = reg_307;

assign bitcast_ln42_7_fu_955_p1 = reg_307;

assign bitcast_ln42_8_fu_965_p1 = reg_307;

assign bitcast_ln42_9_fu_975_p1 = reg_307;

assign bitcast_ln42_fu_821_p1 = reg_298;

assign empty_62_fu_587_p2 = (p_cast51_fu_583_p1 + Layer1_Weights_CPU);

assign empty_63_fu_600_p0 = empty_63_fu_600_p00;

assign empty_63_fu_600_p00 = select_ln34_fu_571_p3;

assign empty_63_fu_600_p1 = 10'd58;

assign empty_65_fu_764_p2 = (tmp1_cast_fu_760_p1 + empty_63_reg_1291);

assign empty_66_fu_991_p2 = (p_cast55_fu_987_p1 + Layer1_Neurons_CPU);

assign empty_67_fu_779_p2 = (tmp2_cast_fu_775_p1 + empty_63_reg_1291);

assign empty_68_fu_905_p2 = (p_cast56_fu_901_p1 + Layer1_Neurons_CPU);

assign empty_69_fu_794_p2 = (tmp3_cast_fu_790_p1 + empty_63_reg_1291);

assign empty_70_fu_811_p2 = (p_cast57_fu_807_p1 + Layer1_Neurons_CPU);

assign empty_71_fu_701_p2 = (tmp4_cast_fu_697_p1 + empty_63_reg_1291);

assign empty_72_fu_718_p2 = (p_cast58_fu_714_p1 + Layer1_Neurons_CPU);

assign empty_73_fu_617_p2 = (p_cast27_fu_613_p1 + empty_63_fu_600_p2);

assign empty_74_fu_635_p2 = (p_cast59_fu_631_p1 + Layer1_Neurons_CPU);

assign empty_81_fu_479_p0 = zext_ln33_fu_475_p1;

assign empty_81_fu_479_p1 = 10'd104;

assign empty_82_fu_489_p2 = (p_cast50_fu_485_p1 + Layer1_Weights_CPU);

assign empty_fu_578_p2 = (empty_81_reg_1275 | 10'd4);

assign grp_SIGMOID_fu_244_p_ce = grp_SIGMOID_fu_278_ap_ce;

assign grp_SIGMOID_fu_244_p_din1 = reg_338;

assign grp_SIGMOID_fu_244_p_start = grp_SIGMOID_fu_278_ap_start_reg;

assign grp_SIGMOID_fu_278_ap_ready = grp_SIGMOID_fu_244_p_ready;

assign grp_fu_1170_p0 = zext_ln33_fu_475_p1;

assign grp_fu_1170_p1 = 10'd169;

assign grp_fu_1170_p2 = grp_fu_1170_p20;

assign grp_fu_1170_p20 = select_ln30_1_reg_1259;

assign grp_fu_1178_p0 = grp_fu_1178_p00;

assign grp_fu_1178_p00 = select_ln34_fu_571_p3;

assign grp_fu_1178_p1 = 8'd13;

assign grp_fu_473_p_ce = grp_fu_286_ce;

assign grp_fu_473_p_din0 = grp_fu_286_p0;

assign grp_fu_473_p_din1 = grp_fu_286_p1;

assign grp_fu_473_p_opcode = 2'd0;

assign grp_fu_477_p_ce = grp_fu_290_ce;

assign grp_fu_477_p_din0 = grp_fu_290_p0;

assign grp_fu_477_p_din1 = grp_fu_290_p1;

assign icmp_ln33_fu_375_p2 = ((ap_sig_allocacmp_indvar_flatten22_load == 10'd1014) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_393_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd169) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_411_p2 = ((ap_sig_allocacmp_k_load == 4'd13) ? 1'b1 : 1'b0);

assign m_axi_Layer_Neurons_ARBURST = 2'd0;

assign m_axi_Layer_Neurons_ARCACHE = 4'd0;

assign m_axi_Layer_Neurons_ARID = 1'd0;

assign m_axi_Layer_Neurons_ARLEN = 32'd5;

assign m_axi_Layer_Neurons_ARLOCK = 2'd0;

assign m_axi_Layer_Neurons_ARPROT = 3'd0;

assign m_axi_Layer_Neurons_ARQOS = 4'd0;

assign m_axi_Layer_Neurons_ARREGION = 4'd0;

assign m_axi_Layer_Neurons_ARSIZE = 3'd0;

assign m_axi_Layer_Neurons_ARUSER = 1'd0;

assign m_axi_Layer_Neurons_AWADDR = 64'd0;

assign m_axi_Layer_Neurons_AWBURST = 2'd0;

assign m_axi_Layer_Neurons_AWCACHE = 4'd0;

assign m_axi_Layer_Neurons_AWID = 1'd0;

assign m_axi_Layer_Neurons_AWLEN = 32'd0;

assign m_axi_Layer_Neurons_AWLOCK = 2'd0;

assign m_axi_Layer_Neurons_AWPROT = 3'd0;

assign m_axi_Layer_Neurons_AWQOS = 4'd0;

assign m_axi_Layer_Neurons_AWREGION = 4'd0;

assign m_axi_Layer_Neurons_AWSIZE = 3'd0;

assign m_axi_Layer_Neurons_AWUSER = 1'd0;

assign m_axi_Layer_Neurons_AWVALID = 1'b0;

assign m_axi_Layer_Neurons_BREADY = 1'b0;

assign m_axi_Layer_Neurons_WDATA = 32'd0;

assign m_axi_Layer_Neurons_WID = 1'd0;

assign m_axi_Layer_Neurons_WLAST = 1'b0;

assign m_axi_Layer_Neurons_WSTRB = 4'd0;

assign m_axi_Layer_Neurons_WUSER = 1'd0;

assign m_axi_Layer_Neurons_WVALID = 1'b0;

assign m_axi_Layer_Weights_ARBURST = 2'd0;

assign m_axi_Layer_Weights_ARCACHE = 4'd0;

assign m_axi_Layer_Weights_ARID = 1'd0;

assign m_axi_Layer_Weights_ARLOCK = 2'd0;

assign m_axi_Layer_Weights_ARPROT = 3'd0;

assign m_axi_Layer_Weights_ARQOS = 4'd0;

assign m_axi_Layer_Weights_ARREGION = 4'd0;

assign m_axi_Layer_Weights_ARSIZE = 3'd0;

assign m_axi_Layer_Weights_ARUSER = 1'd0;

assign m_axi_Layer_Weights_AWADDR = 64'd0;

assign m_axi_Layer_Weights_AWBURST = 2'd0;

assign m_axi_Layer_Weights_AWCACHE = 4'd0;

assign m_axi_Layer_Weights_AWID = 1'd0;

assign m_axi_Layer_Weights_AWLEN = 32'd0;

assign m_axi_Layer_Weights_AWLOCK = 2'd0;

assign m_axi_Layer_Weights_AWPROT = 3'd0;

assign m_axi_Layer_Weights_AWQOS = 4'd0;

assign m_axi_Layer_Weights_AWREGION = 4'd0;

assign m_axi_Layer_Weights_AWSIZE = 3'd0;

assign m_axi_Layer_Weights_AWUSER = 1'd0;

assign m_axi_Layer_Weights_AWVALID = 1'b0;

assign m_axi_Layer_Weights_BREADY = 1'b0;

assign m_axi_Layer_Weights_WDATA = 32'd0;

assign m_axi_Layer_Weights_WID = 1'd0;

assign m_axi_Layer_Weights_WLAST = 1'b0;

assign m_axi_Layer_Weights_WSTRB = 4'd0;

assign m_axi_Layer_Weights_WUSER = 1'd0;

assign m_axi_Layer_Weights_WVALID = 1'b0;

assign or_ln30_1_fu_437_p2 = (or_ln30_fu_399_p2 | and_ln30_fu_417_p2);

assign or_ln30_2_fu_443_p2 = (icmp_ln34_fu_393_p2 | and_ln30_fu_417_p2);

assign or_ln30_fu_399_p2 = (icmp_ln34_fu_393_p2 | ap_phi_mux_first_iter_0_phi_fu_270_p4);

assign or_ln34_fu_469_p2 = (icmp_ln34_fu_393_p2 | and_ln34_fu_463_p2);

assign p_cast20_fu_751_p1 = tmp_3_reg_1299;

assign p_cast22_fu_748_p1 = tmp_3_reg_1299;

assign p_cast25_fu_688_p1 = tmp_3_reg_1299;

assign p_cast27_fu_613_p1 = tmp_3_fu_606_p3;

assign p_cast50_fu_485_p1 = empty_81_fu_479_p2;

assign p_cast51_fu_583_p1 = empty_fu_578_p2;

assign p_cast55_fu_987_p1 = tmp_4_fu_980_p3;

assign p_cast56_fu_901_p1 = tmp_5_fu_894_p3;

assign p_cast57_fu_807_p1 = tmp_6_fu_799_p3;

assign p_cast58_fu_714_p1 = tmp_7_fu_706_p3;

assign p_cast59_fu_631_p1 = tmp_8_fu_623_p3;

assign p_cast_cast_fu_505_p1 = $signed(p_cast_fu_495_p4);

assign p_cast_fu_495_p4 = {{empty_82_fu_489_p2[63:2]}};

assign select_ln30_1_fu_449_p3 = ((or_ln30_2_fu_443_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_k_load);

assign select_ln30_fu_558_p3 = ((icmp_ln34_reg_1245[0:0] == 1'b1) ? 4'd0 : j_fu_128);

assign select_ln33_fu_429_p3 = ((icmp_ln34_fu_393_p2[0:0] == 1'b1) ? add_ln33_1_fu_423_p2 : ap_sig_allocacmp_i_load);

assign select_ln34_1_fu_527_p3 = ((icmp_ln34_fu_393_p2[0:0] == 1'b1) ? 8'd1 : add_ln34_1_fu_521_p2);

assign select_ln34_fu_571_p3 = ((and_ln30_reg_1250[0:0] == 1'b1) ? add_ln34_fu_565_p2 : select_ln30_fu_558_p3);

assign sext_ln41_fu_650_p1 = $signed(trunc_ln1_fu_640_p4);

assign sext_ln42_1_fu_733_p1 = $signed(trunc_ln42_1_fu_723_p4);

assign sext_ln42_2_fu_836_p1 = $signed(trunc_ln42_2_fu_826_p4);

assign sext_ln42_3_fu_930_p1 = $signed(trunc_ln42_3_fu_920_p4);

assign sext_ln42_4_fu_1016_p1 = $signed(trunc_ln42_4_fu_1006_p4);

assign sext_ln42_fu_670_p1 = $signed(trunc_ln2_fu_660_p4);

assign somme_1_fu_859_p1 = Layer_Weights_load2_fu_144;

assign tmp1_cast_fu_760_p1 = tmp1_fu_754_p2;

assign tmp1_fu_754_p2 = (p_cast20_fu_751_p1 + 8'd116);

assign tmp2_cast_fu_775_p1 = tmp2_fu_769_p2;

assign tmp2_fu_769_p2 = ($signed(p_cast22_fu_748_p1) + $signed(7'd87));

assign tmp3_cast_fu_790_p1 = tmp3_fu_784_p2;

assign tmp3_fu_784_p2 = (p_cast22_fu_748_p1 + 7'd58);

assign tmp4_cast_fu_697_p1 = tmp4_fu_691_p2;

assign tmp4_fu_691_p2 = (p_cast25_fu_688_p1 + 6'd29);

assign tmp_3_fu_606_p3 = {{select_ln30_1_reg_1259}, {1'd0}};

assign tmp_4_fu_980_p3 = {{empty_65_reg_1339}, {2'd0}};

assign tmp_5_fu_894_p3 = {{empty_67_reg_1344}, {2'd0}};

assign tmp_6_fu_799_p3 = {{empty_69_fu_794_p2}, {2'd0}};

assign tmp_7_fu_706_p3 = {{empty_71_fu_701_p2}, {2'd0}};

assign tmp_8_fu_623_p3 = {{empty_73_fu_617_p2}, {2'd0}};

assign trunc_ln1_fu_640_p4 = {{empty_62_fu_587_p2[63:2]}};

assign trunc_ln2_fu_660_p4 = {{empty_74_fu_635_p2[63:2]}};

assign trunc_ln42_1_fu_723_p4 = {{empty_72_fu_718_p2[63:2]}};

assign trunc_ln42_2_fu_826_p4 = {{empty_70_fu_811_p2[63:2]}};

assign trunc_ln42_3_fu_920_p4 = {{empty_68_fu_905_p2[63:2]}};

assign trunc_ln42_4_fu_1006_p4 = {{empty_66_fu_991_p2[63:2]}};

assign xor_ln30_fu_405_p2 = (icmp_ln34_fu_393_p2 ^ 1'd1);

assign xor_ln34_fu_457_p2 = (icmp_ln35_fu_411_p2 ^ 1'd1);

assign zext_ln33_fu_475_p1 = select_ln33_fu_429_p3;

assign zext_ln45_fu_1166_p1 = add_ln45_reg_1328_pp0_iter4_reg;

always @ (posedge ap_clk) begin
    tmp_3_reg_1299[0] <= 1'b0;
end

endmodule //cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop
