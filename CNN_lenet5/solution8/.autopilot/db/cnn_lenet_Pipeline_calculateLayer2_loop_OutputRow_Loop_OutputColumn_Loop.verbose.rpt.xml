<profile>

<section name = "Vitis HLS Report for 'cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop'" level="0">
<item name = "Date">Thu Jan 30 18:34:45 2025
</item>
<item name = "Version">2023.2 (Build 4023990 on Oct 11 2023)</item>
<item name = "Project">CNN_lenet5</item>
<item name = "Solution">solution8 (Vivado IP Flow Target)</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg484-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">20.00 ns, 14.600 ns, 5.40 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">26463, 26463, 0.529 ms, 0.529 ms, 26463, 26463, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="grp_SIGMOID_fu_278">SIGMOID, 9, 9, 0.180 us, 0.180 us, 1, 1, yes</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop">26461, 26461, 124, 26, 26, 1014, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, 2, -, -, -</column>
<column name="Expression">-, -, 0, 880, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, 0, 0, 74, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 747, -</column>
<column name="Register">-, -, 2624, 352, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">0, ~0, 2, 3, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="mul_3ns_8ns_10_1_1_U13">mul_3ns_8ns_10_1_1, 0, 0, 0, 41, 0</column>
<column name="mul_4ns_7ns_10_1_1_U14">mul_4ns_7ns_10_1_1, 0, 0, 0, 33, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
<column name="mac_muladd_3ns_8ns_4ns_10_4_1_U15">mac_muladd_3ns_8ns_4ns_10_4_1, i0 * i1 + i2</column>
<column name="mac_muladd_4ns_4ns_10ns_10_4_1_U16">mac_muladd_4ns_4ns_10ns_10_4_1, i0 + i1 * i2</column>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln33_1_fu_423_p2">+, 0, 0, 11, 3, 1</column>
<column name="add_ln33_fu_381_p2">+, 0, 0, 13, 10, 1</column>
<column name="add_ln34_1_fu_521_p2">+, 0, 0, 15, 8, 1</column>
<column name="add_ln34_fu_565_p2">+, 0, 0, 13, 4, 1</column>
<column name="add_ln35_fu_515_p2">+, 0, 0, 13, 4, 1</column>
<column name="empty_62_fu_587_p2">+, 0, 0, 71, 64, 64</column>
<column name="empty_65_fu_764_p2">+, 0, 0, 13, 10, 10</column>
<column name="empty_66_fu_991_p2">+, 0, 0, 71, 64, 64</column>
<column name="empty_67_fu_779_p2">+, 0, 0, 13, 10, 10</column>
<column name="empty_68_fu_905_p2">+, 0, 0, 71, 64, 64</column>
<column name="empty_69_fu_794_p2">+, 0, 0, 13, 10, 10</column>
<column name="empty_70_fu_811_p2">+, 0, 0, 71, 64, 64</column>
<column name="empty_71_fu_701_p2">+, 0, 0, 13, 10, 10</column>
<column name="empty_72_fu_718_p2">+, 0, 0, 71, 64, 64</column>
<column name="empty_73_fu_617_p2">+, 0, 0, 13, 10, 10</column>
<column name="empty_74_fu_635_p2">+, 0, 0, 71, 64, 64</column>
<column name="empty_82_fu_489_p2">+, 0, 0, 71, 64, 64</column>
<column name="tmp1_fu_754_p2">+, 0, 0, 15, 8, 7</column>
<column name="tmp2_fu_769_p2">+, 0, 0, 14, 7, 7</column>
<column name="tmp3_fu_784_p2">+, 0, 0, 14, 7, 6</column>
<column name="tmp4_fu_691_p2">+, 0, 0, 14, 6, 5</column>
<column name="and_ln30_fu_417_p2">and, 0, 0, 2, 1, 1</column>
<column name="and_ln34_fu_463_p2">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage0_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage10_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage10_11001_ignoreCallOp571">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage11_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage11_11001_ignoreCallOp572">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage12_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage12_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage12_11001_ignoreCallOp573">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage13_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage13_11001_ignoreCallOp574">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage14_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage14_11001_ignoreCallOp575">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage15_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage15_11001_ignoreCallOp576">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage16_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage16_11001_ignoreCallOp577">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage17_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage17_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage17_11001_ignoreCallOp578">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage18_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage18_11001_ignoreCallOp579">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage19_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage19_11001_ignoreCallOp581">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage1_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage20_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage21_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage22_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage22_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage23_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage24_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage25_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage2_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage3_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage4_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage5_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage6_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage7_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage8_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage9_00001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state10_pp0_stage9_iter0">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state13_io">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state2_io">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_2342">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_2348">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_2351">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op191_readreq_state2">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln33_fu_375_p2">icmp, 0, 0, 13, 10, 5</column>
<column name="icmp_ln34_fu_393_p2">icmp, 0, 0, 15, 8, 8</column>
<column name="icmp_ln35_fu_411_p2">icmp, 0, 0, 13, 4, 3</column>
<column name="ap_block_pp0_stage1_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage2_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage7_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state11_pp0_stage10_iter0">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state28_pp0_stage1_iter1">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3_io">or, 0, 0, 2, 1, 1</column>
<column name="empty_fu_578_p2">or, 0, 0, 10, 10, 3</column>
<column name="or_ln30_1_fu_437_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln30_2_fu_443_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln30_fu_399_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln34_fu_469_p2">or, 0, 0, 2, 1, 1</column>
<column name="select_ln30_1_fu_449_p3">select, 0, 0, 4, 1, 1</column>
<column name="select_ln30_fu_558_p3">select, 0, 0, 4, 1, 1</column>
<column name="select_ln33_fu_429_p3">select, 0, 0, 3, 1, 3</column>
<column name="select_ln34_1_fu_527_p3">select, 0, 0, 8, 1, 1</column>
<column name="select_ln34_fu_571_p3">select, 0, 0, 4, 1, 4</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln30_fu_405_p2">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln34_fu_457_p2">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="Layer_Neurons_blk_n_AR">9, 2, 1, 2</column>
<column name="Layer_Neurons_blk_n_R">9, 2, 1, 2</column>
<column name="Layer_Weights_blk_n_AR">9, 2, 1, 2</column>
<column name="Layer_Weights_blk_n_R">9, 2, 1, 2</column>
<column name="ap_NS_fsm">121, 27, 1, 27</column>
<column name="ap_done_int">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter0">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter4">9, 2, 1, 2</column>
<column name="ap_loop_exit_ready_pp0_iter1_reg">9, 2, 1, 2</column>
<column name="ap_loop_exit_ready_pp0_iter2_reg">9, 2, 1, 2</column>
<column name="ap_loop_exit_ready_pp0_iter3_reg">9, 2, 1, 2</column>
<column name="ap_phi_mux_first_iter_1_phi_fu_260_p4">9, 2, 1, 2</column>
<column name="ap_sig_allocacmp_i_load">9, 2, 3, 6</column>
<column name="ap_sig_allocacmp_indvar_flatten22_load">9, 2, 10, 20</column>
<column name="ap_sig_allocacmp_indvar_flatten_load">9, 2, 8, 16</column>
<column name="ap_sig_allocacmp_k_load">9, 2, 4, 8</column>
<column name="grp_fu_286_p0">31, 6, 32, 192</column>
<column name="grp_fu_286_p1">113, 25, 32, 800</column>
<column name="grp_fu_290_p0">117, 26, 32, 832</column>
<column name="grp_fu_290_p1">117, 26, 32, 832</column>
<column name="i_fu_136">9, 2, 3, 6</column>
<column name="indvar_flatten22_fu_140">9, 2, 10, 20</column>
<column name="indvar_flatten_fu_132">9, 2, 8, 16</column>
<column name="j_fu_128">9, 2, 4, 8</column>
<column name="k_fu_124">9, 2, 4, 8</column>
<column name="m_axi_Layer_Neurons_ARADDR">31, 6, 64, 384</column>
<column name="m_axi_Layer_Weights_ARADDR">14, 3, 64, 192</column>
<column name="m_axi_Layer_Weights_ARLEN">14, 3, 32, 96</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="Layer_Neurons_addr_1_reg_1333">64, 0, 64, 0</column>
<column name="Layer_Neurons_addr_2_reg_1359">64, 0, 64, 0</column>
<column name="Layer_Neurons_addr_3_reg_1435">64, 0, 64, 0</column>
<column name="Layer_Neurons_addr_4_reg_1516">64, 0, 64, 0</column>
<column name="Layer_Neurons_addr_reg_1312">64, 0, 64, 0</column>
<column name="Layer_Weights_addr_2_reg_1306">64, 0, 64, 0</column>
<column name="Layer_Weights_addr_reg_1280">64, 0, 64, 0</column>
<column name="Layer_Weights_load2_fu_144">32, 0, 32, 0</column>
<column name="add_ln45_reg_1328">10, 0, 10, 0</column>
<column name="and_ln30_reg_1250">1, 0, 1, 0</column>
<column name="ap_CS_fsm">26, 0, 26, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter3">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter4">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter2_reg">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter3_reg">1, 0, 1, 0</column>
<column name="empty_63_reg_1291">10, 0, 10, 0</column>
<column name="empty_65_reg_1339">10, 0, 10, 0</column>
<column name="empty_67_reg_1344">10, 0, 10, 0</column>
<column name="empty_81_reg_1275">10, 0, 10, 0</column>
<column name="grp_SIGMOID_fu_278_ap_start_reg">1, 0, 1, 0</column>
<column name="i_fu_136">3, 0, 3, 0</column>
<column name="icmp_ln33_reg_1241">1, 0, 1, 0</column>
<column name="icmp_ln34_reg_1245">1, 0, 1, 0</column>
<column name="indvar_flatten22_fu_140">10, 0, 10, 0</column>
<column name="indvar_flatten_fu_132">8, 0, 8, 0</column>
<column name="j_fu_128">4, 0, 4, 0</column>
<column name="k_fu_124">4, 0, 4, 0</column>
<column name="mul27_1_1_reg_1466">32, 0, 32, 0</column>
<column name="mul27_1_2_reg_1481">32, 0, 32, 0</column>
<column name="mul27_1_3_reg_1496">32, 0, 32, 0</column>
<column name="mul27_1_4_reg_1506">32, 0, 32, 0</column>
<column name="mul27_1_4_reg_1506_pp0_iter1_reg">32, 0, 32, 0</column>
<column name="mul27_1_reg_1451">32, 0, 32, 0</column>
<column name="mul27_2_1_reg_1547">32, 0, 32, 0</column>
<column name="mul27_2_1_reg_1547_pp0_iter1_reg">32, 0, 32, 0</column>
<column name="mul27_2_2_reg_1562">32, 0, 32, 0</column>
<column name="mul27_2_2_reg_1562_pp0_iter1_reg">32, 0, 32, 0</column>
<column name="mul27_2_3_reg_1577">32, 0, 32, 0</column>
<column name="mul27_2_3_reg_1577_pp0_iter1_reg">32, 0, 32, 0</column>
<column name="mul27_2_4_reg_1587">32, 0, 32, 0</column>
<column name="mul27_2_4_reg_1587_pp0_iter2_reg">32, 0, 32, 0</column>
<column name="mul27_2_reg_1532">32, 0, 32, 0</column>
<column name="mul27_2_reg_1532_pp0_iter1_reg">32, 0, 32, 0</column>
<column name="mul27_3_1_reg_1622">32, 0, 32, 0</column>
<column name="mul27_3_2_reg_1637">32, 0, 32, 0</column>
<column name="mul27_3_3_reg_1652">32, 0, 32, 0</column>
<column name="mul27_3_4_reg_1662">32, 0, 32, 0</column>
<column name="mul27_3_reg_1607">32, 0, 32, 0</column>
<column name="mul27_3_reg_1607_pp0_iter2_reg">32, 0, 32, 0</column>
<column name="mul27_4_1_reg_1697">32, 0, 32, 0</column>
<column name="mul27_4_2_reg_1712">32, 0, 32, 0</column>
<column name="mul27_4_3_reg_1727">32, 0, 32, 0</column>
<column name="mul27_4_4_reg_1732">32, 0, 32, 0</column>
<column name="mul27_4_reg_1682">32, 0, 32, 0</column>
<column name="mul27_5_reg_1405">32, 0, 32, 0</column>
<column name="mul27_6_reg_1420">32, 0, 32, 0</column>
<column name="mul27_s_reg_1390">32, 0, 32, 0</column>
<column name="or_ln30_1_reg_1255">1, 0, 1, 0</column>
<column name="or_ln34_reg_1265">1, 0, 1, 0</column>
<column name="reg_294">32, 0, 32, 0</column>
<column name="reg_298">32, 0, 32, 0</column>
<column name="reg_302">32, 0, 32, 0</column>
<column name="reg_307">32, 0, 32, 0</column>
<column name="reg_311">32, 0, 32, 0</column>
<column name="reg_316">32, 0, 32, 0</column>
<column name="reg_320">32, 0, 32, 0</column>
<column name="reg_324">32, 0, 32, 0</column>
<column name="reg_328">32, 0, 32, 0</column>
<column name="reg_333">32, 0, 32, 0</column>
<column name="reg_338">32, 0, 32, 0</column>
<column name="select_ln30_1_reg_1259">4, 0, 4, 0</column>
<column name="tmp_3_reg_1299">4, 0, 5, 1</column>
<column name="add_ln45_reg_1328">64, 32, 10, 0</column>
<column name="icmp_ln33_reg_1241">64, 32, 1, 0</column>
<column name="mul27_3_1_reg_1622">64, 32, 32, 0</column>
<column name="mul27_3_2_reg_1637">64, 32, 32, 0</column>
<column name="mul27_3_3_reg_1652">64, 32, 32, 0</column>
<column name="mul27_3_4_reg_1662">64, 32, 32, 0</column>
<column name="mul27_4_1_reg_1697">64, 32, 32, 0</column>
<column name="mul27_4_2_reg_1712">64, 32, 32, 0</column>
<column name="mul27_4_3_reg_1727">64, 32, 32, 0</column>
<column name="mul27_4_4_reg_1732">64, 32, 32, 0</column>
<column name="mul27_4_reg_1682">64, 32, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_din1">out, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_dout0">in, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_ce">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_start">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_ready">in, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_done">in, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_SIGMOID_fu_244_p_idle">in, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_473_p_din0">out, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_473_p_din1">out, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_473_p_opcode">out, 2, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_473_p_dout0">in, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_473_p_ce">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_477_p_din0">out, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_477_p_din1">out, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_477_p_dout0">in, 32, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="grp_fu_477_p_ce">out, 1, ap_ctrl_hs, cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop, return value</column>
<column name="m_axi_Layer_Weights_AWVALID">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWREADY">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWADDR">out, 64, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWID">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWLEN">out, 32, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWSIZE">out, 3, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWBURST">out, 2, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWLOCK">out, 2, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWCACHE">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWPROT">out, 3, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWQOS">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWREGION">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_AWUSER">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WVALID">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WREADY">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WDATA">out, 32, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WSTRB">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WLAST">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WID">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_WUSER">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARVALID">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARREADY">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARADDR">out, 64, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARID">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARLEN">out, 32, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARSIZE">out, 3, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARBURST">out, 2, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARLOCK">out, 2, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARCACHE">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARPROT">out, 3, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARQOS">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARREGION">out, 4, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_ARUSER">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RVALID">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RREADY">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RDATA">in, 32, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RLAST">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RID">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RFIFONUM">in, 9, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RUSER">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_RRESP">in, 2, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_BVALID">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_BREADY">out, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_BRESP">in, 2, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_BID">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Weights_BUSER">in, 1, m_axi, Layer_Weights, pointer</column>
<column name="m_axi_Layer_Neurons_AWVALID">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWREADY">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWADDR">out, 64, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWID">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWLEN">out, 32, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWSIZE">out, 3, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWBURST">out, 2, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWLOCK">out, 2, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWCACHE">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWPROT">out, 3, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWQOS">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWREGION">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_AWUSER">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WVALID">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WREADY">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WDATA">out, 32, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WSTRB">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WLAST">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WID">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_WUSER">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARVALID">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARREADY">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARADDR">out, 64, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARID">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARLEN">out, 32, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARSIZE">out, 3, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARBURST">out, 2, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARLOCK">out, 2, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARCACHE">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARPROT">out, 3, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARQOS">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARREGION">out, 4, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_ARUSER">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RVALID">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RREADY">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RDATA">in, 32, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RLAST">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RID">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RFIFONUM">in, 9, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RUSER">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_RRESP">in, 2, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_BVALID">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_BREADY">out, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_BRESP">in, 2, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_BID">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="m_axi_Layer_Neurons_BUSER">in, 1, m_axi, Layer_Neurons, pointer</column>
<column name="Layer1_Weights_CPU">in, 64, ap_none, Layer1_Weights_CPU, scalar</column>
<column name="Layer1_Neurons_CPU">in, 64, ap_none, Layer1_Neurons_CPU, scalar</column>
<column name="Layer2_Neurons_CPU_address0">out, 10, ap_memory, Layer2_Neurons_CPU, array</column>
<column name="Layer2_Neurons_CPU_ce0">out, 1, ap_memory, Layer2_Neurons_CPU, array</column>
<column name="Layer2_Neurons_CPU_we0">out, 1, ap_memory, Layer2_Neurons_CPU, array</column>
<column name="Layer2_Neurons_CPU_d0">out, 32, ap_memory, Layer2_Neurons_CPU, array</column>
</table>
</item>
</section>
</profile>
