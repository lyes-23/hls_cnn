

================================================================
== Vitis HLS Report for 'cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2'
================================================================
* Date:           Thu Jan 30 18:34:44 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        CNN_lenet5
* Solution:       solution8 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  20.00 ns|  14.600 ns|     5.40 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     3759|     3759|  75.180 us|  75.180 us|  3759|  3759|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                  Loop Name                  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- col_loop2_kernelRow_Loop2_kernelCol_loop2  |     3757|     3757|        11|          3|          3|  1250|       yes|
        +---------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 3, D = 11, States = { 1 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.18>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%somme_1 = alloca i32 1" [cnn_lenet.cpp:29]   --->   Operation 14 'alloca' 'somme_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%m = alloca i32 1" [cnn_lenet.cpp:30]   --->   Operation 15 'alloca' 'm' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%k = alloca i32 1" [cnn_lenet.cpp:30]   --->   Operation 16 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten51 = alloca i32 1"   --->   Operation 17 'alloca' 'indvar_flatten51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [cnn_lenet.cpp:30]   --->   Operation 18 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%indvar_flatten66 = alloca i32 1"   --->   Operation 19 'alloca' 'indvar_flatten66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln75_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln75"   --->   Operation 20 'read' 'sext_ln75_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%somme_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %somme"   --->   Operation 21 'read' 'somme_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sext_ln75_cast = sext i62 %sext_ln75_read"   --->   Operation 22 'sext' 'sext_ln75_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %Layer_Weights, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 156, void @empty_3, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln0 = store i11 0, i11 %indvar_flatten66"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln30 = store i6 0, i6 %j" [cnn_lenet.cpp:30]   --->   Operation 25 'store' 'store_ln30' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln0 = store i6 0, i6 %indvar_flatten51"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln30 = store i3 0, i3 %k" [cnn_lenet.cpp:30]   --->   Operation 27 'store' 'store_ln30' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln30 = store i3 0, i3 %m" [cnn_lenet.cpp:30]   --->   Operation 28 'store' 'store_ln30' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (1.58ns)   --->   "%store_ln29 = store i32 %somme_read, i32 %somme_1" [cnn_lenet.cpp:29]   --->   Operation 29 'store' 'store_ln29' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc238"   --->   Operation 30 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%indvar_flatten66_load = load i11 %indvar_flatten66" [cnn_lenet.cpp:75]   --->   Operation 31 'load' 'indvar_flatten66_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %Layer_Weights"   --->   Operation 32 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.63ns)   --->   "%icmp_ln75 = icmp_eq  i11 %indvar_flatten66_load, i11 1250" [cnn_lenet.cpp:75]   --->   Operation 33 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 1.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.63ns)   --->   "%add_ln75 = add i11 %indvar_flatten66_load, i11 1" [cnn_lenet.cpp:75]   --->   Operation 34 'add' 'add_ln75' <Predicate = true> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln75, void %for.inc244, void %for.inc250.exitStub" [cnn_lenet.cpp:75]   --->   Operation 35 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%indvar_flatten51_load = load i6 %indvar_flatten51" [cnn_lenet.cpp:76]   --->   Operation 36 'load' 'indvar_flatten51_load' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%j_load = load i6 %j" [cnn_lenet.cpp:75]   --->   Operation 37 'load' 'j_load' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.82ns)   --->   "%icmp_ln76 = icmp_eq  i6 %indvar_flatten51_load, i6 25" [cnn_lenet.cpp:76]   --->   Operation 38 'icmp' 'icmp_ln76' <Predicate = (!icmp_ln75)> <Delay = 1.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (1.82ns)   --->   "%add_ln75_1 = add i6 %j_load, i6 1" [cnn_lenet.cpp:75]   --->   Operation 39 'add' 'add_ln75_1' <Predicate = (!icmp_ln75)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.18ns)   --->   "%select_ln75 = select i1 %icmp_ln76, i6 %add_ln75_1, i6 %j_load" [cnn_lenet.cpp:75]   --->   Operation 40 'select' 'select_ln75' <Predicate = (!icmp_ln75)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i6 %select_ln75" [cnn_lenet.cpp:75]   --->   Operation 41 'zext' 'zext_ln75' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 42 [3/3] (1.05ns) (grouped into DSP with root node add_ln79_2)   --->   "%empty = mul i11 %zext_ln75, i11 25" [cnn_lenet.cpp:75]   --->   Operation 42 'mul' 'empty' <Predicate = (!icmp_ln75)> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 43 [1/1] (1.82ns)   --->   "%add_ln76_1 = add i6 %indvar_flatten51_load, i6 1" [cnn_lenet.cpp:76]   --->   Operation 43 'add' 'add_ln76_1' <Predicate = (!icmp_ln75)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (1.18ns)   --->   "%select_ln76_1 = select i1 %icmp_ln76, i6 1, i6 %add_ln76_1" [cnn_lenet.cpp:76]   --->   Operation 44 'select' 'select_ln76_1' <Predicate = (!icmp_ln75)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (1.58ns)   --->   "%store_ln75 = store i11 %add_ln75, i11 %indvar_flatten66" [cnn_lenet.cpp:75]   --->   Operation 45 'store' 'store_ln75' <Predicate = (!icmp_ln75)> <Delay = 1.58>
ST_1 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln30 = store i6 %select_ln75, i6 %j" [cnn_lenet.cpp:30]   --->   Operation 46 'store' 'store_ln30' <Predicate = (!icmp_ln75)> <Delay = 1.58>
ST_1 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln76 = store i6 %select_ln76_1, i6 %indvar_flatten51" [cnn_lenet.cpp:76]   --->   Operation 47 'store' 'store_ln76' <Predicate = (!icmp_ln75)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 1.05>
ST_2 : Operation 48 [2/3] (1.05ns) (grouped into DSP with root node add_ln79_2)   --->   "%empty = mul i11 %zext_ln75, i11 25" [cnn_lenet.cpp:75]   --->   Operation 48 'mul' 'empty' <Predicate = (!icmp_ln75)> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 6.84>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%m_load = load i3 %m" [cnn_lenet.cpp:77]   --->   Operation 49 'load' 'm_load' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node and_ln29)   --->   "%xor_ln29 = xor i1 %icmp_ln76, i1 1" [cnn_lenet.cpp:29]   --->   Operation 50 'xor' 'xor_ln29' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (1.65ns)   --->   "%icmp_ln77 = icmp_eq  i3 %m_load, i3 5" [cnn_lenet.cpp:77]   --->   Operation 51 'icmp' 'icmp_ln77' <Predicate = (!icmp_ln75)> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29 = and i1 %icmp_ln77, i1 %xor_ln29" [cnn_lenet.cpp:29]   --->   Operation 52 'and' 'and_ln29' <Predicate = (!icmp_ln75)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln29_1)   --->   "%or_ln29 = or i1 %and_ln29, i1 %icmp_ln76" [cnn_lenet.cpp:29]   --->   Operation 53 'or' 'or_ln29' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln29_1 = select i1 %or_ln29, i3 0, i3 %m_load" [cnn_lenet.cpp:29]   --->   Operation 54 'select' 'select_ln29_1' <Predicate = (!icmp_ln75)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 55 [1/3] (0.00ns) (grouped into DSP with root node add_ln79_2)   --->   "%empty = mul i11 %zext_ln75, i11 25" [cnn_lenet.cpp:75]   --->   Operation 55 'mul' 'empty' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i3 %select_ln29_1" [cnn_lenet.cpp:77]   --->   Operation 56 'zext' 'zext_ln77' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_3 : Operation 57 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln79_2 = add i11 %empty, i11 %zext_ln77" [cnn_lenet.cpp:79]   --->   Operation 57 'add' 'add_ln79_2' <Predicate = (!icmp_ln75)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 58 [1/1] (1.65ns)   --->   "%add_ln77 = add i3 %select_ln29_1, i3 1" [cnn_lenet.cpp:77]   --->   Operation 58 'add' 'add_ln77' <Predicate = (!icmp_ln75)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln30 = store i3 %add_ln77, i3 %m" [cnn_lenet.cpp:30]   --->   Operation 59 'store' 'store_ln30' <Predicate = (!icmp_ln75)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 10.2>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%k_load = load i3 %k" [cnn_lenet.cpp:29]   --->   Operation 60 'load' 'k_load' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.98ns)   --->   "%select_ln29 = select i1 %icmp_ln76, i3 0, i3 %k_load" [cnn_lenet.cpp:29]   --->   Operation 61 'select' 'select_ln29' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (1.65ns)   --->   "%add_ln76 = add i3 %select_ln29, i3 1" [cnn_lenet.cpp:76]   --->   Operation 62 'add' 'add_ln76' <Predicate = (and_ln29)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.98ns)   --->   "%select_ln76 = select i1 %and_ln29, i3 %add_ln76, i3 %select_ln29" [cnn_lenet.cpp:76]   --->   Operation 63 'select' 'select_ln76' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i3 %select_ln76" [cnn_lenet.cpp:76]   --->   Operation 64 'zext' 'zext_ln76' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %select_ln76, i2 0" [cnn_lenet.cpp:76]   --->   Operation 65 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (1.78ns)   --->   "%add_ln79 = add i5 %p_shl1, i5 %zext_ln76" [cnn_lenet.cpp:79]   --->   Operation 66 'add' 'add_ln79' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i5 %add_ln79" [cnn_lenet.cpp:79]   --->   Operation 67 'zext' 'zext_ln79' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln79_2 = add i11 %empty, i11 %zext_ln77" [cnn_lenet.cpp:79]   --->   Operation 68 'add' 'add_ln79_2' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 69 [1/1] (1.63ns)   --->   "%add_ln79_1 = add i11 %add_ln79_2, i11 %zext_ln79" [cnn_lenet.cpp:79]   --->   Operation 69 'add' 'add_ln79_1' <Predicate = true> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i11 %add_ln79_1" [cnn_lenet.cpp:79]   --->   Operation 70 'zext' 'zext_ln79_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%Layer3_Neurons_CPU_addr = getelementptr i32 %Layer3_Neurons_CPU, i64 0, i64 %zext_ln79_1" [cnn_lenet.cpp:79]   --->   Operation 71 'getelementptr' 'Layer3_Neurons_CPU_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [2/2] (3.25ns)   --->   "%Layer3_Neurons_CPU_load = load i11 %Layer3_Neurons_CPU_addr" [cnn_lenet.cpp:79]   --->   Operation 72 'load' 'Layer3_Neurons_CPU_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1250> <RAM>
ST_4 : Operation 73 [1/1] (1.58ns)   --->   "%store_ln30 = store i3 %select_ln76, i3 %k" [cnn_lenet.cpp:30]   --->   Operation 73 'store' 'store_ln30' <Predicate = true> <Delay = 1.58>

State 5 <SV = 4> <Delay = 14.6>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%Layer_Weights_addr = getelementptr i32 %Layer_Weights, i64 %sext_ln75_cast" [cnn_lenet.cpp:75]   --->   Operation 74 'getelementptr' 'Layer_Weights_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (14.6ns)   --->   "%Layer_Weights_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %Layer_Weights_addr" [cnn_lenet.cpp:79]   --->   Operation 75 'read' 'Layer_Weights_addr_read' <Predicate = true> <Delay = 14.6> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 76 [1/2] (3.25ns)   --->   "%Layer3_Neurons_CPU_load = load i11 %Layer3_Neurons_CPU_addr" [cnn_lenet.cpp:79]   --->   Operation 76 'load' 'Layer3_Neurons_CPU_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1250> <RAM>

State 6 <SV = 5> <Delay = 12.3>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%bitcast_ln79 = bitcast i32 %Layer_Weights_addr_read" [cnn_lenet.cpp:79]   --->   Operation 77 'bitcast' 'bitcast_ln79' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [2/2] (12.3ns)   --->   "%mul7 = fmul i32 %bitcast_ln79, i32 %Layer3_Neurons_CPU_load" [cnn_lenet.cpp:79]   --->   Operation 78 'fmul' 'mul7' <Predicate = true> <Delay = 12.3> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 12.3>
ST_7 : Operation 79 [1/2] (12.3ns)   --->   "%mul7 = fmul i32 %bitcast_ln79, i32 %Layer3_Neurons_CPU_load" [cnn_lenet.cpp:79]   --->   Operation 79 'fmul' 'mul7' <Predicate = true> <Delay = 12.3> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 10.5>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%somme_1_load_1 = load i32 %somme_1" [cnn_lenet.cpp:79]   --->   Operation 80 'load' 'somme_1_load_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 81 [4/4] (10.5ns)   --->   "%somme_2 = fadd i32 %somme_1_load_1, i32 %mul7" [cnn_lenet.cpp:79]   --->   Operation 81 'fadd' 'somme_2' <Predicate = true> <Delay = 10.5> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%somme_1_load = load i32 %somme_1"   --->   Operation 90 'load' 'somme_1_load' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %somme_61_out, i32 %somme_1_load"   --->   Operation 91 'write' 'write_ln0' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 92 'ret' 'ret_ln0' <Predicate = (icmp_ln75)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 10.5>
ST_9 : Operation 82 [3/4] (10.5ns)   --->   "%somme_2 = fadd i32 %somme_1_load_1, i32 %mul7" [cnn_lenet.cpp:79]   --->   Operation 82 'fadd' 'somme_2' <Predicate = true> <Delay = 10.5> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 10.5>
ST_10 : Operation 83 [2/4] (10.5ns)   --->   "%somme_2 = fadd i32 %somme_1_load_1, i32 %mul7" [cnn_lenet.cpp:79]   --->   Operation 83 'fadd' 'somme_2' <Predicate = true> <Delay = 10.5> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 12.1>
ST_11 : Operation 84 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @col_loop2_kernelRow_Loop2_kernelCol_loop2_str"   --->   Operation 84 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1250, i64 1250, i64 1250"   --->   Operation 85 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 86 [1/1] (0.00ns)   --->   "%specpipeline_ln78 = specpipeline void @_ssdm_op_SpecPipeline, i32 3, i32 0, i32 0, i32 0, void @empty_0" [cnn_lenet.cpp:78]   --->   Operation 86 'specpipeline' 'specpipeline_ln78' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 87 [1/4] (10.5ns)   --->   "%somme_2 = fadd i32 %somme_1_load_1, i32 %mul7" [cnn_lenet.cpp:79]   --->   Operation 87 'fadd' 'somme_2' <Predicate = true> <Delay = 10.5> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 88 [1/1] (1.58ns)   --->   "%store_ln29 = store i32 %somme_2, i32 %somme_1" [cnn_lenet.cpp:29]   --->   Operation 88 'store' 'store_ln29' <Predicate = true> <Delay = 1.58>
ST_11 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln77 = br void %for.inc238" [cnn_lenet.cpp:77]   --->   Operation 89 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20.000ns, clock uncertainty: 5.400ns.

 <State 1>: 6.189ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln30', cnn_lenet.cpp:30) of constant 0 on local variable 'j', cnn_lenet.cpp:30 [17]  (1.588 ns)
	'load' operation 6 bit ('j_load', cnn_lenet.cpp:75) on local variable 'j', cnn_lenet.cpp:30 [34]  (0.000 ns)
	'add' operation 6 bit ('add_ln75_1', cnn_lenet.cpp:75) [43]  (1.825 ns)
	'select' operation 6 bit ('select_ln75', cnn_lenet.cpp:75) [44]  (1.188 ns)
	'store' operation 0 bit ('store_ln30', cnn_lenet.cpp:30) of variable 'select_ln75', cnn_lenet.cpp:75 on local variable 'j', cnn_lenet.cpp:30 [70]  (1.588 ns)

 <State 2>: 1.050ns
The critical path consists of the following:
	'mul' operation 11 bit of DSP[59] ('empty', cnn_lenet.cpp:75) [50]  (1.050 ns)

 <State 3>: 6.846ns
The critical path consists of the following:
	'load' operation 3 bit ('m_load', cnn_lenet.cpp:77) on local variable 'm', cnn_lenet.cpp:30 [31]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln77', cnn_lenet.cpp:77) [41]  (1.650 ns)
	'and' operation 1 bit ('and_ln29', cnn_lenet.cpp:29) [42]  (0.978 ns)
	'or' operation 1 bit ('or_ln29', cnn_lenet.cpp:29) [46]  (0.000 ns)
	'select' operation 3 bit ('select_ln29_1', cnn_lenet.cpp:29) [47]  (0.980 ns)
	'add' operation 3 bit ('add_ln77', cnn_lenet.cpp:77) [66]  (1.650 ns)
	'store' operation 0 bit ('store_ln30', cnn_lenet.cpp:30) of variable 'add_ln77', cnn_lenet.cpp:77 on local variable 'm', cnn_lenet.cpp:30 [73]  (1.588 ns)

 <State 4>: 10.283ns
The critical path consists of the following:
	'load' operation 3 bit ('k_load', cnn_lenet.cpp:29) on local variable 'k', cnn_lenet.cpp:30 [32]  (0.000 ns)
	'select' operation 3 bit ('select_ln29', cnn_lenet.cpp:29) [39]  (0.980 ns)
	'add' operation 3 bit ('add_ln76', cnn_lenet.cpp:76) [45]  (1.650 ns)
	'select' operation 3 bit ('select_ln76', cnn_lenet.cpp:76) [48]  (0.980 ns)
	'add' operation 5 bit ('add_ln79', cnn_lenet.cpp:79) [57]  (1.780 ns)
	'add' operation 11 bit ('add_ln79_1', cnn_lenet.cpp:79) [60]  (1.639 ns)
	'getelementptr' operation 11 bit ('Layer3_Neurons_CPU_addr', cnn_lenet.cpp:79) [62]  (0.000 ns)
	'load' operation 32 bit ('Layer3_Neurons_CPU_load', cnn_lenet.cpp:79) on array 'Layer3_Neurons_CPU' [63]  (3.254 ns)

 <State 5>: 14.600ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('Layer_Weights_addr', cnn_lenet.cpp:75) [35]  (0.000 ns)
	bus read operation ('Layer_Weights_addr_read', cnn_lenet.cpp:79) on port 'Layer_Weights' (cnn_lenet.cpp:79) [55]  (14.600 ns)

 <State 6>: 12.383ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul7', cnn_lenet.cpp:79) [64]  (12.383 ns)

 <State 7>: 12.383ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul7', cnn_lenet.cpp:79) [64]  (12.383 ns)

 <State 8>: 10.533ns
The critical path consists of the following:
	'load' operation 32 bit ('somme_1_load_1', cnn_lenet.cpp:79) on local variable 'somme', cnn_lenet.cpp:29 [30]  (0.000 ns)
	'fadd' operation 32 bit ('somme_2', cnn_lenet.cpp:79) [65]  (10.533 ns)

 <State 9>: 10.533ns
The critical path consists of the following:
	'fadd' operation 32 bit ('somme_2', cnn_lenet.cpp:79) [65]  (10.533 ns)

 <State 10>: 10.533ns
The critical path consists of the following:
	'fadd' operation 32 bit ('somme_2', cnn_lenet.cpp:79) [65]  (10.533 ns)

 <State 11>: 12.121ns
The critical path consists of the following:
	'fadd' operation 32 bit ('somme_2', cnn_lenet.cpp:79) [65]  (10.533 ns)
	'store' operation 0 bit ('store_ln29', cnn_lenet.cpp:29) of variable 'somme_2', cnn_lenet.cpp:79 on local variable 'somme', cnn_lenet.cpp:29 [74]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
