--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 56, Column: 33 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Loop '''
  - LoopName:        kernelRow_Loop
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 57, Column: 37 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 38, Column: 33 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Loop '''
  - LoopName:        convolutionRow
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 39, Column: 40 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Loop '''
  - LoopName:        convolutionColumn
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        kernelRow_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:56:33'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        kernelCol_Loop
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:57:37'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        convolutionRow
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:38:33'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' completely with a factor of '
  - Factor:          '5'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PipelineRemovedByUnroll
DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Pipeline directive for loop '''
  - LoopName:        convolutionColumn
  - String:          ''' ('
  - LoopLoc:         'cnn_lenet.cpp:39:40'
  - String:          ') '
  - String:          'in function '''
  - String:          cnn_lenet
  - String:          ''' has been removed because the loop is unrolled completely'
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                   Line: 12, Column: 0 }
Function:        _Z20generic_cast_IEEE754IiL9ap_q_mode6EdET_T1_bN3hls9enable_ifIXsr3std14numeric_limitsIS1_EE9is_signedEbE4typeE
Args:            
  - String:          'Inlining function '''
  - Callee:          'fp_struct<double>::fp_struct(double)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h', 
                       Line: 456, Column: 0 }
  - String:          ''' into '''
  - Caller:          'int generic_cast_IEEE754<int, (ap_q_mode)6, double>(double, bool, hls::enable_if<std::numeric_limits<int>::is_signed, bool>::type)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                   Line: 12, Column: 0 }
Function:        _Z20generic_cast_IEEE754IiL9ap_q_mode6EdET_T1_bN3hls9enable_ifIXsr3std14numeric_limitsIS1_EE9is_signedEbE4typeE
Args:            
  - String:          'Inlining function '''
  - Callee:          'fp_struct<double>::mantissa() const'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h', 
                       Line: 503, Column: 0 }
  - String:          ''' into '''
  - Caller:          'int generic_cast_IEEE754<int, (ap_q_mode)6, double>(double, bool, hls::enable_if<std::numeric_limits<int>::is_signed, bool>::type)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                   Line: 12, Column: 0 }
Function:        _Z20generic_cast_IEEE754IiL9ap_q_mode6EdET_T1_bN3hls9enable_ifIXsr3std14numeric_limitsIS1_EE9is_signedEbE4typeE
Args:            
  - String:          'Inlining function '''
  - Callee:          'fp_struct<double>::expv() const'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h', 
                       Line: 485, Column: 0 }
  - String:          ''' into '''
  - Caller:          'int generic_cast_IEEE754<int, (ap_q_mode)6, double>(double, bool, hls::enable_if<std::numeric_limits<int>::is_signed, bool>::type)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                   Line: 12, Column: 0 }
Function:        _Z20generic_cast_IEEE754IiL9ap_q_mode6EdET_T1_bN3hls9enable_ifIXsr3std14numeric_limitsIS1_EE9is_signedEbE4typeE
Args:            
  - String:          'Inlining function '''
  - Callee:          'fp_struct<double>::__signbit() const'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h', 
                       Line: 512, Column: 0 }
  - String:          ''' into '''
  - Caller:          'int generic_cast_IEEE754<int, (ap_q_mode)6, double>(double, bool, hls::enable_if<std::numeric_limits<int>::is_signed, bool>::type)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 12, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                   Line: 116, Column: 0 }
Function:        _Z20generic_cast_IEEE754IidET_T0_b
Args:            
  - String:          'Inlining function '''
  - Callee:          'int generic_cast_IEEE754<int, (ap_q_mode)6, double>(double, bool, hls::enable_if<std::numeric_limits<int>::is_signed, bool>::type)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 12, Column: 0 }
  - String:          ''' into '''
  - Caller:          'int generic_cast_IEEE754<int, double>(double, bool)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 116, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\lib_floatconversion.cpp', 
                   Line: 55, Column: 0 }
Function:        __hls_fptosi_double_i32
Args:            
  - String:          'Inlining function '''
  - Callee:          'int generic_cast_IEEE754<int, double>(double, bool)'
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_case_IEEE754.h', 
                       Line: 116, Column: 0 }
  - String:          ''' into '''
  - Caller:          __hls_fptosi_double_i32
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\lib_floatconversion.cpp', 
                       Line: 55, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-inliner
Name:            Inline
DebugLoc:        { File: sigmoid.cpp, Line: 8, Column: 0 }
Function:        _Z7SIGMOIDf
Args:            
  - String:          'Inlining function '''
  - Callee:          __hls_fptosi_double_i32
    DebugLoc:        { File: 'C:\scratch\2023.2\hls_product\689\2023.2\src\shared\hls\clib\hlsmath\src\lib_floatconversion.cpp', 
                       Line: 55, Column: 0 }
  - String:          ''' into '''
  - Caller:          'SIGMOID(float)'
    DebugLoc:        { File: sigmoid.cpp, Line: 8, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '25'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgepseq
  - ArrayName:       Layer1_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.35
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.43
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.51
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.59
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.67
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.78
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.86
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.94
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.102
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.110
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.121
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.129
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.137
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.145
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.153
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.164
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.172
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.180
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.188
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.196
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.207
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.215
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.223
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.231
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.239
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '5'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep206seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.48
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.56
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.64
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.72
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.80
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '5'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep207seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.101
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.109
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.117
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.125
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.133
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '5'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep208seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.154
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.162
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.170
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.178
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.186
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '5'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep209seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.207
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.215
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.223
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.231
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.239
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '5'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep210seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.260
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.268
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.276
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.284
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          convolutionRow.load.292
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '150'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep211seq
  - ArrayName:       Layer2_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        col_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:53:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.160
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.167
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.174
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.181
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.188
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.195
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.203
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.211
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.218
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.225
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.232
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.239
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.247
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.255
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.262
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.269
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.276
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.283
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.291
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.299
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.306
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.313
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.320
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.327
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.335
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.343
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.350
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.357
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.364
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.371
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.382
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.389
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.396
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.403
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.410
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.417
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.425
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.432
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.439
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.446
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.453
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.460
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.468
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.475
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.482
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.489
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.496
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.503
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.511
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.518
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.525
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.532
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.539
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.546
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.554
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.561
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.568
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.575
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.582
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.589
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.600
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.607
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.614
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.621
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.628
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.635
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.643
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.650
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.657
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.664
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.671
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.678
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.686
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.693
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.700
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.707
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.714
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.721
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.729
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.736
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.743
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.750
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.757
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.764
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.772
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.779
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.786
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.793
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.800
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.807
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.818
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.825
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.832
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.839
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.846
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.853
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.861
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.868
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.875
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.882
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.889
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.896
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.904
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.911
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.918
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.925
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.932
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.939
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.947
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.954
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.961
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.968
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.975
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.982
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.990
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.997
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1004
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1011
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1018
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1025
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1036
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1043
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1050
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1057
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1064
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1071
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1079
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1086
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1093
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1100
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1107
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1114
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1122
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1129
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1136
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1143
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1150
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1157
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1165
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1172
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1179
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1186
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1193
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1200
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1208
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 60, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1215
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 61, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1222
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 62, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1229
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 63, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1236
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 64, Column: 34 }
  - OrigDirection:   read
  - OrigID:          kernelRow_Loop.load.1243
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '1250'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep212seq
  - ArrayName:       Layer3_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        col_loop2
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:75:13'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: cnn_lenet.cpp, Line: 79, Column: 11 }
  - OrigDirection:   read
  - OrigID:          for.inc238.load.10
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: cnn_lenet.cpp, Line: 73, Column: 23 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of length '
  - Length:          '100'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        Layer4_Neurons_CPU213seq
  - ArrayName:       Layer4_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        calculateLayer4_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:73:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: cnn_lenet.cpp, Line: 80, Column: 24 }
  - OrigDirection:   write
  - OrigID:          for.inc250.store.5
...
--- !Missed
Pass:            reflow-burst-inference
Name:            IncompatibleStride
DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          Stride is incompatible
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       Layer1_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        OutputColumn_Loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:35:32'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            IncompatibleStride
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          Stride is incompatible
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      somme
  - OrigDirection:   read
  - OrigID:          OutputRow_Loop.load.7
  - ArrayName:       Layer1_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        calculateLayer2_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:33:27'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            IncompatibleStride
DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          Stride is incompatible
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          scevgep211seq
  - ArrayName:       Layer2_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        col_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:53:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            IncompatibleStride
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          Stride is incompatible
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      somme
  - OrigDirection:   read
  - OrigID:          row_Loop.load.7
  - ArrayName:       Layer2_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        calculateLayer3_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:51:27'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            IncompatibleStride
DebugLoc:        { File: cnn_lenet.cpp, Line: 74, Column: 10 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          Stride is incompatible
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      somme
    DebugLoc:        { File: cnn_lenet.cpp, Line: 74, Column: 10 }
  - OrigDirection:   read
  - OrigID:          col_loop2.load.7
  - ArrayName:       Layer3_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        calculateLayer4_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:73:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            IncompatibleStride
DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          Stride is incompatible
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
  - OrigDirection:   read
  - OrigID:          scevgep212seq
  - ArrayName:       Layer3_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        calculateLayer4_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:73:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 73, Column: 23 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 73, Column: 23 }
  - OrigDirection:   write
  - OrigID:          Layer4_Neurons_CPU213seq
  - ArrayName:       Layer4_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        calculateLayer4_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:73:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
  - OrigDirection:   read
  - OrigID:          scevgep212seq
  - ArrayName:       Layer3_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        kernelCol_loop2
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:77:22'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
  - OrigDirection:   read
  - OrigID:          scevgep211seq
  - ArrayName:       Layer2_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       Layer1_Weights_CPU
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          scevgep206seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          scevgep207seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          scevgep208seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          scevgep209seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Could not widen since type '
  - Type:            float
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
  - OrigDirection:   read
  - OrigID:          scevgep210seq
  - ArrayName:       Layer1_Neurons_CPU
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '25'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 41, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '25'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Weights
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq1
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Neurons
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq2
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Neurons
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq3
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Neurons
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq4
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Neurons
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq5
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 42, Column: 34 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '5'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Neurons
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '150'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq6
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 59, Column: 11 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '150'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Weights
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 73, Column: 23 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '100'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq7
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Neurons
  - String:          ' '
  - LoopName:        calculateLayer4_loop
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:73:23'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 73, Column: 23 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '100'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        calculateLayer4_loop
  - String:          '''('
  - LoopLoc:         'cnn_lenet.cpp:73:23'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Neurons
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '1250'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq8
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      Layer_Weights
  - String:          ' '
  - LoopName:        col_loop2
  - String:          ' '
  - LoopLoc:         'cnn_lenet.cpp:75:13'
  - String:          ' '
  - Function:        'cnn_lenet(float*, float*, float*, float*, float*)'
    DebugLoc:        { File: cnn_lenet.cpp, Line: 14, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: cnn_lenet.cpp, Line: 75, Column: 13 }
Function:        _Z9cnn_lenetPfS_S_S_S_
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '1250'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        col_loop2
  - String:          '''('
  - LoopLoc:         'cnn_lenet.cpp:75:13'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      Layer_Weights
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
