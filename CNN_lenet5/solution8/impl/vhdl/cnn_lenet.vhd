-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_lenet is
generic (
    C_M_AXI_LAYER_NEURONS_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_LAYER_NEURONS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_NEURONS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_NEURONS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_LAYER_NEURONS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_NEURONS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_NEURONS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_NEURONS_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_WEIGHTS_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_LAYER_WEIGHTS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_WEIGHTS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_WEIGHTS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_LAYER_WEIGHTS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_WEIGHTS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_WEIGHTS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LAYER_WEIGHTS_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_LAYER_NEURONS_USER_VALUE : INTEGER := 0;
    C_M_AXI_LAYER_NEURONS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_LAYER_NEURONS_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_LAYER_WEIGHTS_USER_VALUE : INTEGER := 0;
    C_M_AXI_LAYER_WEIGHTS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_LAYER_WEIGHTS_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_Layer_Neurons_AWVALID : OUT STD_LOGIC;
    m_axi_Layer_Neurons_AWREADY : IN STD_LOGIC;
    m_axi_Layer_Neurons_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ADDR_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_Layer_Neurons_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_AWUSER_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_WVALID : OUT STD_LOGIC;
    m_axi_Layer_Neurons_WREADY : IN STD_LOGIC;
    m_axi_Layer_Neurons_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_DATA_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_DATA_WIDTH/8-1 downto 0);
    m_axi_Layer_Neurons_WLAST : OUT STD_LOGIC;
    m_axi_Layer_Neurons_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_WUSER_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_ARVALID : OUT STD_LOGIC;
    m_axi_Layer_Neurons_ARREADY : IN STD_LOGIC;
    m_axi_Layer_Neurons_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ADDR_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_Layer_Neurons_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ARUSER_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_RVALID : IN STD_LOGIC;
    m_axi_Layer_Neurons_RREADY : OUT STD_LOGIC;
    m_axi_Layer_Neurons_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_DATA_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_RLAST : IN STD_LOGIC;
    m_axi_Layer_Neurons_RID : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_RUSER_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_BVALID : IN STD_LOGIC;
    m_axi_Layer_Neurons_BREADY : OUT STD_LOGIC;
    m_axi_Layer_Neurons_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_BID : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Neurons_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_NEURONS_BUSER_WIDTH-1 downto 0);
    m_axi_Layer_Weights_AWVALID : OUT STD_LOGIC;
    m_axi_Layer_Weights_AWREADY : IN STD_LOGIC;
    m_axi_Layer_Weights_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ADDR_WIDTH-1 downto 0);
    m_axi_Layer_Weights_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Weights_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_Layer_Weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_AWUSER_WIDTH-1 downto 0);
    m_axi_Layer_Weights_WVALID : OUT STD_LOGIC;
    m_axi_Layer_Weights_WREADY : IN STD_LOGIC;
    m_axi_Layer_Weights_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_DATA_WIDTH-1 downto 0);
    m_axi_Layer_Weights_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_DATA_WIDTH/8-1 downto 0);
    m_axi_Layer_Weights_WLAST : OUT STD_LOGIC;
    m_axi_Layer_Weights_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Weights_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_WUSER_WIDTH-1 downto 0);
    m_axi_Layer_Weights_ARVALID : OUT STD_LOGIC;
    m_axi_Layer_Weights_ARREADY : IN STD_LOGIC;
    m_axi_Layer_Weights_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ADDR_WIDTH-1 downto 0);
    m_axi_Layer_Weights_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Weights_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_Layer_Weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ARUSER_WIDTH-1 downto 0);
    m_axi_Layer_Weights_RVALID : IN STD_LOGIC;
    m_axi_Layer_Weights_RREADY : OUT STD_LOGIC;
    m_axi_Layer_Weights_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_DATA_WIDTH-1 downto 0);
    m_axi_Layer_Weights_RLAST : IN STD_LOGIC;
    m_axi_Layer_Weights_RID : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Weights_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_RUSER_WIDTH-1 downto 0);
    m_axi_Layer_Weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_BVALID : IN STD_LOGIC;
    m_axi_Layer_Weights_BREADY : OUT STD_LOGIC;
    m_axi_Layer_Weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_BID : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_Layer_Weights_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_LAYER_WEIGHTS_BUSER_WIDTH-1 downto 0);
    s_axi_CTRL_bus_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_bus_WVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_bus_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_bus_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_bus_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_bus_RREADY : IN STD_LOGIC;
    s_axi_CTRL_bus_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_bus_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_bus_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_bus_BREADY : IN STD_LOGIC;
    s_axi_CTRL_bus_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of cnn_lenet is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn_lenet_cnn_lenet,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.326960,HLS_SYN_LAT=595147,HLS_SYN_TPT=none,HLS_SYN_MEM=15,HLS_SYN_DSP=0,HLS_SYN_FF=19912,HLS_SYN_LUT=17101,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (31 downto 0) := "00000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (31 downto 0) := "00000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (31 downto 0) := "00001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4E2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010011100010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv19_138C : STD_LOGIC_VECTOR (18 downto 0) := "0000001001110001100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv19_4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal Layer1_Neurons_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer2_Weights_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer3_Weights_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer4_Neurons_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer_Neurons_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal Layer_Neurons_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal Layer_Neurons_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal Layer_Weights_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal Layer_Weights_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal Layer3_Weights_CPU_read_reg_405 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer2_Weights_CPU_read_reg_411 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_read_reg_416 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Neurons_CPU_read_reg_421 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer_Neurons_addr_reg_432 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer_Weights_addr_2_reg_441 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln4_reg_447 : STD_LOGIC_VECTOR (61 downto 0);
    signal Layer_Weights_addr_2_read_reg_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_fu_379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_reg_463 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_SIGMOID_fu_244_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal Layer2_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer2_Neurons_CPU_ce0 : STD_LOGIC;
    signal Layer2_Neurons_CPU_we0 : STD_LOGIC;
    signal Layer2_Neurons_CPU_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer2_Neurons_CPU_ce1 : STD_LOGIC;
    signal Layer2_Neurons_CPU_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer3_Neurons_CPU_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Layer3_Neurons_CPU_ce0 : STD_LOGIC;
    signal Layer3_Neurons_CPU_we0 : STD_LOGIC;
    signal Layer3_Neurons_CPU_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_done : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_idle : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_ready : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WLAST : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_RREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_BREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WLAST : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_RREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_BREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_we0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_done : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_idle : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_ready : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WLAST : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_RREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_BREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce1 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_we0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_done : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_idle : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_ready : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WLAST : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_RREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_BREADY : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_somme_61_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_somme_61_out_ap_vld : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_ce : STD_LOGIC;
    signal grp_SIGMOID_fu_244_ap_start : STD_LOGIC;
    signal grp_SIGMOID_fu_244_ap_done : STD_LOGIC;
    signal grp_SIGMOID_fu_244_ap_idle : STD_LOGIC;
    signal grp_SIGMOID_fu_244_ap_ready : STD_LOGIC;
    signal grp_SIGMOID_fu_244_ap_ce : STD_LOGIC;
    signal grp_SIGMOID_fu_244_x : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Neurons_AWVALID : STD_LOGIC;
    signal Layer_Neurons_AWREADY : STD_LOGIC;
    signal Layer_Neurons_WVALID : STD_LOGIC;
    signal Layer_Neurons_WREADY : STD_LOGIC;
    signal Layer_Neurons_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Neurons_ARVALID : STD_LOGIC;
    signal Layer_Neurons_ARREADY : STD_LOGIC;
    signal Layer_Neurons_RVALID : STD_LOGIC;
    signal Layer_Neurons_RREADY : STD_LOGIC;
    signal Layer_Neurons_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Neurons_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal Layer_Neurons_BVALID : STD_LOGIC;
    signal Layer_Neurons_BREADY : STD_LOGIC;
    signal Layer_Weights_AWREADY : STD_LOGIC;
    signal Layer_Weights_WREADY : STD_LOGIC;
    signal Layer_Weights_ARVALID : STD_LOGIC;
    signal Layer_Weights_ARREADY : STD_LOGIC;
    signal Layer_Weights_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer_Weights_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Weights_RVALID : STD_LOGIC;
    signal Layer_Weights_RREADY : STD_LOGIC;
    signal Layer_Weights_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Weights_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal Layer_Weights_BVALID : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_SIGMOID_fu_244_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm_state17 : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal sext_ln73_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln74_fu_339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln73_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln75_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_fu_122 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal add_ln73_1_fu_287_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal i_fu_126 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln73_fu_299_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln_fu_251_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln74_fu_309_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln74_1_fu_315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_fu_305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln74_2_fu_324_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_329_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln74_1_fu_319_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_473_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_473_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_473_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_473_ce : STD_LOGIC;
    signal grp_fu_477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_477_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_477_ce : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_Layer_Weights_AWVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_AWREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_WVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_WREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_WLAST : OUT STD_LOGIC;
        m_axi_Layer_Weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_ARVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_ARREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RVALID : IN STD_LOGIC;
        m_axi_Layer_Weights_RREADY : OUT STD_LOGIC;
        m_axi_Layer_Weights_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_RLAST : IN STD_LOGIC;
        m_axi_Layer_Weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_Layer_Weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_BVALID : IN STD_LOGIC;
        m_axi_Layer_Weights_BREADY : OUT STD_LOGIC;
        m_axi_Layer_Weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_AWVALID : OUT STD_LOGIC;
        m_axi_Layer_Neurons_AWREADY : IN STD_LOGIC;
        m_axi_Layer_Neurons_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Neurons_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Neurons_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Neurons_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Neurons_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Neurons_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Neurons_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_WVALID : OUT STD_LOGIC;
        m_axi_Layer_Neurons_WREADY : IN STD_LOGIC;
        m_axi_Layer_Neurons_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Neurons_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_WLAST : OUT STD_LOGIC;
        m_axi_Layer_Neurons_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_ARVALID : OUT STD_LOGIC;
        m_axi_Layer_Neurons_ARREADY : IN STD_LOGIC;
        m_axi_Layer_Neurons_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Neurons_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Neurons_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Neurons_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Neurons_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Neurons_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Neurons_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Neurons_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_RVALID : IN STD_LOGIC;
        m_axi_Layer_Neurons_RREADY : OUT STD_LOGIC;
        m_axi_Layer_Neurons_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Neurons_RLAST : IN STD_LOGIC;
        m_axi_Layer_Neurons_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_Layer_Neurons_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Neurons_BVALID : IN STD_LOGIC;
        m_axi_Layer_Neurons_BREADY : OUT STD_LOGIC;
        m_axi_Layer_Neurons_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Neurons_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Neurons_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Layer1_Weights_CPU : IN STD_LOGIC_VECTOR (63 downto 0);
        Layer1_Neurons_CPU : IN STD_LOGIC_VECTOR (63 downto 0);
        Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_we0 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_244_p_ce : OUT STD_LOGIC;
        grp_SIGMOID_fu_244_p_start : OUT STD_LOGIC;
        grp_SIGMOID_fu_244_p_ready : IN STD_LOGIC;
        grp_SIGMOID_fu_244_p_done : IN STD_LOGIC;
        grp_SIGMOID_fu_244_p_idle : IN STD_LOGIC;
        grp_fu_473_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_473_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_ce : OUT STD_LOGIC;
        grp_fu_477_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_lenet_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_Layer_Weights_AWVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_AWREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_WVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_WREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_WLAST : OUT STD_LOGIC;
        m_axi_Layer_Weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_ARVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_ARREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RVALID : IN STD_LOGIC;
        m_axi_Layer_Weights_RREADY : OUT STD_LOGIC;
        m_axi_Layer_Weights_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_RLAST : IN STD_LOGIC;
        m_axi_Layer_Weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_Layer_Weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_BVALID : IN STD_LOGIC;
        m_axi_Layer_Weights_BREADY : OUT STD_LOGIC;
        m_axi_Layer_Weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Layer2_Weights_CPU : IN STD_LOGIC_VECTOR (63 downto 0);
        Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Layer2_Neurons_CPU_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer2_Neurons_CPU_ce1 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Layer3_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Layer3_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer3_Neurons_CPU_we0 : OUT STD_LOGIC;
        Layer3_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_244_p_ce : OUT STD_LOGIC;
        grp_SIGMOID_fu_244_p_start : OUT STD_LOGIC;
        grp_SIGMOID_fu_244_p_ready : IN STD_LOGIC;
        grp_SIGMOID_fu_244_p_done : IN STD_LOGIC;
        grp_SIGMOID_fu_244_p_idle : IN STD_LOGIC;
        grp_fu_473_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_473_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_ce : OUT STD_LOGIC;
        grp_fu_477_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_lenet_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        somme : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_AWVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_AWREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_WVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_WREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_WLAST : OUT STD_LOGIC;
        m_axi_Layer_Weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_ARVALID : OUT STD_LOGIC;
        m_axi_Layer_Weights_ARREADY : IN STD_LOGIC;
        m_axi_Layer_Weights_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_Layer_Weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Layer_Weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Layer_Weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RVALID : IN STD_LOGIC;
        m_axi_Layer_Weights_RREADY : OUT STD_LOGIC;
        m_axi_Layer_Weights_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Layer_Weights_RLAST : IN STD_LOGIC;
        m_axi_Layer_Weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_Layer_Weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_BVALID : IN STD_LOGIC;
        m_axi_Layer_Weights_BREADY : OUT STD_LOGIC;
        m_axi_Layer_Weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Layer_Weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Layer_Weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln75 : IN STD_LOGIC_VECTOR (61 downto 0);
        Layer3_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Layer3_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer3_Neurons_CPU_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        somme_61_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        somme_61_out_ap_vld : OUT STD_LOGIC;
        grp_fu_473_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_473_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_473_p_ce : OUT STD_LOGIC;
        grp_fu_477_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_477_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_lenet_SIGMOID IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_Layer2_Neurons_CPU_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_Layer3_Neurons_CPU_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_CTRL_bus_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component cnn_lenet_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        Layer1_Neurons_CPU : OUT STD_LOGIC_VECTOR (63 downto 0);
        Layer1_Weights_CPU : OUT STD_LOGIC_VECTOR (63 downto 0);
        Layer2_Weights_CPU : OUT STD_LOGIC_VECTOR (63 downto 0);
        Layer3_Weights_CPU : OUT STD_LOGIC_VECTOR (63 downto 0);
        Layer4_Neurons_CPU : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component cnn_lenet_Layer_Neurons_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component cnn_lenet_Layer_Weights_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    Layer2_Neurons_CPU_U : component cnn_lenet_Layer2_Neurons_CPU_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1014,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Layer2_Neurons_CPU_address0,
        ce0 => Layer2_Neurons_CPU_ce0,
        we0 => Layer2_Neurons_CPU_we0,
        d0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_d0,
        q0 => Layer2_Neurons_CPU_q0,
        address1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address1,
        ce1 => Layer2_Neurons_CPU_ce1,
        q1 => Layer2_Neurons_CPU_q1);

    Layer3_Neurons_CPU_U : component cnn_lenet_Layer3_Neurons_CPU_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1250,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Layer3_Neurons_CPU_address0,
        ce0 => Layer3_Neurons_CPU_ce0,
        we0 => Layer3_Neurons_CPU_we0,
        d0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_d0,
        q0 => Layer3_Neurons_CPU_q0);

    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207 : component cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start,
        ap_done => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_done,
        ap_idle => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_idle,
        ap_ready => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_ready,
        m_axi_Layer_Weights_AWVALID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWVALID,
        m_axi_Layer_Weights_AWREADY => ap_const_logic_0,
        m_axi_Layer_Weights_AWADDR => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWADDR,
        m_axi_Layer_Weights_AWID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWID,
        m_axi_Layer_Weights_AWLEN => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWLEN,
        m_axi_Layer_Weights_AWSIZE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWSIZE,
        m_axi_Layer_Weights_AWBURST => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWBURST,
        m_axi_Layer_Weights_AWLOCK => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWLOCK,
        m_axi_Layer_Weights_AWCACHE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWCACHE,
        m_axi_Layer_Weights_AWPROT => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWPROT,
        m_axi_Layer_Weights_AWQOS => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWQOS,
        m_axi_Layer_Weights_AWREGION => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWREGION,
        m_axi_Layer_Weights_AWUSER => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_AWUSER,
        m_axi_Layer_Weights_WVALID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WVALID,
        m_axi_Layer_Weights_WREADY => ap_const_logic_0,
        m_axi_Layer_Weights_WDATA => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WDATA,
        m_axi_Layer_Weights_WSTRB => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WSTRB,
        m_axi_Layer_Weights_WLAST => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WLAST,
        m_axi_Layer_Weights_WID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WID,
        m_axi_Layer_Weights_WUSER => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_WUSER,
        m_axi_Layer_Weights_ARVALID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARVALID,
        m_axi_Layer_Weights_ARREADY => Layer_Weights_ARREADY,
        m_axi_Layer_Weights_ARADDR => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARADDR,
        m_axi_Layer_Weights_ARID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARID,
        m_axi_Layer_Weights_ARLEN => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARLEN,
        m_axi_Layer_Weights_ARSIZE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARSIZE,
        m_axi_Layer_Weights_ARBURST => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARBURST,
        m_axi_Layer_Weights_ARLOCK => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARLOCK,
        m_axi_Layer_Weights_ARCACHE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARCACHE,
        m_axi_Layer_Weights_ARPROT => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARPROT,
        m_axi_Layer_Weights_ARQOS => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARQOS,
        m_axi_Layer_Weights_ARREGION => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARREGION,
        m_axi_Layer_Weights_ARUSER => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARUSER,
        m_axi_Layer_Weights_RVALID => Layer_Weights_RVALID,
        m_axi_Layer_Weights_RREADY => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_RREADY,
        m_axi_Layer_Weights_RDATA => Layer_Weights_RDATA,
        m_axi_Layer_Weights_RLAST => ap_const_logic_0,
        m_axi_Layer_Weights_RID => ap_const_lv1_0,
        m_axi_Layer_Weights_RFIFONUM => Layer_Weights_RFIFONUM,
        m_axi_Layer_Weights_RUSER => ap_const_lv1_0,
        m_axi_Layer_Weights_RRESP => ap_const_lv2_0,
        m_axi_Layer_Weights_BVALID => ap_const_logic_0,
        m_axi_Layer_Weights_BREADY => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_BREADY,
        m_axi_Layer_Weights_BRESP => ap_const_lv2_0,
        m_axi_Layer_Weights_BID => ap_const_lv1_0,
        m_axi_Layer_Weights_BUSER => ap_const_lv1_0,
        m_axi_Layer_Neurons_AWVALID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWVALID,
        m_axi_Layer_Neurons_AWREADY => ap_const_logic_0,
        m_axi_Layer_Neurons_AWADDR => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWADDR,
        m_axi_Layer_Neurons_AWID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWID,
        m_axi_Layer_Neurons_AWLEN => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWLEN,
        m_axi_Layer_Neurons_AWSIZE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWSIZE,
        m_axi_Layer_Neurons_AWBURST => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWBURST,
        m_axi_Layer_Neurons_AWLOCK => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWLOCK,
        m_axi_Layer_Neurons_AWCACHE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWCACHE,
        m_axi_Layer_Neurons_AWPROT => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWPROT,
        m_axi_Layer_Neurons_AWQOS => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWQOS,
        m_axi_Layer_Neurons_AWREGION => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWREGION,
        m_axi_Layer_Neurons_AWUSER => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_AWUSER,
        m_axi_Layer_Neurons_WVALID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WVALID,
        m_axi_Layer_Neurons_WREADY => ap_const_logic_0,
        m_axi_Layer_Neurons_WDATA => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WDATA,
        m_axi_Layer_Neurons_WSTRB => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WSTRB,
        m_axi_Layer_Neurons_WLAST => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WLAST,
        m_axi_Layer_Neurons_WID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WID,
        m_axi_Layer_Neurons_WUSER => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_WUSER,
        m_axi_Layer_Neurons_ARVALID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARVALID,
        m_axi_Layer_Neurons_ARREADY => Layer_Neurons_ARREADY,
        m_axi_Layer_Neurons_ARADDR => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARADDR,
        m_axi_Layer_Neurons_ARID => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARID,
        m_axi_Layer_Neurons_ARLEN => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARLEN,
        m_axi_Layer_Neurons_ARSIZE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARSIZE,
        m_axi_Layer_Neurons_ARBURST => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARBURST,
        m_axi_Layer_Neurons_ARLOCK => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARLOCK,
        m_axi_Layer_Neurons_ARCACHE => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARCACHE,
        m_axi_Layer_Neurons_ARPROT => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARPROT,
        m_axi_Layer_Neurons_ARQOS => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARQOS,
        m_axi_Layer_Neurons_ARREGION => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARREGION,
        m_axi_Layer_Neurons_ARUSER => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARUSER,
        m_axi_Layer_Neurons_RVALID => Layer_Neurons_RVALID,
        m_axi_Layer_Neurons_RREADY => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_RREADY,
        m_axi_Layer_Neurons_RDATA => Layer_Neurons_RDATA,
        m_axi_Layer_Neurons_RLAST => ap_const_logic_0,
        m_axi_Layer_Neurons_RID => ap_const_lv1_0,
        m_axi_Layer_Neurons_RFIFONUM => Layer_Neurons_RFIFONUM,
        m_axi_Layer_Neurons_RUSER => ap_const_lv1_0,
        m_axi_Layer_Neurons_RRESP => ap_const_lv2_0,
        m_axi_Layer_Neurons_BVALID => ap_const_logic_0,
        m_axi_Layer_Neurons_BREADY => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_BREADY,
        m_axi_Layer_Neurons_BRESP => ap_const_lv2_0,
        m_axi_Layer_Neurons_BID => ap_const_lv1_0,
        m_axi_Layer_Neurons_BUSER => ap_const_lv1_0,
        Layer1_Weights_CPU => Layer1_Weights_CPU_read_reg_416,
        Layer1_Neurons_CPU => Layer1_Neurons_CPU_read_reg_421,
        Layer2_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_we0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_we0,
        Layer2_Neurons_CPU_d0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_d0,
        grp_SIGMOID_fu_244_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_din1,
        grp_SIGMOID_fu_244_p_dout0 => grp_SIGMOID_fu_244_ap_return,
        grp_SIGMOID_fu_244_p_ce => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_ce,
        grp_SIGMOID_fu_244_p_start => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_start,
        grp_SIGMOID_fu_244_p_ready => grp_SIGMOID_fu_244_ap_ready,
        grp_SIGMOID_fu_244_p_done => grp_SIGMOID_fu_244_ap_done,
        grp_SIGMOID_fu_244_p_idle => grp_SIGMOID_fu_244_ap_idle,
        grp_fu_473_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din0,
        grp_fu_473_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din1,
        grp_fu_473_p_opcode => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_opcode,
        grp_fu_473_p_dout0 => grp_fu_473_p2,
        grp_fu_473_p_ce => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_ce,
        grp_fu_477_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din0,
        grp_fu_477_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din1,
        grp_fu_477_p_dout0 => grp_fu_477_p2,
        grp_fu_477_p_ce => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_ce);

    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223 : component cnn_lenet_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start,
        ap_done => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_done,
        ap_idle => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_idle,
        ap_ready => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_ready,
        m_axi_Layer_Weights_AWVALID => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWVALID,
        m_axi_Layer_Weights_AWREADY => ap_const_logic_0,
        m_axi_Layer_Weights_AWADDR => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWADDR,
        m_axi_Layer_Weights_AWID => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWID,
        m_axi_Layer_Weights_AWLEN => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWLEN,
        m_axi_Layer_Weights_AWSIZE => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWSIZE,
        m_axi_Layer_Weights_AWBURST => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWBURST,
        m_axi_Layer_Weights_AWLOCK => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWLOCK,
        m_axi_Layer_Weights_AWCACHE => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWCACHE,
        m_axi_Layer_Weights_AWPROT => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWPROT,
        m_axi_Layer_Weights_AWQOS => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWQOS,
        m_axi_Layer_Weights_AWREGION => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWREGION,
        m_axi_Layer_Weights_AWUSER => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_AWUSER,
        m_axi_Layer_Weights_WVALID => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WVALID,
        m_axi_Layer_Weights_WREADY => ap_const_logic_0,
        m_axi_Layer_Weights_WDATA => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WDATA,
        m_axi_Layer_Weights_WSTRB => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WSTRB,
        m_axi_Layer_Weights_WLAST => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WLAST,
        m_axi_Layer_Weights_WID => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WID,
        m_axi_Layer_Weights_WUSER => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_WUSER,
        m_axi_Layer_Weights_ARVALID => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARVALID,
        m_axi_Layer_Weights_ARREADY => Layer_Weights_ARREADY,
        m_axi_Layer_Weights_ARADDR => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARADDR,
        m_axi_Layer_Weights_ARID => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARID,
        m_axi_Layer_Weights_ARLEN => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARLEN,
        m_axi_Layer_Weights_ARSIZE => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARSIZE,
        m_axi_Layer_Weights_ARBURST => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARBURST,
        m_axi_Layer_Weights_ARLOCK => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARLOCK,
        m_axi_Layer_Weights_ARCACHE => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARCACHE,
        m_axi_Layer_Weights_ARPROT => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARPROT,
        m_axi_Layer_Weights_ARQOS => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARQOS,
        m_axi_Layer_Weights_ARREGION => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARREGION,
        m_axi_Layer_Weights_ARUSER => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARUSER,
        m_axi_Layer_Weights_RVALID => Layer_Weights_RVALID,
        m_axi_Layer_Weights_RREADY => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_RREADY,
        m_axi_Layer_Weights_RDATA => Layer_Weights_RDATA,
        m_axi_Layer_Weights_RLAST => ap_const_logic_0,
        m_axi_Layer_Weights_RID => ap_const_lv1_0,
        m_axi_Layer_Weights_RFIFONUM => Layer_Weights_RFIFONUM,
        m_axi_Layer_Weights_RUSER => ap_const_lv1_0,
        m_axi_Layer_Weights_RRESP => ap_const_lv2_0,
        m_axi_Layer_Weights_BVALID => ap_const_logic_0,
        m_axi_Layer_Weights_BREADY => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_BREADY,
        m_axi_Layer_Weights_BRESP => ap_const_lv2_0,
        m_axi_Layer_Weights_BID => ap_const_lv1_0,
        m_axi_Layer_Weights_BUSER => ap_const_lv1_0,
        Layer2_Weights_CPU => Layer2_Weights_CPU_read_reg_411,
        Layer2_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_q0 => Layer2_Neurons_CPU_q0,
        Layer2_Neurons_CPU_address1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address1,
        Layer2_Neurons_CPU_ce1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce1,
        Layer2_Neurons_CPU_q1 => Layer2_Neurons_CPU_q1,
        Layer3_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_address0,
        Layer3_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_ce0,
        Layer3_Neurons_CPU_we0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_we0,
        Layer3_Neurons_CPU_d0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_d0,
        grp_SIGMOID_fu_244_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_din1,
        grp_SIGMOID_fu_244_p_dout0 => grp_SIGMOID_fu_244_ap_return,
        grp_SIGMOID_fu_244_p_ce => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_ce,
        grp_SIGMOID_fu_244_p_start => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_start,
        grp_SIGMOID_fu_244_p_ready => grp_SIGMOID_fu_244_ap_ready,
        grp_SIGMOID_fu_244_p_done => grp_SIGMOID_fu_244_ap_done,
        grp_SIGMOID_fu_244_p_idle => grp_SIGMOID_fu_244_ap_idle,
        grp_fu_473_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din0,
        grp_fu_473_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din1,
        grp_fu_473_p_opcode => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_opcode,
        grp_fu_473_p_dout0 => grp_fu_473_p2,
        grp_fu_473_p_ce => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_ce,
        grp_fu_477_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din0,
        grp_fu_477_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din1,
        grp_fu_477_p_dout0 => grp_fu_477_p2,
        grp_fu_477_p_ce => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_ce);

    grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234 : component cnn_lenet_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start,
        ap_done => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_done,
        ap_idle => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_idle,
        ap_ready => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_ready,
        somme => somme_reg_463,
        m_axi_Layer_Weights_AWVALID => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWVALID,
        m_axi_Layer_Weights_AWREADY => ap_const_logic_0,
        m_axi_Layer_Weights_AWADDR => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWADDR,
        m_axi_Layer_Weights_AWID => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWID,
        m_axi_Layer_Weights_AWLEN => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWLEN,
        m_axi_Layer_Weights_AWSIZE => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWSIZE,
        m_axi_Layer_Weights_AWBURST => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWBURST,
        m_axi_Layer_Weights_AWLOCK => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWLOCK,
        m_axi_Layer_Weights_AWCACHE => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWCACHE,
        m_axi_Layer_Weights_AWPROT => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWPROT,
        m_axi_Layer_Weights_AWQOS => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWQOS,
        m_axi_Layer_Weights_AWREGION => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWREGION,
        m_axi_Layer_Weights_AWUSER => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_AWUSER,
        m_axi_Layer_Weights_WVALID => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WVALID,
        m_axi_Layer_Weights_WREADY => ap_const_logic_0,
        m_axi_Layer_Weights_WDATA => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WDATA,
        m_axi_Layer_Weights_WSTRB => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WSTRB,
        m_axi_Layer_Weights_WLAST => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WLAST,
        m_axi_Layer_Weights_WID => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WID,
        m_axi_Layer_Weights_WUSER => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_WUSER,
        m_axi_Layer_Weights_ARVALID => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARVALID,
        m_axi_Layer_Weights_ARREADY => Layer_Weights_ARREADY,
        m_axi_Layer_Weights_ARADDR => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARADDR,
        m_axi_Layer_Weights_ARID => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARID,
        m_axi_Layer_Weights_ARLEN => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARLEN,
        m_axi_Layer_Weights_ARSIZE => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARSIZE,
        m_axi_Layer_Weights_ARBURST => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARBURST,
        m_axi_Layer_Weights_ARLOCK => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARLOCK,
        m_axi_Layer_Weights_ARCACHE => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARCACHE,
        m_axi_Layer_Weights_ARPROT => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARPROT,
        m_axi_Layer_Weights_ARQOS => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARQOS,
        m_axi_Layer_Weights_ARREGION => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARREGION,
        m_axi_Layer_Weights_ARUSER => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARUSER,
        m_axi_Layer_Weights_RVALID => Layer_Weights_RVALID,
        m_axi_Layer_Weights_RREADY => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_RREADY,
        m_axi_Layer_Weights_RDATA => Layer_Weights_RDATA,
        m_axi_Layer_Weights_RLAST => ap_const_logic_0,
        m_axi_Layer_Weights_RID => ap_const_lv1_0,
        m_axi_Layer_Weights_RFIFONUM => Layer_Weights_RFIFONUM,
        m_axi_Layer_Weights_RUSER => ap_const_lv1_0,
        m_axi_Layer_Weights_RRESP => ap_const_lv2_0,
        m_axi_Layer_Weights_BVALID => ap_const_logic_0,
        m_axi_Layer_Weights_BREADY => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_BREADY,
        m_axi_Layer_Weights_BRESP => ap_const_lv2_0,
        m_axi_Layer_Weights_BID => ap_const_lv1_0,
        m_axi_Layer_Weights_BUSER => ap_const_lv1_0,
        sext_ln75 => trunc_ln4_reg_447,
        Layer3_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_address0,
        Layer3_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_ce0,
        Layer3_Neurons_CPU_q0 => Layer3_Neurons_CPU_q0,
        somme_61_out => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_somme_61_out,
        somme_61_out_ap_vld => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_somme_61_out_ap_vld,
        grp_fu_473_p_din0 => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din0,
        grp_fu_473_p_din1 => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din1,
        grp_fu_473_p_opcode => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_opcode,
        grp_fu_473_p_dout0 => grp_fu_473_p2,
        grp_fu_473_p_ce => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_ce,
        grp_fu_477_p_din0 => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din0,
        grp_fu_477_p_din1 => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din1,
        grp_fu_477_p_dout0 => grp_fu_477_p2,
        grp_fu_477_p_ce => grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_ce);

    grp_SIGMOID_fu_244 : component cnn_lenet_SIGMOID
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_SIGMOID_fu_244_ap_start,
        ap_done => grp_SIGMOID_fu_244_ap_done,
        ap_idle => grp_SIGMOID_fu_244_ap_idle,
        ap_ready => grp_SIGMOID_fu_244_ap_ready,
        ap_ce => grp_SIGMOID_fu_244_ap_ce,
        x => grp_SIGMOID_fu_244_x,
        ap_return => grp_SIGMOID_fu_244_ap_return);

    CTRL_bus_s_axi_U : component cnn_lenet_CTRL_bus_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_bus_AWVALID,
        AWREADY => s_axi_CTRL_bus_AWREADY,
        AWADDR => s_axi_CTRL_bus_AWADDR,
        WVALID => s_axi_CTRL_bus_WVALID,
        WREADY => s_axi_CTRL_bus_WREADY,
        WDATA => s_axi_CTRL_bus_WDATA,
        WSTRB => s_axi_CTRL_bus_WSTRB,
        ARVALID => s_axi_CTRL_bus_ARVALID,
        ARREADY => s_axi_CTRL_bus_ARREADY,
        ARADDR => s_axi_CTRL_bus_ARADDR,
        RVALID => s_axi_CTRL_bus_RVALID,
        RREADY => s_axi_CTRL_bus_RREADY,
        RDATA => s_axi_CTRL_bus_RDATA,
        RRESP => s_axi_CTRL_bus_RRESP,
        BVALID => s_axi_CTRL_bus_BVALID,
        BREADY => s_axi_CTRL_bus_BREADY,
        BRESP => s_axi_CTRL_bus_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    control_s_axi_U : component cnn_lenet_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        Layer1_Neurons_CPU => Layer1_Neurons_CPU,
        Layer1_Weights_CPU => Layer1_Weights_CPU,
        Layer2_Weights_CPU => Layer2_Weights_CPU,
        Layer3_Weights_CPU => Layer3_Weights_CPU,
        Layer4_Neurons_CPU => Layer4_Neurons_CPU);

    Layer_Neurons_m_axi_U : component cnn_lenet_Layer_Neurons_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_LAYER_NEURONS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_LAYER_NEURONS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_LAYER_NEURONS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_LAYER_NEURONS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_LAYER_NEURONS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_LAYER_NEURONS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_LAYER_NEURONS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_LAYER_NEURONS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_LAYER_NEURONS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_LAYER_NEURONS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_LAYER_NEURONS_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_Layer_Neurons_AWVALID,
        AWREADY => m_axi_Layer_Neurons_AWREADY,
        AWADDR => m_axi_Layer_Neurons_AWADDR,
        AWID => m_axi_Layer_Neurons_AWID,
        AWLEN => m_axi_Layer_Neurons_AWLEN,
        AWSIZE => m_axi_Layer_Neurons_AWSIZE,
        AWBURST => m_axi_Layer_Neurons_AWBURST,
        AWLOCK => m_axi_Layer_Neurons_AWLOCK,
        AWCACHE => m_axi_Layer_Neurons_AWCACHE,
        AWPROT => m_axi_Layer_Neurons_AWPROT,
        AWQOS => m_axi_Layer_Neurons_AWQOS,
        AWREGION => m_axi_Layer_Neurons_AWREGION,
        AWUSER => m_axi_Layer_Neurons_AWUSER,
        WVALID => m_axi_Layer_Neurons_WVALID,
        WREADY => m_axi_Layer_Neurons_WREADY,
        WDATA => m_axi_Layer_Neurons_WDATA,
        WSTRB => m_axi_Layer_Neurons_WSTRB,
        WLAST => m_axi_Layer_Neurons_WLAST,
        WID => m_axi_Layer_Neurons_WID,
        WUSER => m_axi_Layer_Neurons_WUSER,
        ARVALID => m_axi_Layer_Neurons_ARVALID,
        ARREADY => m_axi_Layer_Neurons_ARREADY,
        ARADDR => m_axi_Layer_Neurons_ARADDR,
        ARID => m_axi_Layer_Neurons_ARID,
        ARLEN => m_axi_Layer_Neurons_ARLEN,
        ARSIZE => m_axi_Layer_Neurons_ARSIZE,
        ARBURST => m_axi_Layer_Neurons_ARBURST,
        ARLOCK => m_axi_Layer_Neurons_ARLOCK,
        ARCACHE => m_axi_Layer_Neurons_ARCACHE,
        ARPROT => m_axi_Layer_Neurons_ARPROT,
        ARQOS => m_axi_Layer_Neurons_ARQOS,
        ARREGION => m_axi_Layer_Neurons_ARREGION,
        ARUSER => m_axi_Layer_Neurons_ARUSER,
        RVALID => m_axi_Layer_Neurons_RVALID,
        RREADY => m_axi_Layer_Neurons_RREADY,
        RDATA => m_axi_Layer_Neurons_RDATA,
        RLAST => m_axi_Layer_Neurons_RLAST,
        RID => m_axi_Layer_Neurons_RID,
        RUSER => m_axi_Layer_Neurons_RUSER,
        RRESP => m_axi_Layer_Neurons_RRESP,
        BVALID => m_axi_Layer_Neurons_BVALID,
        BREADY => m_axi_Layer_Neurons_BREADY,
        BRESP => m_axi_Layer_Neurons_BRESP,
        BID => m_axi_Layer_Neurons_BID,
        BUSER => m_axi_Layer_Neurons_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Layer_Neurons_ARVALID,
        I_ARREADY => Layer_Neurons_ARREADY,
        I_ARADDR => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARADDR,
        I_ARLEN => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARLEN,
        I_RVALID => Layer_Neurons_RVALID,
        I_RREADY => Layer_Neurons_RREADY,
        I_RDATA => Layer_Neurons_RDATA,
        I_RFIFONUM => Layer_Neurons_RFIFONUM,
        I_AWVALID => Layer_Neurons_AWVALID,
        I_AWREADY => Layer_Neurons_AWREADY,
        I_AWADDR => Layer_Neurons_addr_reg_432,
        I_AWLEN => ap_const_lv32_64,
        I_WVALID => Layer_Neurons_WVALID,
        I_WREADY => Layer_Neurons_WREADY,
        I_WDATA => Layer_Neurons_WDATA,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => Layer_Neurons_BVALID,
        I_BREADY => Layer_Neurons_BREADY);

    Layer_Weights_m_axi_U : component cnn_lenet_Layer_Weights_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_LAYER_WEIGHTS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_LAYER_WEIGHTS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_LAYER_WEIGHTS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_LAYER_WEIGHTS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_LAYER_WEIGHTS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_LAYER_WEIGHTS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_LAYER_WEIGHTS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_LAYER_WEIGHTS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_LAYER_WEIGHTS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_LAYER_WEIGHTS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_LAYER_WEIGHTS_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_Layer_Weights_AWVALID,
        AWREADY => m_axi_Layer_Weights_AWREADY,
        AWADDR => m_axi_Layer_Weights_AWADDR,
        AWID => m_axi_Layer_Weights_AWID,
        AWLEN => m_axi_Layer_Weights_AWLEN,
        AWSIZE => m_axi_Layer_Weights_AWSIZE,
        AWBURST => m_axi_Layer_Weights_AWBURST,
        AWLOCK => m_axi_Layer_Weights_AWLOCK,
        AWCACHE => m_axi_Layer_Weights_AWCACHE,
        AWPROT => m_axi_Layer_Weights_AWPROT,
        AWQOS => m_axi_Layer_Weights_AWQOS,
        AWREGION => m_axi_Layer_Weights_AWREGION,
        AWUSER => m_axi_Layer_Weights_AWUSER,
        WVALID => m_axi_Layer_Weights_WVALID,
        WREADY => m_axi_Layer_Weights_WREADY,
        WDATA => m_axi_Layer_Weights_WDATA,
        WSTRB => m_axi_Layer_Weights_WSTRB,
        WLAST => m_axi_Layer_Weights_WLAST,
        WID => m_axi_Layer_Weights_WID,
        WUSER => m_axi_Layer_Weights_WUSER,
        ARVALID => m_axi_Layer_Weights_ARVALID,
        ARREADY => m_axi_Layer_Weights_ARREADY,
        ARADDR => m_axi_Layer_Weights_ARADDR,
        ARID => m_axi_Layer_Weights_ARID,
        ARLEN => m_axi_Layer_Weights_ARLEN,
        ARSIZE => m_axi_Layer_Weights_ARSIZE,
        ARBURST => m_axi_Layer_Weights_ARBURST,
        ARLOCK => m_axi_Layer_Weights_ARLOCK,
        ARCACHE => m_axi_Layer_Weights_ARCACHE,
        ARPROT => m_axi_Layer_Weights_ARPROT,
        ARQOS => m_axi_Layer_Weights_ARQOS,
        ARREGION => m_axi_Layer_Weights_ARREGION,
        ARUSER => m_axi_Layer_Weights_ARUSER,
        RVALID => m_axi_Layer_Weights_RVALID,
        RREADY => m_axi_Layer_Weights_RREADY,
        RDATA => m_axi_Layer_Weights_RDATA,
        RLAST => m_axi_Layer_Weights_RLAST,
        RID => m_axi_Layer_Weights_RID,
        RUSER => m_axi_Layer_Weights_RUSER,
        RRESP => m_axi_Layer_Weights_RRESP,
        BVALID => m_axi_Layer_Weights_BVALID,
        BREADY => m_axi_Layer_Weights_BREADY,
        BRESP => m_axi_Layer_Weights_BRESP,
        BID => m_axi_Layer_Weights_BID,
        BUSER => m_axi_Layer_Weights_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Layer_Weights_ARVALID,
        I_ARREADY => Layer_Weights_ARREADY,
        I_ARADDR => Layer_Weights_ARADDR,
        I_ARLEN => Layer_Weights_ARLEN,
        I_RVALID => Layer_Weights_RVALID,
        I_RREADY => Layer_Weights_RREADY,
        I_RDATA => Layer_Weights_RDATA,
        I_RFIFONUM => Layer_Weights_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => Layer_Weights_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => Layer_Weights_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => Layer_Weights_BVALID,
        I_BREADY => ap_const_logic_0);

    fadd_32ns_32ns_32_4_full_dsp_1_U46 : component cnn_lenet_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_473_p0,
        din1 => grp_fu_473_p1,
        ce => grp_fu_473_ce,
        dout => grp_fu_473_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U47 : component cnn_lenet_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_477_p0,
        din1 => grp_fu_477_p1,
        ce => grp_fu_477_ce,
        dout => grp_fu_477_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_SIGMOID_fu_244_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_SIGMOID_fu_244_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state17) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_SIGMOID_fu_244_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_SIGMOID_fu_244_ap_ready = ap_const_logic_1)) then 
                    grp_SIGMOID_fu_244_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = Layer_Neurons_AWREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_126 <= ap_const_lv7_0;
            elsif (((icmp_ln73_fu_293_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_fu_126 <= add_ln73_fu_299_p2;
            end if; 
        end if;
    end process;

    phi_mul_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_fu_122 <= ap_const_lv19_0;
            elsif (((icmp_ln73_fu_293_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_mul_fu_122 <= add_ln73_1_fu_287_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                Layer1_Neurons_CPU_read_reg_421 <= Layer1_Neurons_CPU;
                Layer1_Weights_CPU_read_reg_416 <= Layer1_Weights_CPU;
                Layer2_Weights_CPU_read_reg_411 <= Layer2_Weights_CPU;
                Layer3_Weights_CPU_read_reg_405 <= Layer3_Weights_CPU;
                Layer_Neurons_addr_reg_432 <= sext_ln73_fu_261_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                Layer_Weights_addr_2_read_reg_458 <= Layer_Weights_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                Layer_Weights_addr_2_reg_441 <= sext_ln74_fu_339_p1;
                trunc_ln4_reg_447 <= add_ln74_1_fu_319_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                somme_reg_463 <= somme_fu_379_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                tmp_1_reg_468 <= grp_SIGMOID_fu_244_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state27, ap_CS_fsm_state32, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state7, ap_CS_fsm_state5, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_done, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_done, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_done, Layer_Neurons_AWREADY, Layer_Neurons_WREADY, Layer_Neurons_BVALID, Layer_Weights_ARREADY, Layer_Weights_RVALID, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, icmp_ln73_fu_293_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = Layer_Neurons_AWREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln73_fu_293_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = Layer_Weights_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = Layer_Neurons_WREADY) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = Layer_Neurons_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Layer2_Neurons_CPU_address0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_address0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer2_Neurons_CPU_address0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Layer2_Neurons_CPU_address0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_address0;
        else 
            Layer2_Neurons_CPU_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    Layer2_Neurons_CPU_ce0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_ce0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer2_Neurons_CPU_ce0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Layer2_Neurons_CPU_ce0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_ce0;
        else 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Layer2_Neurons_CPU_ce1_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer2_Neurons_CPU_ce1 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer2_Neurons_CPU_ce1;
        else 
            Layer2_Neurons_CPU_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Layer2_Neurons_CPU_we0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Layer2_Neurons_CPU_we0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_Layer2_Neurons_CPU_we0;
        else 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Layer3_Neurons_CPU_address0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_address0, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_address0, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            Layer3_Neurons_CPU_address0 <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer3_Neurons_CPU_address0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_address0;
        else 
            Layer3_Neurons_CPU_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Layer3_Neurons_CPU_ce0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_ce0, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_ce0, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            Layer3_Neurons_CPU_ce0 <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_Layer3_Neurons_CPU_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer3_Neurons_CPU_ce0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_ce0;
        else 
            Layer3_Neurons_CPU_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Layer3_Neurons_CPU_we0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer3_Neurons_CPU_we0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_Layer3_Neurons_CPU_we0;
        else 
            Layer3_Neurons_CPU_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Neurons_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Layer_Neurons_ARVALID <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_ARVALID;
        else 
            Layer_Neurons_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Neurons_AWVALID_assign_proc : process(ap_CS_fsm_state3, Layer_Neurons_AWREADY)
    begin
        if (((ap_const_logic_1 = Layer_Neurons_AWREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            Layer_Neurons_AWVALID <= ap_const_logic_1;
        else 
            Layer_Neurons_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Neurons_BREADY_assign_proc : process(ap_CS_fsm_state32, Layer_Neurons_BVALID)
    begin
        if (((ap_const_logic_1 = Layer_Neurons_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            Layer_Neurons_BREADY <= ap_const_logic_1;
        else 
            Layer_Neurons_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Neurons_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Layer_Neurons_RREADY <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Neurons_RREADY;
        else 
            Layer_Neurons_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    Layer_Neurons_WDATA <= tmp_1_reg_468;

    Layer_Neurons_WVALID_assign_proc : process(ap_CS_fsm_state27, Layer_Neurons_WREADY)
    begin
        if (((ap_const_logic_1 = Layer_Neurons_WREADY) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            Layer_Neurons_WVALID <= ap_const_logic_1;
        else 
            Layer_Neurons_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Neurons_blk_n_AW_assign_proc : process(m_axi_Layer_Neurons_AWREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            Layer_Neurons_blk_n_AW <= m_axi_Layer_Neurons_AWREADY;
        else 
            Layer_Neurons_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Neurons_blk_n_B_assign_proc : process(m_axi_Layer_Neurons_BVALID, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            Layer_Neurons_blk_n_B <= m_axi_Layer_Neurons_BVALID;
        else 
            Layer_Neurons_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Neurons_blk_n_W_assign_proc : process(m_axi_Layer_Neurons_WREADY, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            Layer_Neurons_blk_n_W <= m_axi_Layer_Neurons_WREADY;
        else 
            Layer_Neurons_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Weights_ARADDR_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state7, Layer_Weights_addr_2_reg_441, ap_CS_fsm_state15, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARADDR, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARADDR, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARADDR, Layer_Weights_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, sext_ln75_fu_369_p1)
    begin
        if (((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Layer_Weights_ARADDR <= sext_ln75_fu_369_p1;
        elsif (((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            Layer_Weights_ARADDR <= Layer_Weights_addr_2_reg_441;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            Layer_Weights_ARADDR <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            Layer_Weights_ARADDR <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Layer_Weights_ARADDR <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARADDR;
        else 
            Layer_Weights_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Layer_Weights_ARLEN_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state15, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARLEN, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARLEN, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARLEN, Layer_Weights_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Layer_Weights_ARLEN <= ap_const_lv32_4E2;
        elsif (((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            Layer_Weights_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            Layer_Weights_ARLEN <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            Layer_Weights_ARLEN <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Layer_Weights_ARLEN <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARLEN;
        else 
            Layer_Weights_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Layer_Weights_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state15, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARVALID, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARVALID, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARVALID, Layer_Weights_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = Layer_Weights_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            Layer_Weights_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            Layer_Weights_ARVALID <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            Layer_Weights_ARVALID <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Layer_Weights_ARVALID <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_ARVALID;
        else 
            Layer_Weights_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Weights_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state14, ap_CS_fsm_state15, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_RREADY, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_RREADY, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_RREADY, Layer_Weights_RVALID, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = Layer_Weights_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            Layer_Weights_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            Layer_Weights_RREADY <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_m_axi_Layer_Weights_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            Layer_Weights_RREADY <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_m_axi_Layer_Weights_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            Layer_Weights_RREADY <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_m_axi_Layer_Weights_RREADY;
        else 
            Layer_Weights_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Weights_blk_n_AR_assign_proc : process(m_axi_Layer_Weights_ARREADY, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            Layer_Weights_blk_n_AR <= m_axi_Layer_Weights_ARREADY;
        else 
            Layer_Weights_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Weights_blk_n_R_assign_proc : process(m_axi_Layer_Weights_RVALID, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Layer_Weights_blk_n_R <= m_axi_Layer_Weights_RVALID;
        else 
            Layer_Weights_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    add_ln73_1_fu_287_p2 <= std_logic_vector(unsigned(phi_mul_fu_122) + unsigned(ap_const_lv19_138C));
    add_ln73_fu_299_p2 <= std_logic_vector(unsigned(i_fu_126) + unsigned(ap_const_lv7_1));
    add_ln74_1_fu_319_p2 <= std_logic_vector(unsigned(zext_ln74_1_fu_315_p1) + unsigned(Layer3_Weights_CPU_read_reg_405));
    add_ln74_2_fu_324_p2 <= std_logic_vector(unsigned(zext_ln74_fu_305_p1) + unsigned(Layer3_Weights_CPU_read_reg_405));
    add_ln74_fu_309_p2 <= std_logic_vector(unsigned(phi_mul_fu_122) + unsigned(ap_const_lv19_4));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_NS_fsm_state17 <= ap_NS_fsm(16);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(Layer_Weights_RVALID)
    begin
        if ((ap_const_logic_0 = Layer_Weights_RVALID)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_done)
    begin
        if ((grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(Layer_Neurons_WREADY)
    begin
        if ((ap_const_logic_0 = Layer_Neurons_WREADY)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_done)
    begin
        if ((grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(Layer_Neurons_BVALID)
    begin
        if ((ap_const_logic_0 = Layer_Neurons_BVALID)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(Layer_Neurons_AWREADY)
    begin
        if ((ap_const_logic_0 = Layer_Neurons_AWREADY)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_done)
    begin
        if ((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(Layer_Weights_ARREADY)
    begin
        if ((ap_const_logic_0 = Layer_Weights_ARREADY)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(Layer_Weights_ARREADY)
    begin
        if ((ap_const_logic_0 = Layer_Weights_ARREADY)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state32, Layer_Neurons_BVALID)
    begin
        if (((ap_const_logic_1 = Layer_Neurons_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state32, Layer_Neurons_BVALID)
    begin
        if (((ap_const_logic_1 = Layer_Neurons_BVALID) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_SIGMOID_fu_244_ap_ce_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_ce, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_SIGMOID_fu_244_ap_ce <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_SIGMOID_fu_244_ap_ce <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_ce;
        else 
            grp_SIGMOID_fu_244_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_SIGMOID_fu_244_ap_start_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_start, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_start, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_SIGMOID_fu_244_ap_start_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_SIGMOID_fu_244_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_SIGMOID_fu_244_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_start;
        else 
            grp_SIGMOID_fu_244_ap_start <= grp_SIGMOID_fu_244_ap_start_reg;
        end if; 
    end process;


    grp_SIGMOID_fu_244_x_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_din1, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_din1, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_somme_61_out, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_SIGMOID_fu_244_x <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_SIGMOID_fu_244_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_SIGMOID_fu_244_x <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_SIGMOID_fu_244_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_SIGMOID_fu_244_x <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_somme_61_out;
        else 
            grp_SIGMOID_fu_244_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_ap_start_reg;
    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_ap_start_reg;
    grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_ap_start_reg;

    grp_fu_473_ce_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_ce, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_ce, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_473_ce <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_473_ce <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_473_ce <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_ce;
        else 
            grp_fu_473_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_473_p0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din0, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_473_p0 <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_473_p0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_473_p0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din0;
        else 
            grp_fu_473_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_473_p1_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din1, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din1, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_473_p1 <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_473_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_473_p1 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_473_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_473_p1 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_473_p_din1;
        else 
            grp_fu_473_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_477_ce_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_ce, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_ce, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_477_ce <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_477_ce <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_477_ce <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_ce;
        else 
            grp_fu_477_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_477_p0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din0, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_477_p0 <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_477_p0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_477_p0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din0;
        else 
            grp_fu_477_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_477_p1_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din1, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din1, grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_477_p1 <= grp_cnn_lenet_Pipeline_col_loop2_kernelRow_Loop2_kernelCol_loop2_fu_234_grp_fu_477_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_477_p1 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_223_grp_fu_477_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_477_p1 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_207_grp_fu_477_p_din1;
        else 
            grp_fu_477_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln73_fu_293_p2 <= "1" when (i_fu_126 = ap_const_lv7_64) else "0";
        sext_ln73_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_251_p4),64));

        sext_ln74_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_329_p4),64));

        sext_ln75_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_447),64));

    somme_fu_379_p1 <= Layer_Weights_addr_2_read_reg_458;
    trunc_ln3_fu_329_p4 <= add_ln74_2_fu_324_p2(63 downto 2);
    trunc_ln_fu_251_p4 <= Layer4_Neurons_CPU(63 downto 2);
    zext_ln74_1_fu_315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln74_fu_309_p2),64));
    zext_ln74_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_fu_122),64));
end behav;
