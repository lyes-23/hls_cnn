-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_Layer_Weights_AWVALID : OUT STD_LOGIC;
    m_axi_Layer_Weights_AWREADY : IN STD_LOGIC;
    m_axi_Layer_Weights_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_Layer_Weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_WVALID : OUT STD_LOGIC;
    m_axi_Layer_Weights_WREADY : IN STD_LOGIC;
    m_axi_Layer_Weights_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Weights_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_WLAST : OUT STD_LOGIC;
    m_axi_Layer_Weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_ARVALID : OUT STD_LOGIC;
    m_axi_Layer_Weights_ARREADY : IN STD_LOGIC;
    m_axi_Layer_Weights_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_Layer_Weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_RVALID : IN STD_LOGIC;
    m_axi_Layer_Weights_RREADY : OUT STD_LOGIC;
    m_axi_Layer_Weights_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Weights_RLAST : IN STD_LOGIC;
    m_axi_Layer_Weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_Layer_Weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_BVALID : IN STD_LOGIC;
    m_axi_Layer_Weights_BREADY : OUT STD_LOGIC;
    m_axi_Layer_Weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_AWVALID : OUT STD_LOGIC;
    m_axi_Layer_Neurons_AWREADY : IN STD_LOGIC;
    m_axi_Layer_Neurons_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_Layer_Neurons_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Neurons_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_WVALID : OUT STD_LOGIC;
    m_axi_Layer_Neurons_WREADY : IN STD_LOGIC;
    m_axi_Layer_Neurons_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Neurons_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_WLAST : OUT STD_LOGIC;
    m_axi_Layer_Neurons_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_ARVALID : OUT STD_LOGIC;
    m_axi_Layer_Neurons_ARREADY : IN STD_LOGIC;
    m_axi_Layer_Neurons_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_Layer_Neurons_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Neurons_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_Layer_Neurons_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_Layer_Neurons_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_RVALID : IN STD_LOGIC;
    m_axi_Layer_Neurons_RREADY : OUT STD_LOGIC;
    m_axi_Layer_Neurons_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_Layer_Neurons_RLAST : IN STD_LOGIC;
    m_axi_Layer_Neurons_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_Layer_Neurons_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_BVALID : IN STD_LOGIC;
    m_axi_Layer_Neurons_BREADY : OUT STD_LOGIC;
    m_axi_Layer_Neurons_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_Layer_Neurons_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_Layer_Neurons_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Layer1_Weights_CPU : IN STD_LOGIC_VECTOR (63 downto 0);
    Layer1_Neurons_CPU : IN STD_LOGIC_VECTOR (63 downto 0);
    Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
    Layer2_Neurons_CPU_we0 : OUT STD_LOGIC;
    Layer2_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_SIGMOID_fu_244_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_SIGMOID_fu_244_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_SIGMOID_fu_244_p_ce : OUT STD_LOGIC;
    grp_SIGMOID_fu_244_p_start : OUT STD_LOGIC;
    grp_SIGMOID_fu_244_p_ready : IN STD_LOGIC;
    grp_SIGMOID_fu_244_p_done : IN STD_LOGIC;
    grp_SIGMOID_fu_244_p_idle : IN STD_LOGIC;
    grp_fu_473_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_473_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_473_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_473_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_473_p_ce : OUT STD_LOGIC;
    grp_fu_477_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_477_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_477_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_477_p_ce : OUT STD_LOGIC );
end;


architecture behav of cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (25 downto 0) := "00000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (25 downto 0) := "00000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (25 downto 0) := "00000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (25 downto 0) := "00000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (25 downto 0) := "00001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (25 downto 0) := "00010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (25 downto 0) := "00100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (25 downto 0) := "01000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (25 downto 0) := "10000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3F6 : STD_LOGIC_VECTOR (9 downto 0) := "1111110110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_68 : STD_LOGIC_VECTOR (9 downto 0) := "0001101000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_3A : STD_LOGIC_VECTOR (9 downto 0) := "0000111010";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv8_74 : STD_LOGIC_VECTOR (7 downto 0) := "01110100";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv10_A9 : STD_LOGIC_VECTOR (9 downto 0) := "0010101001";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal icmp_ln33_reg_1241 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage25 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal Layer_Weights_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal Layer_Weights_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln33_reg_1241_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal or_ln30_1_reg_1255 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln34_reg_1265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal Layer_Neurons_blk_n_AR : STD_LOGIC;
    signal Layer_Neurons_blk_n_R : STD_LOGIC;
    signal reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_state23_io : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_predicate_op191_readreq_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state29_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state30_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state32_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state33_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state34_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state35_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_311 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_316 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op255_read_state10 : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal icmp_ln33_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1241_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1241_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1241_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_1245 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln30_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln30_reg_1250 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_1_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_1_fu_449_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln30_1_reg_1259 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln34_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln33_fu_475_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_81_fu_479_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_81_reg_1275 : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer_Weights_addr_reg_1280 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_63_fu_600_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_63_reg_1291 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_606_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_reg_1299 : STD_LOGIC_VECTOR (4 downto 0);
    signal Layer_Weights_addr_2_reg_1306 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer_Neurons_addr_reg_1312 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1170_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1178_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln45_reg_1328 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln45_reg_1328_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln45_reg_1328_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln45_reg_1328_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln45_reg_1328_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer_Neurons_addr_1_reg_1333 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_65_fu_764_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_65_reg_1339 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_67_fu_779_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_67_reg_1344 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln41_fu_816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_fu_821_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Neurons_addr_2_reg_1359 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_1_fu_846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_1_fu_851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_1_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_2_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_2_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_s_reg_1390 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_3_fu_874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_3_fu_879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_5_reg_1405 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_4_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_4_fu_889_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_6_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_5_fu_910_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_5_fu_915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Neurons_addr_3_reg_1435 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_6_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_6_fu_945_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_reg_1451 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_7_fu_950_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_7_fu_955_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_1_reg_1466 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_8_fu_960_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_8_fu_965_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_2_reg_1481 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_9_fu_970_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_9_fu_975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_3_reg_1496 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_10_fu_996_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_4_reg_1506 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_4_reg_1506_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_10_fu_1001_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer_Neurons_addr_4_reg_1516 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_11_fu_1026_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_11_fu_1031_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_reg_1532_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_12_fu_1036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_12_fu_1041_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_1_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_1_reg_1547_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_13_fu_1046_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_13_fu_1051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_2_reg_1562 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_2_reg_1562_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_14_fu_1056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_14_fu_1061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_3_reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_3_reg_1577_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_15_fu_1066_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_1587 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_1587_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_15_fu_1071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_16_fu_1076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_16_fu_1081_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_1607 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_1607_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_17_fu_1086_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_17_fu_1091_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_1622 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_1622_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_18_fu_1096_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_18_fu_1101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_1637 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_1637_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_1637_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_19_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_19_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_1652 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_1652_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_1652_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_20_fu_1116_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_1662 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_1662_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_1662_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_20_fu_1121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_21_fu_1126_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_21_fu_1131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_1682 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_1682_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_1682_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_22_fu_1136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_22_fu_1141_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_1697 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_1697_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_1697_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_23_fu_1146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_23_fu_1151_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_1712 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_1712_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_1712_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_24_fu_1156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln42_24_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_1727 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_1727_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_1727_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_1732 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_1732_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_1732_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal grp_SIGMOID_fu_278_ap_ready : STD_LOGIC;
    signal grp_SIGMOID_fu_278_ap_ce : STD_LOGIC;
    signal ap_block_state11_pp0_stage10_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage10_11001_ignoreCallOp571 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage11_11001_ignoreCallOp572 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage12_11001_ignoreCallOp573 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp574 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp575 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp576 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage16_11001_ignoreCallOp577 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage17_11001_ignoreCallOp578 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage18_11001_ignoreCallOp579 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage19_11001_ignoreCallOp581 : BOOLEAN;
    signal ap_phi_mux_first_iter_1_phi_fu_260_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_first_iter_0_phi_fu_270_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_SIGMOID_fu_278_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln45_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_cast_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln41_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_1_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_2_fu_836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_3_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_4_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_124 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln35_fu_515_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_k_load : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_128 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln34_fu_571_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_132 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln34_1_fu_527_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_136 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal select_ln33_fu_429_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten22_fu_140 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln33_fu_381_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten22_load : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer_Weights_load2_fu_144 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_286_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_286_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln35_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln30_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln33_1_fu_423_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln30_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_2_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln34_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_81_fu_479_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_81_fu_479_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast50_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_82_fu_489_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_495_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln34_1_fu_521_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln30_fu_558_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln34_fu_565_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_578_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast51_fu_583_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_63_fu_600_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_63_fu_600_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast27_fu_613_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_73_fu_617_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_623_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast59_fu_631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_62_fu_587_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_640_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_74_fu_635_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_660_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast25_fu_688_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_fu_691_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_cast_fu_697_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_71_fu_701_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_706_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast58_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_72_fu_718_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln42_1_fu_723_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast20_fu_751_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_754_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_cast_fu_760_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast22_fu_748_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_fu_769_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_775_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_fu_784_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_cast_fu_790_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_69_fu_794_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_799_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast57_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_70_fu_811_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln42_2_fu_826_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_5_fu_894_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast56_fu_901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_68_fu_905_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln42_3_fu_920_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_4_fu_980_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast55_fu_987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_66_fu_991_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln42_4_fu_1006_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1170_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1170_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1170_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1178_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1178_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_286_ce : STD_LOGIC;
    signal grp_fu_290_ce : STD_LOGIC;
    signal grp_fu_1170_ce : STD_LOGIC;
    signal grp_fu_1178_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter3_stage19 : STD_LOGIC;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage13_00001 : BOOLEAN;
    signal ap_block_pp0_stage17_00001 : BOOLEAN;
    signal ap_block_pp0_stage21_00001 : BOOLEAN;
    signal ap_block_pp0_stage25_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage11_00001 : BOOLEAN;
    signal ap_block_pp0_stage15_00001 : BOOLEAN;
    signal ap_block_pp0_stage19_00001 : BOOLEAN;
    signal ap_block_pp0_stage23_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage14_00001 : BOOLEAN;
    signal ap_block_pp0_stage18_00001 : BOOLEAN;
    signal ap_block_pp0_stage22_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage12_00001 : BOOLEAN;
    signal ap_block_pp0_stage16_00001 : BOOLEAN;
    signal ap_block_pp0_stage20_00001 : BOOLEAN;
    signal ap_block_pp0_stage24_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal empty_63_fu_600_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1170_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1178_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_2342 : BOOLEAN;
    signal ap_condition_2348 : BOOLEAN;
    signal ap_condition_2351 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_lenet_SIGMOID IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_mul_3ns_8ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_mul_4ns_7ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_3ns_8ns_10_1_1_U13 : component cnn_lenet_mul_3ns_8ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => empty_81_fu_479_p0,
        din1 => empty_81_fu_479_p1,
        dout => empty_81_fu_479_p2);

    mul_4ns_7ns_10_1_1_U14 : component cnn_lenet_mul_4ns_7ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        din0 => empty_63_fu_600_p0,
        din1 => empty_63_fu_600_p1,
        dout => empty_63_fu_600_p2);

    mac_muladd_3ns_8ns_4ns_10_4_1_U15 : component cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1170_p0,
        din1 => grp_fu_1170_p1,
        din2 => grp_fu_1170_p2,
        ce => grp_fu_1170_ce,
        dout => grp_fu_1170_p3);

    mac_muladd_4ns_4ns_10ns_10_4_1_U16 : component cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1178_p0,
        din1 => grp_fu_1178_p1,
        din2 => grp_fu_1170_p3,
        ce => grp_fu_1178_ce,
        dout => grp_fu_1178_p3);

    flow_control_loop_pipe_sequential_init_U : component cnn_lenet_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage25,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage25)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    grp_SIGMOID_fu_278_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_SIGMOID_fu_278_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln33_reg_1241_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then 
                    grp_SIGMOID_fu_278_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_SIGMOID_fu_278_ap_ready = ap_const_logic_1)) then 
                    grp_SIGMOID_fu_278_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage19))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage19))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage19))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    i_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln33_fu_375_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_136 <= select_ln33_fu_429_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_136 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten22_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln33_fu_375_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten22_fu_140 <= add_ln33_fu_381_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten22_fu_140 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln33_fu_375_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_132 <= select_ln34_1_fu_527_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_132 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1))) then 
                j_fu_128 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0))) then 
                j_fu_128 <= select_ln34_fu_571_p3;
            end if; 
        end if;
    end process;

    k_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln33_fu_375_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_fu_124 <= add_ln35_fu_515_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_124 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                Layer_Neurons_addr_1_reg_1333 <= sext_ln42_1_fu_733_p1;
                mul27_4_reg_1682_pp0_iter2_reg <= mul27_4_reg_1682;
                mul27_4_reg_1682_pp0_iter3_reg <= mul27_4_reg_1682_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                Layer_Neurons_addr_2_reg_1359 <= sext_ln42_2_fu_836_p1;
                empty_65_reg_1339 <= empty_65_fu_764_p2;
                empty_67_reg_1344 <= empty_67_fu_779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                Layer_Neurons_addr_3_reg_1435 <= sext_ln42_3_fu_930_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                Layer_Neurons_addr_4_reg_1516 <= sext_ln42_4_fu_1016_p1;
                mul27_1_4_reg_1506_pp0_iter1_reg <= mul27_1_4_reg_1506;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                Layer_Neurons_addr_reg_1312 <= sext_ln42_fu_670_p1;
                Layer_Weights_addr_2_reg_1306 <= sext_ln41_fu_650_p1;
                empty_63_reg_1291 <= empty_63_fu_600_p2;
                mul27_3_reg_1607_pp0_iter2_reg <= mul27_3_reg_1607;
                    tmp_3_reg_1299(4 downto 1) <= tmp_3_fu_606_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Layer_Weights_addr_reg_1280 <= p_cast_cast_fu_505_p1;
                and_ln30_reg_1250 <= and_ln30_fu_417_p2;
                empty_81_reg_1275 <= empty_81_fu_479_p2;
                icmp_ln33_reg_1241 <= icmp_ln33_fu_375_p2;
                icmp_ln33_reg_1241_pp0_iter1_reg <= icmp_ln33_reg_1241;
                icmp_ln33_reg_1241_pp0_iter2_reg <= icmp_ln33_reg_1241_pp0_iter1_reg;
                icmp_ln33_reg_1241_pp0_iter3_reg <= icmp_ln33_reg_1241_pp0_iter2_reg;
                icmp_ln33_reg_1241_pp0_iter4_reg <= icmp_ln33_reg_1241_pp0_iter3_reg;
                icmp_ln34_reg_1245 <= icmp_ln34_fu_393_p2;
                mul27_2_4_reg_1587_pp0_iter2_reg <= mul27_2_4_reg_1587;
                or_ln30_1_reg_1255 <= or_ln30_1_fu_437_p2;
                select_ln30_1_reg_1259 <= select_ln30_1_fu_449_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln34_reg_1265 = ap_const_lv1_1) and (or_ln30_1_reg_1255 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0))) then
                Layer_Weights_load2_fu_144 <= m_axi_Layer_Weights_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln45_reg_1328 <= grp_fu_1178_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln45_reg_1328_pp0_iter1_reg <= add_ln45_reg_1328;
                add_ln45_reg_1328_pp0_iter2_reg <= add_ln45_reg_1328_pp0_iter1_reg;
                add_ln45_reg_1328_pp0_iter3_reg <= add_ln45_reg_1328_pp0_iter2_reg;
                add_ln45_reg_1328_pp0_iter4_reg <= add_ln45_reg_1328_pp0_iter3_reg;
                mul27_3_3_reg_1652_pp0_iter2_reg <= mul27_3_3_reg_1652;
                mul27_3_3_reg_1652_pp0_iter3_reg <= mul27_3_3_reg_1652_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                mul27_1_1_reg_1466 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                mul27_1_2_reg_1481 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001))) then
                mul27_1_3_reg_1496 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                mul27_1_4_reg_1506 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                mul27_1_reg_1451 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul27_2_1_reg_1547 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul27_2_1_reg_1547_pp0_iter1_reg <= mul27_2_1_reg_1547;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                mul27_2_2_reg_1562 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                mul27_2_2_reg_1562_pp0_iter1_reg <= mul27_2_2_reg_1562;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then
                mul27_2_3_reg_1577 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then
                mul27_2_3_reg_1577_pp0_iter1_reg <= mul27_2_3_reg_1577;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul27_2_4_reg_1587 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                mul27_2_reg_1532 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                mul27_2_reg_1532_pp0_iter1_reg <= mul27_2_reg_1532;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul27_3_1_reg_1622 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul27_3_1_reg_1622_pp0_iter2_reg <= mul27_3_1_reg_1622;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul27_3_2_reg_1637 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul27_3_2_reg_1637_pp0_iter2_reg <= mul27_3_2_reg_1637;
                mul27_3_2_reg_1637_pp0_iter3_reg <= mul27_3_2_reg_1637_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul27_3_3_reg_1652 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul27_3_4_reg_1662 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul27_3_4_reg_1662_pp0_iter2_reg <= mul27_3_4_reg_1662;
                mul27_3_4_reg_1662_pp0_iter3_reg <= mul27_3_4_reg_1662_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul27_3_reg_1607 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                mul27_4_1_reg_1697 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                mul27_4_1_reg_1697_pp0_iter2_reg <= mul27_4_1_reg_1697;
                mul27_4_1_reg_1697_pp0_iter3_reg <= mul27_4_1_reg_1697_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul27_4_2_reg_1712 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul27_4_2_reg_1712_pp0_iter2_reg <= mul27_4_2_reg_1712;
                mul27_4_2_reg_1712_pp0_iter3_reg <= mul27_4_2_reg_1712_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                mul27_4_3_reg_1727 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                mul27_4_3_reg_1727_pp0_iter2_reg <= mul27_4_3_reg_1727;
                mul27_4_3_reg_1727_pp0_iter3_reg <= mul27_4_3_reg_1727_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul27_4_4_reg_1732 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul27_4_4_reg_1732_pp0_iter2_reg <= mul27_4_4_reg_1732;
                mul27_4_4_reg_1732_pp0_iter3_reg <= mul27_4_4_reg_1732_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul27_4_reg_1682 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                mul27_5_reg_1405 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                mul27_6_reg_1420 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                mul27_s_reg_1390 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln34_reg_1265 <= or_ln34_fu_469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) 
    or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 
    = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then
                reg_294 <= m_axi_Layer_Weights_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then
                reg_298 <= m_axi_Layer_Neurons_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)))) then
                reg_302 <= grp_fu_477_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)))) then
                reg_307 <= m_axi_Layer_Neurons_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)))) then
                reg_311 <= grp_fu_473_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)))) then
                reg_316 <= m_axi_Layer_Neurons_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)))) then
                reg_320 <= m_axi_Layer_Neurons_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_324 <= m_axi_Layer_Neurons_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)))) then
                reg_328 <= grp_fu_473_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)))) then
                reg_333 <= grp_fu_473_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then
                reg_338 <= grp_fu_473_p_dout0;
            end if;
        end if;
    end process;
    tmp_3_reg_1299(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage25_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter3_stage19, ap_idle_pp0_0to2, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage19))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Layer2_Neurons_CPU_address0 <= zext_ln45_fu_1166_p1(10 - 1 downto 0);

    Layer2_Neurons_CPU_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_1;
        else 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Layer2_Neurons_CPU_d0 <= grp_SIGMOID_fu_244_p_dout0;

    Layer2_Neurons_CPU_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln33_reg_1241_pp0_iter4_reg)
    begin
        if (((icmp_ln33_reg_1241_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_1;
        else 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Layer_Neurons_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln33_reg_1241, m_axi_Layer_Neurons_ARREADY, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            Layer_Neurons_blk_n_AR <= m_axi_Layer_Neurons_ARREADY;
        else 
            Layer_Neurons_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Neurons_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln33_reg_1241_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 
    = ap_block_pp0_stage24) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 
    = ap_block_pp0_stage13) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            Layer_Neurons_blk_n_R <= m_axi_Layer_Neurons_RVALID;
        else 
            Layer_Neurons_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Weights_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_Layer_Weights_ARREADY, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, or_ln30_1_reg_1255, or_ln34_reg_1265)
    begin
        if ((((or_ln34_reg_1265 = ap_const_lv1_1) and (or_ln30_1_reg_1255 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            Layer_Weights_blk_n_AR <= m_axi_Layer_Weights_ARREADY;
        else 
            Layer_Weights_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    Layer_Weights_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln33_reg_1241_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, or_ln30_1_reg_1255, or_ln34_reg_1265, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9)
    begin
        if ((((or_ln34_reg_1265 = ap_const_lv1_1) and (or_ln30_1_reg_1255 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 
    = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 
    = ap_block_pp0_stage20) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            Layer_Weights_blk_n_R <= m_axi_Layer_Weights_RVALID;
        else 
            Layer_Weights_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    add_ln33_1_fu_423_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv3_1));
    add_ln33_fu_381_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten22_load) + unsigned(ap_const_lv10_1));
    add_ln34_1_fu_521_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    add_ln34_fu_565_p2 <= std_logic_vector(unsigned(select_ln30_fu_558_p3) + unsigned(ap_const_lv4_1));
    add_ln35_fu_515_p2 <= std_logic_vector(unsigned(select_ln30_1_fu_449_p3) + unsigned(ap_const_lv4_1));
    and_ln30_fu_417_p2 <= (xor_ln30_fu_405_p2 and icmp_ln35_fu_411_p2);
    and_ln34_fu_463_p2 <= (xor_ln34_fu_457_p2 and ap_phi_mux_first_iter_1_phi_fu_260_p4);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage0_iter1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;


    ap_block_pp0_stage10_11001_ignoreCallOp571_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0_ignore_call220)
    begin
                ap_block_pp0_stage10_11001_ignoreCallOp571 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;


    ap_block_pp0_stage11_11001_ignoreCallOp572_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0_ignore_call220)
    begin
                ap_block_pp0_stage11_11001_ignoreCallOp572 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0)));
    end process;


    ap_block_pp0_stage12_11001_ignoreCallOp573_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_io, ap_block_state13_pp0_stage12_iter0_ignore_call220)
    begin
                ap_block_pp0_stage12_11001_ignoreCallOp573 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0_ignore_call220)));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0)));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;


    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;


    ap_block_pp0_stage13_11001_ignoreCallOp574_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0_ignore_call220)
    begin
                ap_block_pp0_stage13_11001_ignoreCallOp574 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;


    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;


    ap_block_pp0_stage14_11001_ignoreCallOp575_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0_ignore_call220)
    begin
                ap_block_pp0_stage14_11001_ignoreCallOp575 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;


    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;


    ap_block_pp0_stage15_11001_ignoreCallOp576_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0_ignore_call220)
    begin
                ap_block_pp0_stage15_11001_ignoreCallOp576 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;


    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;


    ap_block_pp0_stage16_11001_ignoreCallOp577_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0_ignore_call220)
    begin
                ap_block_pp0_stage16_11001_ignoreCallOp577 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0));
    end process;


    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0)));
    end process;


    ap_block_pp0_stage17_11001_ignoreCallOp578_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_io, ap_block_state18_pp0_stage17_iter0_ignore_call220)
    begin
                ap_block_pp0_stage17_11001_ignoreCallOp578 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0_ignore_call220)));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0)));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;


    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;


    ap_block_pp0_stage18_11001_ignoreCallOp579_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0_ignore_call220)
    begin
                ap_block_pp0_stage18_11001_ignoreCallOp579 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage19_11001_ignoreCallOp581_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0_ignore_call220)
    begin
                ap_block_pp0_stage19_11001_ignoreCallOp581 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0_ignore_call220));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage1_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state28_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage1_iter1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state2_io, ap_block_state28_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage1_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state2_io, ap_block_state28_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage1_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;


    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;


    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0));
    end process;


    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0, ap_block_state23_io)
    begin
                ap_block_pp0_stage22_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0)));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0, ap_block_state23_io)
    begin
                ap_block_pp0_stage22_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0)));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;


    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;

        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0));
    end process;


    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0));
    end process;


    ap_block_pp0_stage2_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state29_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage2_iter1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state29_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage2_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state29_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage2_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage3_iter1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage3_iter1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage3_iter1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state31_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage4_iter1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state31_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage4_iter1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state31_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage4_iter1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage5_iter1));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage5_iter1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage5_iter1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state33_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage6_iter1));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state33_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage6_iter1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state33_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage6_iter1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage7_iter1)
    begin
                ap_block_pp0_stage7_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage7_iter1));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state8_io, ap_block_state34_pp0_stage7_iter1)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage7_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state8_io, ap_block_state34_pp0_stage7_iter1)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage7_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage8_iter1)
    begin
                ap_block_pp0_stage8_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state35_pp0_stage8_iter1));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage8_iter1)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state35_pp0_stage8_iter1));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage8_iter1)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state35_pp0_stage8_iter1));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, ap_predicate_op255_read_state10)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((ap_predicate_op255_read_state10 = ap_const_boolean_1) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state11_pp0_stage10_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state11_pp0_stage10_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state11_pp0_stage10_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state12_pp0_stage11_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state12_pp0_stage11_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state12_pp0_stage11_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state13_io_assign_proc : process(icmp_ln33_reg_1241, m_axi_Layer_Neurons_ARREADY)
    begin
                ap_block_state13_io <= ((m_axi_Layer_Neurons_ARREADY = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state13_pp0_stage12_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state13_pp0_stage12_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state13_pp0_stage12_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state14_pp0_stage13_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state14_pp0_stage13_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state14_pp0_stage13_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state15_pp0_stage14_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state15_pp0_stage14_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state15_pp0_stage14_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state16_pp0_stage15_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state16_pp0_stage15_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state16_pp0_stage15_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state17_pp0_stage16_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state17_pp0_stage16_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state17_pp0_stage16_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state18_io_assign_proc : process(icmp_ln33_reg_1241, m_axi_Layer_Neurons_ARREADY)
    begin
                ap_block_state18_io <= ((m_axi_Layer_Neurons_ARREADY = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state18_pp0_stage17_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state18_pp0_stage17_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state18_pp0_stage17_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state19_pp0_stage18_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state19_pp0_stage18_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state19_pp0_stage18_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state19_pp0_stage18_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state20_pp0_stage19_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state20_pp0_stage19_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state20_pp0_stage19_iter0_ignore_call220_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state20_pp0_stage19_iter0_ignore_call220 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state21_pp0_stage20_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state21_pp0_stage20_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state22_pp0_stage21_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state22_pp0_stage21_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state23_io_assign_proc : process(icmp_ln33_reg_1241, m_axi_Layer_Neurons_ARREADY)
    begin
                ap_block_state23_io <= ((m_axi_Layer_Neurons_ARREADY = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_block_state23_pp0_stage22_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state23_pp0_stage22_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state24_pp0_stage23_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state24_pp0_stage23_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state25_pp0_stage24_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state25_pp0_stage24_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state26_pp0_stage25_iter0_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state26_pp0_stage25_iter0 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state27_pp0_stage0_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, icmp_ln33_reg_1241, m_axi_Layer_Neurons_RVALID)
    begin
                ap_block_state27_pp0_stage0_iter1 <= (((m_axi_Layer_Neurons_RVALID = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((icmp_ln33_reg_1241 = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state28_pp0_stage1_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state28_pp0_stage1_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state29_pp0_stage2_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state29_pp0_stage2_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(m_axi_Layer_Weights_ARREADY, ap_predicate_op191_readreq_state2)
    begin
                ap_block_state2_io <= ((m_axi_Layer_Weights_ARREADY = ap_const_logic_0) and (ap_predicate_op191_readreq_state2 = ap_const_boolean_1));
    end process;


    ap_block_state30_pp0_stage3_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state30_pp0_stage3_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state31_pp0_stage4_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state31_pp0_stage4_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state32_pp0_stage5_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state32_pp0_stage5_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state33_pp0_stage6_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state33_pp0_stage6_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state34_pp0_stage7_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state34_pp0_stage7_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state35_pp0_stage8_iter1_assign_proc : process(m_axi_Layer_Weights_RVALID, m_axi_Layer_Neurons_RVALID, icmp_ln33_reg_1241_pp0_iter1_reg)
    begin
                ap_block_state35_pp0_stage8_iter1 <= (((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Neurons_RVALID = ap_const_logic_0)) or ((icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_Layer_Weights_RVALID = ap_const_logic_0)));
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_Layer_Weights_ARREADY, icmp_ln33_reg_1241, m_axi_Layer_Neurons_ARREADY)
    begin
                ap_block_state3_io <= (((m_axi_Layer_Weights_ARREADY = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((m_axi_Layer_Neurons_ARREADY = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0)));
    end process;


    ap_block_state8_io_assign_proc : process(icmp_ln33_reg_1241, m_axi_Layer_Neurons_ARREADY)
    begin
                ap_block_state8_io <= ((m_axi_Layer_Neurons_ARREADY = ap_const_logic_0) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_condition_2342_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln33_reg_1241, ap_block_pp0_stage0)
    begin
                ap_condition_2342 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_condition_2348_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_predicate_op191_readreq_state2, ap_block_pp0_stage1_11001)
    begin
                ap_condition_2348 <= ((ap_predicate_op191_readreq_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_2351_assign_proc : process(icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
                ap_condition_2351 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage25_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, icmp_ln33_reg_1241, ap_block_pp0_stage25_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_subdone) and (icmp_ln33_reg_1241 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage25 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage19_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage19, icmp_ln33_reg_1241_pp0_iter3_reg, ap_block_pp0_stage19_subdone)
    begin
        if (((icmp_ln33_reg_1241_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
            ap_condition_exit_pp0_iter3_stage19 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage25;

    ap_phi_mux_first_iter_0_phi_fu_270_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_condition_2342)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_2342)) then 
                ap_phi_mux_first_iter_0_phi_fu_270_p4 <= ap_const_lv1_0;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_first_iter_0_phi_fu_270_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_first_iter_0_phi_fu_270_p4 <= ap_const_lv1_0;
            end if;
        else 
            ap_phi_mux_first_iter_0_phi_fu_270_p4 <= ap_const_lv1_0;
        end if; 
    end process;


    ap_phi_mux_first_iter_1_phi_fu_260_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, or_ln34_reg_1265, ap_loop_init, ap_condition_2342)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_2342)) then 
                ap_phi_mux_first_iter_1_phi_fu_260_p4 <= or_ln34_reg_1265;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_first_iter_1_phi_fu_260_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_first_iter_1_phi_fu_260_p4 <= or_ln34_reg_1265;
            end if;
        else 
            ap_phi_mux_first_iter_1_phi_fu_260_p4 <= or_ln34_reg_1265;
        end if; 
    end process;


    ap_predicate_op191_readreq_state2_assign_proc : process(icmp_ln33_reg_1241, or_ln30_1_reg_1255, or_ln34_reg_1265)
    begin
                ap_predicate_op191_readreq_state2 <= ((or_ln34_reg_1265 = ap_const_lv1_1) and (or_ln30_1_reg_1255 = ap_const_lv1_1) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_predicate_op255_read_state10_assign_proc : process(icmp_ln33_reg_1241, or_ln30_1_reg_1255, or_ln34_reg_1265)
    begin
                ap_predicate_op255_read_state10 <= ((or_ln34_reg_1265 = ap_const_lv1_1) and (or_ln30_1_reg_1255 = ap_const_lv1_1) and (icmp_ln33_reg_1241 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_136)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten22_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten22_fu_140)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten22_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten22_load <= indvar_flatten22_fu_140;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_132)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_k_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, k_fu_124)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_k_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_k_load <= k_fu_124;
        end if; 
    end process;

    bitcast_ln41_10_fu_996_p1 <= reg_294;
    bitcast_ln41_11_fu_1026_p1 <= reg_294;
    bitcast_ln41_12_fu_1036_p1 <= reg_294;
    bitcast_ln41_13_fu_1046_p1 <= reg_294;
    bitcast_ln41_14_fu_1056_p1 <= reg_294;
    bitcast_ln41_15_fu_1066_p1 <= reg_294;
    bitcast_ln41_16_fu_1076_p1 <= reg_294;
    bitcast_ln41_17_fu_1086_p1 <= reg_294;
    bitcast_ln41_18_fu_1096_p1 <= reg_294;
    bitcast_ln41_19_fu_1106_p1 <= reg_294;
    bitcast_ln41_1_fu_846_p1 <= reg_294;
    bitcast_ln41_20_fu_1116_p1 <= reg_294;
    bitcast_ln41_21_fu_1126_p1 <= reg_294;
    bitcast_ln41_22_fu_1136_p1 <= reg_294;
    bitcast_ln41_23_fu_1146_p1 <= reg_294;
    bitcast_ln41_24_fu_1156_p1 <= reg_294;
    bitcast_ln41_2_fu_864_p1 <= reg_294;
    bitcast_ln41_3_fu_874_p1 <= reg_294;
    bitcast_ln41_4_fu_884_p1 <= reg_294;
    bitcast_ln41_5_fu_910_p1 <= reg_294;
    bitcast_ln41_6_fu_940_p1 <= reg_294;
    bitcast_ln41_7_fu_950_p1 <= reg_294;
    bitcast_ln41_8_fu_960_p1 <= reg_294;
    bitcast_ln41_9_fu_970_p1 <= reg_294;
    bitcast_ln41_fu_816_p1 <= reg_294;
    bitcast_ln42_10_fu_1001_p1 <= reg_316;
    bitcast_ln42_11_fu_1031_p1 <= reg_316;
    bitcast_ln42_12_fu_1041_p1 <= reg_316;
    bitcast_ln42_13_fu_1051_p1 <= reg_316;
    bitcast_ln42_14_fu_1061_p1 <= reg_316;
    bitcast_ln42_15_fu_1071_p1 <= reg_320;
    bitcast_ln42_16_fu_1081_p1 <= reg_320;
    bitcast_ln42_17_fu_1091_p1 <= reg_320;
    bitcast_ln42_18_fu_1101_p1 <= reg_320;
    bitcast_ln42_19_fu_1111_p1 <= reg_320;
    bitcast_ln42_1_fu_851_p1 <= reg_298;
    bitcast_ln42_20_fu_1121_p1 <= reg_324;
    bitcast_ln42_21_fu_1131_p1 <= reg_324;
    bitcast_ln42_22_fu_1141_p1 <= reg_324;
    bitcast_ln42_23_fu_1151_p1 <= reg_324;
    bitcast_ln42_24_fu_1161_p1 <= reg_324;
    bitcast_ln42_2_fu_869_p1 <= reg_298;
    bitcast_ln42_3_fu_879_p1 <= reg_298;
    bitcast_ln42_4_fu_889_p1 <= reg_298;
    bitcast_ln42_5_fu_915_p1 <= reg_307;
    bitcast_ln42_6_fu_945_p1 <= reg_307;
    bitcast_ln42_7_fu_955_p1 <= reg_307;
    bitcast_ln42_8_fu_965_p1 <= reg_307;
    bitcast_ln42_9_fu_975_p1 <= reg_307;
    bitcast_ln42_fu_821_p1 <= reg_298;
    empty_62_fu_587_p2 <= std_logic_vector(unsigned(p_cast51_fu_583_p1) + unsigned(Layer1_Weights_CPU));
    empty_63_fu_600_p0 <= empty_63_fu_600_p00(4 - 1 downto 0);
    empty_63_fu_600_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln34_fu_571_p3),10));
    empty_63_fu_600_p1 <= ap_const_lv10_3A(7 - 1 downto 0);
    empty_65_fu_764_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_760_p1) + unsigned(empty_63_reg_1291));
    empty_66_fu_991_p2 <= std_logic_vector(unsigned(p_cast55_fu_987_p1) + unsigned(Layer1_Neurons_CPU));
    empty_67_fu_779_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_775_p1) + unsigned(empty_63_reg_1291));
    empty_68_fu_905_p2 <= std_logic_vector(unsigned(p_cast56_fu_901_p1) + unsigned(Layer1_Neurons_CPU));
    empty_69_fu_794_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_790_p1) + unsigned(empty_63_reg_1291));
    empty_70_fu_811_p2 <= std_logic_vector(unsigned(p_cast57_fu_807_p1) + unsigned(Layer1_Neurons_CPU));
    empty_71_fu_701_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_697_p1) + unsigned(empty_63_reg_1291));
    empty_72_fu_718_p2 <= std_logic_vector(unsigned(p_cast58_fu_714_p1) + unsigned(Layer1_Neurons_CPU));
    empty_73_fu_617_p2 <= std_logic_vector(unsigned(p_cast27_fu_613_p1) + unsigned(empty_63_fu_600_p2));
    empty_74_fu_635_p2 <= std_logic_vector(unsigned(p_cast59_fu_631_p1) + unsigned(Layer1_Neurons_CPU));
    empty_81_fu_479_p0 <= zext_ln33_fu_475_p1(3 - 1 downto 0);
    empty_81_fu_479_p1 <= ap_const_lv10_68(8 - 1 downto 0);
    empty_82_fu_489_p2 <= std_logic_vector(unsigned(p_cast50_fu_485_p1) + unsigned(Layer1_Weights_CPU));
    empty_fu_578_p2 <= (empty_81_reg_1275 or ap_const_lv10_4);
    grp_SIGMOID_fu_244_p_ce <= grp_SIGMOID_fu_278_ap_ce;
    grp_SIGMOID_fu_244_p_din1 <= reg_338;
    grp_SIGMOID_fu_244_p_start <= grp_SIGMOID_fu_278_ap_start_reg;

    grp_SIGMOID_fu_278_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage10_11001_ignoreCallOp571, ap_block_pp0_stage11_11001_ignoreCallOp572, ap_block_pp0_stage12_11001_ignoreCallOp573, ap_block_pp0_stage13_11001_ignoreCallOp574, ap_block_pp0_stage14_11001_ignoreCallOp575, ap_block_pp0_stage15_11001_ignoreCallOp576, ap_block_pp0_stage16_11001_ignoreCallOp577, ap_block_pp0_stage17_11001_ignoreCallOp578, ap_block_pp0_stage18_11001_ignoreCallOp579, ap_block_pp0_stage19_11001_ignoreCallOp581)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001_ignoreCallOp581)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001_ignoreCallOp579)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001_ignoreCallOp578)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001_ignoreCallOp577)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001_ignoreCallOp576)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001_ignoreCallOp575)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001_ignoreCallOp574)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001_ignoreCallOp573)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001_ignoreCallOp572)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001_ignoreCallOp571)))) then 
            grp_SIGMOID_fu_278_ap_ce <= ap_const_logic_1;
        else 
            grp_SIGMOID_fu_278_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_SIGMOID_fu_278_ap_ready <= grp_SIGMOID_fu_244_p_ready;

    grp_fu_1170_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_1170_ce <= ap_const_logic_1;
        else 
            grp_fu_1170_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1170_p0 <= zext_ln33_fu_475_p1(3 - 1 downto 0);
    grp_fu_1170_p1 <= ap_const_lv10_A9(8 - 1 downto 0);
    grp_fu_1170_p2 <= grp_fu_1170_p20(4 - 1 downto 0);
    grp_fu_1170_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_1_reg_1259),10));

    grp_fu_1178_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_1178_ce <= ap_const_logic_1;
        else 
            grp_fu_1178_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1178_p0 <= grp_fu_1178_p00(4 - 1 downto 0);
    grp_fu_1178_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln34_fu_571_p3),8));
    grp_fu_1178_p1 <= ap_const_lv8_D(4 - 1 downto 0);

    grp_fu_286_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) 
    and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_286_ce <= ap_const_logic_1;
        else 
            grp_fu_286_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_286_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, reg_311, reg_328, reg_333, reg_338, somme_1_fu_859_p1)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)))) then 
            grp_fu_286_p0 <= reg_338;
        elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)))) then 
            grp_fu_286_p0 <= reg_333;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)))) then 
            grp_fu_286_p0 <= reg_328;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)))) then 
            grp_fu_286_p0 <= reg_311;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_286_p0 <= somme_1_fu_859_p1;
        else 
            grp_fu_286_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_286_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, reg_302, mul27_s_reg_1390, mul27_5_reg_1405, mul27_6_reg_1420, mul27_1_reg_1451, mul27_1_1_reg_1466, mul27_1_2_reg_1481, mul27_1_3_reg_1496, mul27_1_4_reg_1506_pp0_iter1_reg, mul27_2_reg_1532_pp0_iter1_reg, mul27_2_1_reg_1547_pp0_iter1_reg, mul27_2_2_reg_1562_pp0_iter1_reg, mul27_2_3_reg_1577_pp0_iter1_reg, mul27_2_4_reg_1587_pp0_iter2_reg, mul27_3_reg_1607_pp0_iter2_reg, mul27_3_1_reg_1622_pp0_iter2_reg, mul27_3_2_reg_1637_pp0_iter3_reg, mul27_3_3_reg_1652_pp0_iter3_reg, mul27_3_4_reg_1662_pp0_iter3_reg, mul27_4_reg_1682_pp0_iter3_reg, mul27_4_1_reg_1697_pp0_iter3_reg, mul27_4_2_reg_1712_pp0_iter3_reg, mul27_4_3_reg_1727_pp0_iter3_reg, mul27_4_4_reg_1732_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_286_p1 <= mul27_4_4_reg_1732_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_286_p1 <= mul27_4_3_reg_1727_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_286_p1 <= mul27_4_2_reg_1712_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_286_p1 <= mul27_4_1_reg_1697_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_286_p1 <= mul27_4_reg_1682_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_286_p1 <= mul27_3_4_reg_1662_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_286_p1 <= mul27_3_3_reg_1652_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_286_p1 <= mul27_3_2_reg_1637_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_286_p1 <= mul27_3_1_reg_1622_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_286_p1 <= mul27_3_reg_1607_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_286_p1 <= mul27_2_4_reg_1587_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_286_p1 <= mul27_2_3_reg_1577_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_286_p1 <= mul27_2_2_reg_1562_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_286_p1 <= mul27_2_1_reg_1547_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_286_p1 <= mul27_2_reg_1532_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_286_p1 <= mul27_1_4_reg_1506_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_286_p1 <= mul27_1_3_reg_1496;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_286_p1 <= mul27_1_2_reg_1481;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_286_p1 <= mul27_1_1_reg_1466;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_286_p1 <= mul27_1_reg_1451;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
            grp_fu_286_p1 <= mul27_6_reg_1420;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_286_p1 <= mul27_5_reg_1405;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_286_p1 <= mul27_s_reg_1390;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)))) then 
            grp_fu_286_p1 <= reg_302;
        else 
            grp_fu_286_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) 
    and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_290_ce <= ap_const_logic_1;
        else 
            grp_fu_290_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_290_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, bitcast_ln41_fu_816_p1, bitcast_ln41_1_fu_846_p1, bitcast_ln41_2_fu_864_p1, bitcast_ln41_3_fu_874_p1, bitcast_ln41_4_fu_884_p1, bitcast_ln41_5_fu_910_p1, bitcast_ln41_6_fu_940_p1, bitcast_ln41_7_fu_950_p1, bitcast_ln41_8_fu_960_p1, bitcast_ln41_9_fu_970_p1, bitcast_ln41_10_fu_996_p1, bitcast_ln41_11_fu_1026_p1, bitcast_ln41_12_fu_1036_p1, bitcast_ln41_13_fu_1046_p1, bitcast_ln41_14_fu_1056_p1, bitcast_ln41_15_fu_1066_p1, bitcast_ln41_16_fu_1076_p1, bitcast_ln41_17_fu_1086_p1, bitcast_ln41_18_fu_1096_p1, bitcast_ln41_19_fu_1106_p1, bitcast_ln41_20_fu_1116_p1, bitcast_ln41_21_fu_1126_p1, bitcast_ln41_22_fu_1136_p1, bitcast_ln41_23_fu_1146_p1, bitcast_ln41_24_fu_1156_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_290_p0 <= bitcast_ln41_24_fu_1156_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_290_p0 <= bitcast_ln41_23_fu_1146_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_290_p0 <= bitcast_ln41_22_fu_1136_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_290_p0 <= bitcast_ln41_21_fu_1126_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_290_p0 <= bitcast_ln41_20_fu_1116_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_290_p0 <= bitcast_ln41_19_fu_1106_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_290_p0 <= bitcast_ln41_18_fu_1096_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_290_p0 <= bitcast_ln41_17_fu_1086_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_290_p0 <= bitcast_ln41_16_fu_1076_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_290_p0 <= bitcast_ln41_15_fu_1066_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
            grp_fu_290_p0 <= bitcast_ln41_14_fu_1056_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_290_p0 <= bitcast_ln41_13_fu_1046_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_290_p0 <= bitcast_ln41_12_fu_1036_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_290_p0 <= bitcast_ln41_11_fu_1026_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_290_p0 <= bitcast_ln41_10_fu_996_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_290_p0 <= bitcast_ln41_9_fu_970_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_290_p0 <= bitcast_ln41_8_fu_960_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_290_p0 <= bitcast_ln41_7_fu_950_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_290_p0 <= bitcast_ln41_6_fu_940_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_290_p0 <= bitcast_ln41_5_fu_910_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_290_p0 <= bitcast_ln41_4_fu_884_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_290_p0 <= bitcast_ln41_3_fu_874_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_290_p0 <= bitcast_ln41_2_fu_864_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_290_p0 <= bitcast_ln41_1_fu_846_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_290_p0 <= bitcast_ln41_fu_816_p1;
        else 
            grp_fu_290_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, bitcast_ln42_fu_821_p1, bitcast_ln42_1_fu_851_p1, bitcast_ln42_2_fu_869_p1, bitcast_ln42_3_fu_879_p1, bitcast_ln42_4_fu_889_p1, bitcast_ln42_5_fu_915_p1, bitcast_ln42_6_fu_945_p1, bitcast_ln42_7_fu_955_p1, bitcast_ln42_8_fu_965_p1, bitcast_ln42_9_fu_975_p1, bitcast_ln42_10_fu_1001_p1, bitcast_ln42_11_fu_1031_p1, bitcast_ln42_12_fu_1041_p1, bitcast_ln42_13_fu_1051_p1, bitcast_ln42_14_fu_1061_p1, bitcast_ln42_15_fu_1071_p1, bitcast_ln42_16_fu_1081_p1, bitcast_ln42_17_fu_1091_p1, bitcast_ln42_18_fu_1101_p1, bitcast_ln42_19_fu_1111_p1, bitcast_ln42_20_fu_1121_p1, bitcast_ln42_21_fu_1131_p1, bitcast_ln42_22_fu_1141_p1, bitcast_ln42_23_fu_1151_p1, bitcast_ln42_24_fu_1161_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_290_p1 <= bitcast_ln42_24_fu_1161_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_290_p1 <= bitcast_ln42_23_fu_1151_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_290_p1 <= bitcast_ln42_22_fu_1141_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_290_p1 <= bitcast_ln42_21_fu_1131_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_290_p1 <= bitcast_ln42_20_fu_1121_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_290_p1 <= bitcast_ln42_19_fu_1111_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_290_p1 <= bitcast_ln42_18_fu_1101_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_290_p1 <= bitcast_ln42_17_fu_1091_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_290_p1 <= bitcast_ln42_16_fu_1081_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_290_p1 <= bitcast_ln42_15_fu_1071_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
            grp_fu_290_p1 <= bitcast_ln42_14_fu_1061_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_290_p1 <= bitcast_ln42_13_fu_1051_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_290_p1 <= bitcast_ln42_12_fu_1041_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_290_p1 <= bitcast_ln42_11_fu_1031_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_290_p1 <= bitcast_ln42_10_fu_1001_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_290_p1 <= bitcast_ln42_9_fu_975_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_290_p1 <= bitcast_ln42_8_fu_965_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_290_p1 <= bitcast_ln42_7_fu_955_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_290_p1 <= bitcast_ln42_6_fu_945_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_290_p1 <= bitcast_ln42_5_fu_915_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_290_p1 <= bitcast_ln42_4_fu_889_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_290_p1 <= bitcast_ln42_3_fu_879_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_290_p1 <= bitcast_ln42_2_fu_869_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_290_p1 <= bitcast_ln42_1_fu_851_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_290_p1 <= bitcast_ln42_fu_821_p1;
        else 
            grp_fu_290_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_473_p_ce <= grp_fu_286_ce;
    grp_fu_473_p_din0 <= grp_fu_286_p0;
    grp_fu_473_p_din1 <= grp_fu_286_p1;
    grp_fu_473_p_opcode <= ap_const_lv2_0;
    grp_fu_477_p_ce <= grp_fu_290_ce;
    grp_fu_477_p_din0 <= grp_fu_290_p0;
    grp_fu_477_p_din1 <= grp_fu_290_p1;
    icmp_ln33_fu_375_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten22_load = ap_const_lv10_3F6) else "0";
    icmp_ln34_fu_393_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_A9) else "0";
    icmp_ln35_fu_411_p2 <= "1" when (ap_sig_allocacmp_k_load = ap_const_lv4_D) else "0";

    m_axi_Layer_Neurons_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage12_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, Layer_Neurons_addr_reg_1312, Layer_Neurons_addr_1_reg_1333, Layer_Neurons_addr_2_reg_1359, Layer_Neurons_addr_3_reg_1435, Layer_Neurons_addr_4_reg_1516)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln33_reg_1241 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then 
                m_axi_Layer_Neurons_ARADDR <= Layer_Neurons_addr_4_reg_1516;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                m_axi_Layer_Neurons_ARADDR <= Layer_Neurons_addr_3_reg_1435;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                m_axi_Layer_Neurons_ARADDR <= Layer_Neurons_addr_2_reg_1359;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
                m_axi_Layer_Neurons_ARADDR <= Layer_Neurons_addr_1_reg_1333;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                m_axi_Layer_Neurons_ARADDR <= Layer_Neurons_addr_reg_1312;
            else 
                m_axi_Layer_Neurons_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_Layer_Neurons_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_Layer_Neurons_ARBURST <= ap_const_lv2_0;
    m_axi_Layer_Neurons_ARCACHE <= ap_const_lv4_0;
    m_axi_Layer_Neurons_ARID <= ap_const_lv1_0;
    m_axi_Layer_Neurons_ARLEN <= ap_const_lv32_5;
    m_axi_Layer_Neurons_ARLOCK <= ap_const_lv2_0;
    m_axi_Layer_Neurons_ARPROT <= ap_const_lv3_0;
    m_axi_Layer_Neurons_ARQOS <= ap_const_lv4_0;
    m_axi_Layer_Neurons_ARREGION <= ap_const_lv4_0;
    m_axi_Layer_Neurons_ARSIZE <= ap_const_lv3_0;
    m_axi_Layer_Neurons_ARUSER <= ap_const_lv1_0;

    m_axi_Layer_Neurons_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage12_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            m_axi_Layer_Neurons_ARVALID <= ap_const_logic_1;
        else 
            m_axi_Layer_Neurons_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Layer_Neurons_AWADDR <= ap_const_lv64_0;
    m_axi_Layer_Neurons_AWBURST <= ap_const_lv2_0;
    m_axi_Layer_Neurons_AWCACHE <= ap_const_lv4_0;
    m_axi_Layer_Neurons_AWID <= ap_const_lv1_0;
    m_axi_Layer_Neurons_AWLEN <= ap_const_lv32_0;
    m_axi_Layer_Neurons_AWLOCK <= ap_const_lv2_0;
    m_axi_Layer_Neurons_AWPROT <= ap_const_lv3_0;
    m_axi_Layer_Neurons_AWQOS <= ap_const_lv4_0;
    m_axi_Layer_Neurons_AWREGION <= ap_const_lv4_0;
    m_axi_Layer_Neurons_AWSIZE <= ap_const_lv3_0;
    m_axi_Layer_Neurons_AWUSER <= ap_const_lv1_0;
    m_axi_Layer_Neurons_AWVALID <= ap_const_logic_0;
    m_axi_Layer_Neurons_BREADY <= ap_const_logic_0;

    m_axi_Layer_Neurons_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, icmp_ln33_reg_1241_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or 
    ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) 
    and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln33_reg_1241 
    = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            m_axi_Layer_Neurons_RREADY <= ap_const_logic_1;
        else 
            m_axi_Layer_Neurons_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Layer_Neurons_WDATA <= ap_const_lv32_0;
    m_axi_Layer_Neurons_WID <= ap_const_lv1_0;
    m_axi_Layer_Neurons_WLAST <= ap_const_logic_0;
    m_axi_Layer_Neurons_WSTRB <= ap_const_lv4_0;
    m_axi_Layer_Neurons_WUSER <= ap_const_lv1_0;
    m_axi_Layer_Neurons_WVALID <= ap_const_logic_0;

    m_axi_Layer_Weights_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter0, Layer_Weights_addr_reg_1280, Layer_Weights_addr_2_reg_1306, ap_condition_2348, ap_condition_2351)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_2351)) then 
                m_axi_Layer_Weights_ARADDR <= Layer_Weights_addr_2_reg_1306;
            elsif ((ap_const_boolean_1 = ap_condition_2348)) then 
                m_axi_Layer_Weights_ARADDR <= Layer_Weights_addr_reg_1280;
            else 
                m_axi_Layer_Weights_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_Layer_Weights_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_Layer_Weights_ARBURST <= ap_const_lv2_0;
    m_axi_Layer_Weights_ARCACHE <= ap_const_lv4_0;
    m_axi_Layer_Weights_ARID <= ap_const_lv1_0;

    m_axi_Layer_Weights_ARLEN_assign_proc : process(ap_enable_reg_pp0_iter0, ap_condition_2348, ap_condition_2351)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_2351)) then 
                m_axi_Layer_Weights_ARLEN <= ap_const_lv32_19;
            elsif ((ap_const_boolean_1 = ap_condition_2348)) then 
                m_axi_Layer_Weights_ARLEN <= ap_const_lv32_1;
            else 
                m_axi_Layer_Weights_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_Layer_Weights_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_Layer_Weights_ARLOCK <= ap_const_lv2_0;
    m_axi_Layer_Weights_ARPROT <= ap_const_lv3_0;
    m_axi_Layer_Weights_ARQOS <= ap_const_lv4_0;
    m_axi_Layer_Weights_ARREGION <= ap_const_lv4_0;
    m_axi_Layer_Weights_ARSIZE <= ap_const_lv3_0;
    m_axi_Layer_Weights_ARUSER <= ap_const_lv1_0;

    m_axi_Layer_Weights_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_predicate_op191_readreq_state2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_predicate_op191_readreq_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            m_axi_Layer_Weights_ARVALID <= ap_const_logic_1;
        else 
            m_axi_Layer_Weights_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Layer_Weights_AWADDR <= ap_const_lv64_0;
    m_axi_Layer_Weights_AWBURST <= ap_const_lv2_0;
    m_axi_Layer_Weights_AWCACHE <= ap_const_lv4_0;
    m_axi_Layer_Weights_AWID <= ap_const_lv1_0;
    m_axi_Layer_Weights_AWLEN <= ap_const_lv32_0;
    m_axi_Layer_Weights_AWLOCK <= ap_const_lv2_0;
    m_axi_Layer_Weights_AWPROT <= ap_const_lv3_0;
    m_axi_Layer_Weights_AWQOS <= ap_const_lv4_0;
    m_axi_Layer_Weights_AWREGION <= ap_const_lv4_0;
    m_axi_Layer_Weights_AWSIZE <= ap_const_lv3_0;
    m_axi_Layer_Weights_AWUSER <= ap_const_lv1_0;
    m_axi_Layer_Weights_AWVALID <= ap_const_logic_0;
    m_axi_Layer_Weights_BREADY <= ap_const_logic_0;

    m_axi_Layer_Weights_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage25, icmp_ln33_reg_1241, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, icmp_ln33_reg_1241_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_predicate_op255_read_state10, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_predicate_op255_read_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1241_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) 
    and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln33_reg_1241 
    = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln33_reg_1241 = ap_const_lv1_0)))) then 
            m_axi_Layer_Weights_RREADY <= ap_const_logic_1;
        else 
            m_axi_Layer_Weights_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_Layer_Weights_WDATA <= ap_const_lv32_0;
    m_axi_Layer_Weights_WID <= ap_const_lv1_0;
    m_axi_Layer_Weights_WLAST <= ap_const_logic_0;
    m_axi_Layer_Weights_WSTRB <= ap_const_lv4_0;
    m_axi_Layer_Weights_WUSER <= ap_const_lv1_0;
    m_axi_Layer_Weights_WVALID <= ap_const_logic_0;
    or_ln30_1_fu_437_p2 <= (or_ln30_fu_399_p2 or and_ln30_fu_417_p2);
    or_ln30_2_fu_443_p2 <= (icmp_ln34_fu_393_p2 or and_ln30_fu_417_p2);
    or_ln30_fu_399_p2 <= (icmp_ln34_fu_393_p2 or ap_phi_mux_first_iter_0_phi_fu_270_p4);
    or_ln34_fu_469_p2 <= (icmp_ln34_fu_393_p2 or and_ln34_fu_463_p2);
    p_cast20_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1299),8));
    p_cast22_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1299),7));
    p_cast25_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1299),6));
    p_cast27_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_606_p3),10));
    p_cast50_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_81_fu_479_p2),64));
    p_cast51_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_578_p2),64));
    p_cast55_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_980_p3),64));
    p_cast56_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_894_p3),64));
    p_cast57_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_799_p3),64));
    p_cast58_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_706_p3),64));
    p_cast59_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_623_p3),64));
        p_cast_cast_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_fu_495_p4),64));

    p_cast_fu_495_p4 <= empty_82_fu_489_p2(63 downto 2);
    select_ln30_1_fu_449_p3 <= 
        ap_const_lv4_0 when (or_ln30_2_fu_443_p2(0) = '1') else 
        ap_sig_allocacmp_k_load;
    select_ln30_fu_558_p3 <= 
        ap_const_lv4_0 when (icmp_ln34_reg_1245(0) = '1') else 
        j_fu_128;
    select_ln33_fu_429_p3 <= 
        add_ln33_1_fu_423_p2 when (icmp_ln34_fu_393_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln34_1_fu_527_p3 <= 
        ap_const_lv8_1 when (icmp_ln34_fu_393_p2(0) = '1') else 
        add_ln34_1_fu_521_p2;
    select_ln34_fu_571_p3 <= 
        add_ln34_fu_565_p2 when (and_ln30_reg_1250(0) = '1') else 
        select_ln30_fu_558_p3;
        sext_ln41_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_640_p4),64));

        sext_ln42_1_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_1_fu_723_p4),64));

        sext_ln42_2_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_2_fu_826_p4),64));

        sext_ln42_3_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_3_fu_920_p4),64));

        sext_ln42_4_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln42_4_fu_1006_p4),64));

        sext_ln42_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_660_p4),64));

    somme_1_fu_859_p1 <= Layer_Weights_load2_fu_144;
    tmp1_cast_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_754_p2),10));
    tmp1_fu_754_p2 <= std_logic_vector(unsigned(p_cast20_fu_751_p1) + unsigned(ap_const_lv8_74));
    tmp2_cast_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_769_p2),10));
    tmp2_fu_769_p2 <= std_logic_vector(unsigned(p_cast22_fu_748_p1) + unsigned(ap_const_lv7_57));
    tmp3_cast_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_784_p2),10));
    tmp3_fu_784_p2 <= std_logic_vector(unsigned(p_cast22_fu_748_p1) + unsigned(ap_const_lv7_3A));
    tmp4_cast_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_691_p2),10));
    tmp4_fu_691_p2 <= std_logic_vector(unsigned(p_cast25_fu_688_p1) + unsigned(ap_const_lv6_1D));
    tmp_3_fu_606_p3 <= (select_ln30_1_reg_1259 & ap_const_lv1_0);
    tmp_4_fu_980_p3 <= (empty_65_reg_1339 & ap_const_lv2_0);
    tmp_5_fu_894_p3 <= (empty_67_reg_1344 & ap_const_lv2_0);
    tmp_6_fu_799_p3 <= (empty_69_fu_794_p2 & ap_const_lv2_0);
    tmp_7_fu_706_p3 <= (empty_71_fu_701_p2 & ap_const_lv2_0);
    tmp_8_fu_623_p3 <= (empty_73_fu_617_p2 & ap_const_lv2_0);
    trunc_ln1_fu_640_p4 <= empty_62_fu_587_p2(63 downto 2);
    trunc_ln2_fu_660_p4 <= empty_74_fu_635_p2(63 downto 2);
    trunc_ln42_1_fu_723_p4 <= empty_72_fu_718_p2(63 downto 2);
    trunc_ln42_2_fu_826_p4 <= empty_70_fu_811_p2(63 downto 2);
    trunc_ln42_3_fu_920_p4 <= empty_68_fu_905_p2(63 downto 2);
    trunc_ln42_4_fu_1006_p4 <= empty_66_fu_991_p2(63 downto 2);
    xor_ln30_fu_405_p2 <= (icmp_ln34_fu_393_p2 xor ap_const_lv1_1);
    xor_ln34_fu_457_p2 <= (icmp_ln35_fu_411_p2 xor ap_const_lv1_1);
    zext_ln33_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_fu_429_p3),10));
    zext_ln45_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_reg_1328_pp0_iter4_reg),64));
end behav;
