// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Layer1_Neurons_CPU_address0,
        Layer1_Neurons_CPU_ce0,
        Layer1_Neurons_CPU_q0,
        Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_we0,
        Layer2_Neurons_CPU_d0,
        grp_SIGMOID_fu_77_p_din1,
        grp_SIGMOID_fu_77_p_dout0,
        grp_SIGMOID_fu_77_p_start,
        grp_SIGMOID_fu_77_p_ready,
        grp_SIGMOID_fu_77_p_done,
        grp_SIGMOID_fu_77_p_idle,
        grp_fu_82_p_din0,
        grp_fu_82_p_din1,
        grp_fu_82_p_opcode,
        grp_fu_82_p_dout0,
        grp_fu_82_p_ce,
        grp_fu_86_p_din0,
        grp_fu_86_p_din1,
        grp_fu_86_p_dout0,
        grp_fu_86_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 26'd1;
parameter    ap_ST_fsm_pp0_stage1 = 26'd2;
parameter    ap_ST_fsm_pp0_stage2 = 26'd4;
parameter    ap_ST_fsm_pp0_stage3 = 26'd8;
parameter    ap_ST_fsm_pp0_stage4 = 26'd16;
parameter    ap_ST_fsm_pp0_stage5 = 26'd32;
parameter    ap_ST_fsm_pp0_stage6 = 26'd64;
parameter    ap_ST_fsm_pp0_stage7 = 26'd128;
parameter    ap_ST_fsm_pp0_stage8 = 26'd256;
parameter    ap_ST_fsm_pp0_stage9 = 26'd512;
parameter    ap_ST_fsm_pp0_stage10 = 26'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 26'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 26'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 26'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 26'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 26'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 26'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 26'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 26'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 26'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 26'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 26'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 26'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 26'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 26'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] Layer1_Neurons_CPU_address0;
output   Layer1_Neurons_CPU_ce0;
input  [31:0] Layer1_Neurons_CPU_q0;
output  [9:0] Layer2_Neurons_CPU_address0;
output   Layer2_Neurons_CPU_ce0;
output   Layer2_Neurons_CPU_we0;
output  [31:0] Layer2_Neurons_CPU_d0;
output  [31:0] grp_SIGMOID_fu_77_p_din1;
input  [31:0] grp_SIGMOID_fu_77_p_dout0;
output   grp_SIGMOID_fu_77_p_start;
input   grp_SIGMOID_fu_77_p_ready;
input   grp_SIGMOID_fu_77_p_done;
input   grp_SIGMOID_fu_77_p_idle;
output  [31:0] grp_fu_82_p_din0;
output  [31:0] grp_fu_82_p_din1;
output  [1:0] grp_fu_82_p_opcode;
input  [31:0] grp_fu_82_p_dout0;
output   grp_fu_82_p_ce;
output  [31:0] grp_fu_86_p_din0;
output  [31:0] grp_fu_86_p_din1;
input  [31:0] grp_fu_86_p_dout0;
output   grp_fu_86_p_ce;

reg ap_idle;
reg[9:0] Layer1_Neurons_CPU_address0;
reg Layer1_Neurons_CPU_ce0;
reg Layer2_Neurons_CPU_ce0;
reg Layer2_Neurons_CPU_we0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25_subdone;
reg   [0:0] icmp_ln32_reg_1819;
reg    ap_condition_exit_pp0_iter0_stage25;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [7:0] Layer1_Weights_CPU_address0;
reg    Layer1_Weights_CPU_ce0;
wire   [31:0] Layer1_Weights_CPU_q0;
reg   [31:0] reg_641;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24_11001;
reg   [31:0] reg_646;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_pp0_stage25_11001;
reg   [31:0] reg_652;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_656;
reg   [31:0] reg_661;
reg   [31:0] reg_666;
reg   [31:0] reg_671;
reg   [31:0] reg_676;
reg   [31:0] reg_681;
wire   [0:0] icmp_ln32_fu_715_p2;
reg   [0:0] icmp_ln32_reg_1819_pp0_iter1_reg;
reg   [0:0] icmp_ln32_reg_1819_pp0_iter2_reg;
reg   [0:0] icmp_ln32_reg_1819_pp0_iter3_reg;
wire   [0:0] icmp_ln33_fu_733_p2;
reg   [0:0] icmp_ln33_reg_1823;
wire   [7:0] empty_fu_761_p2;
reg   [7:0] empty_reg_1835;
wire   [3:0] select_ln29_1_fu_848_p3;
reg   [3:0] select_ln29_1_reg_1869;
wire   [9:0] empty_226_fu_876_p2;
reg   [9:0] empty_226_reg_1885;
wire   [4:0] tmp_2_fu_882_p3;
reg   [4:0] tmp_2_reg_1913;
wire   [9:0] zext_ln41_3_fu_890_p1;
reg   [9:0] zext_ln41_3_reg_1924;
wire   [31:0] bitcast_ln41_fu_959_p1;
wire   [9:0] grp_fu_1768_p3;
wire   [31:0] bitcast_ln41_1_fu_993_p1;
wire   [9:0] grp_fu_1776_p3;
reg   [9:0] add_ln44_reg_1984;
reg   [9:0] add_ln44_reg_1984_pp0_iter1_reg;
reg   [9:0] add_ln44_reg_1984_pp0_iter2_reg;
reg   [9:0] add_ln44_reg_1984_pp0_iter3_reg;
reg   [9:0] add_ln44_reg_1984_pp0_iter4_reg;
reg   [31:0] mul27_s_reg_1994;
wire   [31:0] bitcast_ln41_2_fu_1027_p1;
wire   [5:0] zext_ln41_2_fu_1061_p1;
reg   [5:0] zext_ln41_2_reg_2014;
reg   [31:0] mul27_5_reg_2020;
wire   [31:0] bitcast_ln41_3_fu_1064_p1;
reg   [31:0] mul27_6_reg_2040;
wire   [31:0] bitcast_ln41_4_fu_1099_p1;
wire   [31:0] bitcast_ln41_5_fu_1133_p1;
reg   [31:0] mul27_1_reg_2075;
wire   [31:0] bitcast_ln41_6_fu_1167_p1;
reg   [31:0] mul27_1_1_reg_2095;
wire   [31:0] bitcast_ln41_7_fu_1205_p1;
wire   [6:0] zext_ln41_1_fu_1247_p1;
reg   [6:0] zext_ln41_1_reg_2115;
reg   [31:0] mul27_1_2_reg_2128;
wire   [31:0] bitcast_ln41_8_fu_1250_p1;
reg   [31:0] mul27_1_3_reg_2148;
wire   [31:0] bitcast_ln41_9_fu_1285_p1;
reg   [31:0] mul27_1_4_reg_2168;
reg   [31:0] mul27_1_4_reg_2168_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_10_fu_1319_p1;
reg   [31:0] mul27_2_reg_2188;
reg   [31:0] mul27_2_reg_2188_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_11_fu_1353_p1;
reg   [31:0] mul27_2_1_reg_2208;
reg   [31:0] mul27_2_1_reg_2208_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_12_fu_1387_p1;
reg   [31:0] mul27_2_2_reg_2228;
reg   [31:0] mul27_2_2_reg_2228_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_13_fu_1421_p1;
reg   [31:0] mul27_2_3_reg_2248;
reg   [31:0] mul27_2_3_reg_2248_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_14_fu_1455_p1;
reg   [31:0] mul27_2_4_reg_2268;
reg   [31:0] mul27_2_4_reg_2268_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_15_fu_1489_p1;
reg   [31:0] mul27_3_reg_2288;
reg   [31:0] mul27_3_reg_2288_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_16_fu_1523_p1;
reg   [31:0] mul27_3_1_reg_2308;
reg   [31:0] mul27_3_1_reg_2308_pp0_iter1_reg;
wire   [31:0] bitcast_ln41_17_fu_1557_p1;
wire   [7:0] zext_ln41_fu_1591_p1;
reg   [7:0] zext_ln41_reg_2328;
reg   [31:0] mul27_3_2_reg_2336;
reg   [31:0] mul27_3_2_reg_2336_pp0_iter1_reg;
reg   [31:0] mul27_3_2_reg_2336_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_18_fu_1594_p1;
reg   [31:0] mul27_3_3_reg_2356;
reg   [31:0] mul27_3_3_reg_2356_pp0_iter1_reg;
reg   [31:0] mul27_3_3_reg_2356_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_19_fu_1629_p1;
reg   [31:0] mul27_3_4_reg_2376;
reg   [31:0] mul27_3_4_reg_2376_pp0_iter1_reg;
reg   [31:0] mul27_3_4_reg_2376_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_20_fu_1663_p1;
reg   [31:0] mul27_4_reg_2396;
reg   [31:0] mul27_4_reg_2396_pp0_iter1_reg;
reg   [31:0] mul27_4_reg_2396_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_21_fu_1697_p1;
wire   [9:0] add_ln41_24_fu_1730_p2;
reg   [9:0] add_ln41_24_reg_2411;
reg   [31:0] mul27_4_1_reg_2421;
reg   [31:0] mul27_4_1_reg_2421_pp0_iter1_reg;
reg   [31:0] mul27_4_1_reg_2421_pp0_iter2_reg;
wire   [31:0] bitcast_ln41_22_fu_1745_p1;
reg   [31:0] mul27_4_2_reg_2436;
reg   [31:0] mul27_4_2_reg_2436_pp0_iter2_reg;
reg   [31:0] mul27_4_2_reg_2436_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_23_fu_1754_p1;
reg   [31:0] mul27_4_3_reg_2446;
reg   [31:0] mul27_4_3_reg_2446_pp0_iter2_reg;
reg   [31:0] mul27_4_3_reg_2446_pp0_iter3_reg;
wire   [31:0] bitcast_ln41_24_fu_1759_p1;
reg   [31:0] mul27_4_4_reg_2456;
reg   [31:0] mul27_4_4_reg_2456_pp0_iter2_reg;
reg   [31:0] mul27_4_4_reg_2456_pp0_iter3_reg;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage11_subdone;
wire    grp_SIGMOID_fu_625_ap_ready;
reg    grp_SIGMOID_fu_625_ap_start_reg;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire   [63:0] p_cast61_fu_773_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast59_fu_864_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln41_4_fu_900_p1;
wire   [63:0] p_cast62_fu_926_p1;
wire   [63:0] zext_ln41_5_fu_944_p1;
wire   [63:0] p_cast63_fu_954_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln41_7_fu_978_p1;
wire   [63:0] p_cast64_fu_988_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln41_9_fu_1012_p1;
wire   [63:0] p_cast65_fu_1022_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln41_11_fu_1046_p1;
wire   [63:0] p_cast66_fu_1056_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln41_13_fu_1084_p1;
wire   [63:0] p_cast67_fu_1094_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln41_15_fu_1118_p1;
wire   [63:0] p_cast68_fu_1128_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln41_17_fu_1152_p1;
wire   [63:0] p_cast69_fu_1162_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln41_19_fu_1190_p1;
wire   [63:0] p_cast70_fu_1200_p1;
wire   [63:0] zext_ln41_21_fu_1232_p1;
wire   [63:0] p_cast71_fu_1242_p1;
wire   [63:0] zext_ln41_23_fu_1270_p1;
wire   [63:0] p_cast72_fu_1280_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln41_25_fu_1304_p1;
wire   [63:0] p_cast73_fu_1314_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln41_27_fu_1338_p1;
wire   [63:0] p_cast74_fu_1348_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln41_29_fu_1372_p1;
wire   [63:0] p_cast75_fu_1382_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln41_31_fu_1406_p1;
wire   [63:0] p_cast76_fu_1416_p1;
wire    ap_block_pp0_stage16;
wire   [63:0] zext_ln41_33_fu_1440_p1;
wire   [63:0] p_cast77_fu_1450_p1;
wire    ap_block_pp0_stage17;
wire   [63:0] zext_ln41_35_fu_1474_p1;
wire   [63:0] p_cast78_fu_1484_p1;
wire    ap_block_pp0_stage18;
wire   [63:0] zext_ln41_37_fu_1508_p1;
wire   [63:0] p_cast79_fu_1518_p1;
wire    ap_block_pp0_stage19;
wire   [63:0] zext_ln41_39_fu_1542_p1;
wire   [63:0] p_cast80_fu_1552_p1;
wire    ap_block_pp0_stage20;
wire   [63:0] zext_ln41_41_fu_1576_p1;
wire   [63:0] p_cast60_fu_1586_p1;
wire    ap_block_pp0_stage21;
wire   [63:0] zext_ln41_43_fu_1614_p1;
wire   [63:0] p_cast81_fu_1624_p1;
wire    ap_block_pp0_stage22;
wire   [63:0] zext_ln41_45_fu_1648_p1;
wire   [63:0] p_cast82_fu_1658_p1;
wire    ap_block_pp0_stage23;
wire   [63:0] zext_ln41_47_fu_1682_p1;
wire   [63:0] p_cast83_fu_1692_p1;
wire    ap_block_pp0_stage24;
wire   [63:0] zext_ln41_49_fu_1716_p1;
wire   [63:0] p_cast84_fu_1740_p1;
wire    ap_block_pp0_stage25;
wire   [63:0] zext_ln41_51_fu_1750_p1;
wire   [63:0] zext_ln44_fu_1764_p1;
reg   [3:0] k_fu_174;
wire   [3:0] add_ln34_fu_905_p2;
wire    ap_loop_init;
reg   [3:0] j_fu_178;
wire   [3:0] select_ln33_fu_856_p3;
reg   [7:0] indvar_flatten_fu_182;
wire   [7:0] select_ln33_1_fu_784_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] i_fu_186;
wire   [2:0] select_ln32_fu_745_p3;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten12_fu_190;
wire   [9:0] add_ln32_fu_721_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten12_load;
reg   [31:0] grp_fu_633_p0;
reg   [31:0] grp_fu_633_p1;
reg   [31:0] grp_fu_637_p0;
reg   [31:0] grp_fu_637_p1;
wire   [2:0] add_ln32_1_fu_739_p2;
wire   [2:0] empty_fu_761_p0;
wire   [5:0] empty_fu_761_p1;
wire   [7:0] empty_201_fu_767_p2;
wire   [7:0] add_ln33_1_fu_778_p2;
wire   [0:0] icmp_ln34_fu_825_p2;
wire   [0:0] xor_ln29_fu_820_p2;
wire   [3:0] select_ln29_fu_813_p3;
wire   [0:0] and_ln29_fu_831_p2;
wire   [0:0] or_ln29_fu_843_p2;
wire   [3:0] add_ln33_fu_837_p2;
wire   [3:0] empty_226_fu_876_p0;
wire   [6:0] empty_226_fu_876_p1;
wire   [9:0] add_ln41_fu_894_p2;
wire   [7:0] empty_202_fu_921_p2;
wire   [9:0] empty_227_fu_931_p2;
wire   [9:0] add_ln41_1_fu_939_p2;
wire   [7:0] empty_203_fu_949_p2;
wire   [4:0] add_ln41_25_fu_964_p2;
wire   [9:0] zext_ln41_6_fu_969_p1;
wire   [9:0] add_ln41_2_fu_973_p2;
wire   [7:0] empty_204_fu_983_p2;
wire   [4:0] add_ln41_26_fu_998_p2;
wire   [9:0] zext_ln41_8_fu_1003_p1;
wire   [9:0] add_ln41_3_fu_1007_p2;
wire   [7:0] empty_205_fu_1017_p2;
wire   [4:0] add_ln41_27_fu_1032_p2;
wire   [9:0] zext_ln41_10_fu_1037_p1;
wire   [9:0] add_ln41_4_fu_1041_p2;
wire   [7:0] empty_206_fu_1051_p2;
wire   [5:0] add_ln41_28_fu_1069_p2;
wire   [9:0] zext_ln41_12_fu_1075_p1;
wire   [9:0] add_ln41_5_fu_1079_p2;
wire   [7:0] empty_207_fu_1089_p2;
wire   [5:0] add_ln41_29_fu_1104_p2;
wire   [9:0] zext_ln41_14_fu_1109_p1;
wire   [9:0] add_ln41_6_fu_1113_p2;
wire   [7:0] empty_208_fu_1123_p2;
wire   [5:0] add_ln41_30_fu_1138_p2;
wire   [9:0] zext_ln41_16_fu_1143_p1;
wire   [9:0] add_ln41_7_fu_1147_p2;
wire   [7:0] empty_209_fu_1157_p2;
wire   [5:0] zext_ln41_18_cast_fu_1172_p4;
wire   [9:0] zext_ln41_18_fu_1181_p1;
wire   [9:0] add_ln41_8_fu_1185_p2;
wire   [7:0] empty_210_fu_1195_p2;
wire   [4:0] or_ln41_fu_1210_p2;
wire   [5:0] zext_ln41_20_cast_fu_1215_p3;
wire   [9:0] zext_ln41_20_fu_1223_p1;
wire   [9:0] add_ln41_9_fu_1227_p2;
wire   [7:0] empty_211_fu_1237_p2;
wire   [6:0] add_ln41_31_fu_1255_p2;
wire   [9:0] zext_ln41_22_fu_1261_p1;
wire   [9:0] add_ln41_10_fu_1265_p2;
wire   [7:0] empty_212_fu_1275_p2;
wire   [6:0] add_ln41_32_fu_1290_p2;
wire   [9:0] zext_ln41_24_fu_1295_p1;
wire   [9:0] add_ln41_11_fu_1299_p2;
wire   [7:0] empty_213_fu_1309_p2;
wire   [6:0] add_ln41_33_fu_1324_p2;
wire   [9:0] zext_ln41_26_fu_1329_p1;
wire   [9:0] add_ln41_12_fu_1333_p2;
wire   [7:0] empty_214_fu_1343_p2;
wire   [6:0] add_ln41_34_fu_1358_p2;
wire   [9:0] zext_ln41_28_fu_1363_p1;
wire   [9:0] add_ln41_13_fu_1367_p2;
wire   [7:0] empty_215_fu_1377_p2;
wire   [6:0] add_ln41_35_fu_1392_p2;
wire   [9:0] zext_ln41_30_fu_1397_p1;
wire   [9:0] add_ln41_14_fu_1401_p2;
wire   [7:0] empty_216_fu_1411_p2;
wire   [6:0] add_ln41_36_fu_1426_p2;
wire   [9:0] zext_ln41_32_fu_1431_p1;
wire   [9:0] add_ln41_15_fu_1435_p2;
wire   [7:0] empty_217_fu_1445_p2;
wire   [6:0] add_ln41_37_fu_1460_p2;
wire   [9:0] zext_ln41_34_fu_1465_p1;
wire   [9:0] add_ln41_16_fu_1469_p2;
wire   [7:0] empty_218_fu_1479_p2;
wire   [6:0] add_ln41_38_fu_1494_p2;
wire   [9:0] zext_ln41_36_fu_1499_p1;
wire   [9:0] add_ln41_17_fu_1503_p2;
wire   [7:0] empty_219_fu_1513_p2;
wire   [6:0] add_ln41_39_fu_1528_p2;
wire   [9:0] zext_ln41_38_fu_1533_p1;
wire   [9:0] add_ln41_18_fu_1537_p2;
wire   [7:0] empty_220_fu_1547_p2;
wire   [6:0] add_ln41_40_fu_1562_p2;
wire   [9:0] zext_ln41_40_fu_1567_p1;
wire   [9:0] add_ln41_19_fu_1571_p2;
wire   [7:0] empty_200_fu_1581_p2;
wire   [7:0] add_ln41_41_fu_1599_p2;
wire   [9:0] zext_ln41_42_fu_1605_p1;
wire   [9:0] add_ln41_20_fu_1609_p2;
wire   [7:0] empty_221_fu_1619_p2;
wire   [7:0] add_ln41_42_fu_1634_p2;
wire   [9:0] zext_ln41_44_fu_1639_p1;
wire   [9:0] add_ln41_21_fu_1643_p2;
wire   [7:0] empty_222_fu_1653_p2;
wire   [7:0] add_ln41_43_fu_1668_p2;
wire   [9:0] zext_ln41_46_fu_1673_p1;
wire   [9:0] add_ln41_22_fu_1677_p2;
wire   [7:0] empty_223_fu_1687_p2;
wire   [7:0] add_ln41_44_fu_1702_p2;
wire   [9:0] zext_ln41_48_fu_1707_p1;
wire   [9:0] add_ln41_23_fu_1711_p2;
wire   [7:0] add_ln41_45_fu_1721_p2;
wire   [9:0] zext_ln41_50_fu_1726_p1;
wire   [7:0] empty_224_fu_1735_p2;
wire   [2:0] grp_fu_1768_p0;
wire   [7:0] grp_fu_1768_p1;
wire   [3:0] grp_fu_1768_p2;
wire   [3:0] grp_fu_1776_p0;
wire   [3:0] grp_fu_1776_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage11;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [25:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage13_00001;
wire    ap_block_pp0_stage17_00001;
wire    ap_block_pp0_stage21_00001;
wire    ap_block_pp0_stage25_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage11_00001;
wire    ap_block_pp0_stage15_00001;
wire    ap_block_pp0_stage19_00001;
wire    ap_block_pp0_stage23_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage14_00001;
wire    ap_block_pp0_stage18_00001;
wire    ap_block_pp0_stage22_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage16_00001;
wire    ap_block_pp0_stage20_00001;
wire    ap_block_pp0_stage24_00001;
wire   [9:0] empty_226_fu_876_p00;
wire   [7:0] empty_fu_761_p00;
wire   [9:0] grp_fu_1768_p00;
wire   [9:0] grp_fu_1768_p20;
wire   [7:0] grp_fu_1776_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_SIGMOID_fu_625_ap_start_reg = 1'b0;
#0 k_fu_174 = 4'd0;
#0 j_fu_178 = 4'd0;
#0 indvar_flatten_fu_182 = 8'd0;
#0 i_fu_186 = 3'd0;
#0 indvar_flatten12_fu_190 = 10'd0;
#0 ap_done_reg = 1'b0;
end

cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_Layebkb #(
    .DataWidth( 32 ),
    .AddressRange( 156 ),
    .AddressWidth( 8 ))
Layer1_Weights_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Layer1_Weights_CPU_address0),
    .ce0(Layer1_Weights_CPU_ce0),
    .q0(Layer1_Weights_CPU_q0)
);

cnn_lenet_mul_3ns_6ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
mul_3ns_6ns_8_1_1_U13(
    .din0(empty_fu_761_p0),
    .din1(empty_fu_761_p1),
    .dout(empty_fu_761_p2)
);

cnn_lenet_mul_4ns_7ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_4ns_7ns_10_1_1_U14(
    .din0(empty_226_fu_876_p0),
    .din1(empty_226_fu_876_p1),
    .dout(empty_226_fu_876_p2)
);

cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_8ns_4ns_10_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1768_p0),
    .din1(grp_fu_1768_p1),
    .din2(grp_fu_1768_p2),
    .ce(1'b1),
    .dout(grp_fu_1768_p3)
);

cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_4ns_4ns_10ns_10_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1776_p0),
    .din1(grp_fu_1776_p1),
    .din2(grp_fu_1768_p3),
    .ce(1'b1),
    .dout(grp_fu_1776_p3)
);

cnn_lenet_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage25),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage25)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SIGMOID_fu_625_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_SIGMOID_fu_625_ap_start_reg <= 1'b1;
        end else if ((grp_SIGMOID_fu_625_ap_ready == 1'b1)) begin
            grp_SIGMOID_fu_625_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage11) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage11) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage11) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln32_fu_715_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_186 <= select_ln32_fu_745_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_186 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln32_fu_715_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten12_fu_190 <= add_ln32_fu_721_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten12_fu_190 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln32_fu_715_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_182 <= select_ln33_1_fu_784_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_182 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_178 <= 4'd0;
    end else if (((icmp_ln32_reg_1819 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_178 <= select_ln33_fu_856_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_174 <= 4'd0;
    end else if (((icmp_ln32_reg_1819 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        k_fu_174 <= add_ln34_fu_905_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        add_ln41_24_reg_2411 <= add_ln41_24_fu_1730_p2;
        mul27_4_reg_2396_pp0_iter1_reg <= mul27_4_reg_2396;
        mul27_4_reg_2396_pp0_iter2_reg <= mul27_4_reg_2396_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln44_reg_1984 <= grp_fu_1776_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln44_reg_1984_pp0_iter1_reg <= add_ln44_reg_1984;
        add_ln44_reg_1984_pp0_iter2_reg <= add_ln44_reg_1984_pp0_iter1_reg;
        add_ln44_reg_1984_pp0_iter3_reg <= add_ln44_reg_1984_pp0_iter2_reg;
        add_ln44_reg_1984_pp0_iter4_reg <= add_ln44_reg_1984_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_226_reg_1885 <= empty_226_fu_876_p2;
        mul27_4_3_reg_2446_pp0_iter2_reg <= mul27_4_3_reg_2446;
        mul27_4_3_reg_2446_pp0_iter3_reg <= mul27_4_3_reg_2446_pp0_iter2_reg;
        select_ln29_1_reg_1869 <= select_ln29_1_fu_848_p3;
        tmp_2_reg_1913[4 : 1] <= tmp_2_fu_882_p3[4 : 1];
        zext_ln41_3_reg_1924[4 : 1] <= zext_ln41_3_fu_890_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_1835 <= empty_fu_761_p2;
        icmp_ln32_reg_1819 <= icmp_ln32_fu_715_p2;
        icmp_ln32_reg_1819_pp0_iter1_reg <= icmp_ln32_reg_1819;
        icmp_ln32_reg_1819_pp0_iter2_reg <= icmp_ln32_reg_1819_pp0_iter1_reg;
        icmp_ln32_reg_1819_pp0_iter3_reg <= icmp_ln32_reg_1819_pp0_iter2_reg;
        icmp_ln33_reg_1823 <= icmp_ln33_fu_733_p2;
        mul27_4_2_reg_2436_pp0_iter2_reg <= mul27_4_2_reg_2436;
        mul27_4_2_reg_2436_pp0_iter3_reg <= mul27_4_2_reg_2436_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul27_1_1_reg_2095 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul27_1_2_reg_2128 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul27_1_3_reg_2148 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul27_1_4_reg_2168 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul27_1_4_reg_2168_pp0_iter1_reg <= mul27_1_4_reg_2168;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul27_1_reg_2075 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul27_2_1_reg_2208 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul27_2_1_reg_2208_pp0_iter1_reg <= mul27_2_1_reg_2208;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        mul27_2_2_reg_2228 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        mul27_2_2_reg_2228_pp0_iter1_reg <= mul27_2_2_reg_2228;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul27_2_3_reg_2248 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul27_2_3_reg_2248_pp0_iter1_reg <= mul27_2_3_reg_2248;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul27_2_4_reg_2268 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul27_2_4_reg_2268_pp0_iter1_reg <= mul27_2_4_reg_2268;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul27_2_reg_2188 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul27_2_reg_2188_pp0_iter1_reg <= mul27_2_reg_2188;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        mul27_3_1_reg_2308 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        mul27_3_1_reg_2308_pp0_iter1_reg <= mul27_3_1_reg_2308;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        mul27_3_2_reg_2336 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        mul27_3_2_reg_2336_pp0_iter1_reg <= mul27_3_2_reg_2336;
        mul27_3_2_reg_2336_pp0_iter2_reg <= mul27_3_2_reg_2336_pp0_iter1_reg;
        zext_ln41_reg_2328[4 : 1] <= zext_ln41_fu_1591_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul27_3_3_reg_2356 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul27_3_3_reg_2356_pp0_iter1_reg <= mul27_3_3_reg_2356;
        mul27_3_3_reg_2356_pp0_iter2_reg <= mul27_3_3_reg_2356_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul27_3_4_reg_2376 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul27_3_4_reg_2376_pp0_iter1_reg <= mul27_3_4_reg_2376;
        mul27_3_4_reg_2376_pp0_iter2_reg <= mul27_3_4_reg_2376_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul27_3_reg_2288 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul27_3_reg_2288_pp0_iter1_reg <= mul27_3_reg_2288;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        mul27_4_1_reg_2421 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        mul27_4_1_reg_2421_pp0_iter1_reg <= mul27_4_1_reg_2421;
        mul27_4_1_reg_2421_pp0_iter2_reg <= mul27_4_1_reg_2421_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul27_4_2_reg_2436 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul27_4_3_reg_2446 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul27_4_4_reg_2456 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul27_4_4_reg_2456_pp0_iter2_reg <= mul27_4_4_reg_2456;
        mul27_4_4_reg_2456_pp0_iter3_reg <= mul27_4_4_reg_2456_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        mul27_4_reg_2396 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul27_5_reg_2020 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul27_6_reg_2040 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul27_s_reg_1994 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_641 <= Layer1_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_646 <= Layer1_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_652 <= Layer1_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_656 <= Layer1_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_661 <= grp_fu_86_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_666 <= grp_fu_82_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_671 <= grp_fu_82_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_676 <= grp_fu_82_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_681 <= grp_fu_82_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        zext_ln41_1_reg_2115[4 : 1] <= zext_ln41_1_fu_1247_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        zext_ln41_2_reg_2014[4 : 1] <= zext_ln41_2_fu_1061_p1[4 : 1];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_51_fu_1750_p1;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_49_fu_1716_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_47_fu_1682_p1;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_45_fu_1648_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_43_fu_1614_p1;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_41_fu_1576_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_39_fu_1542_p1;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_37_fu_1508_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_35_fu_1474_p1;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_33_fu_1440_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_31_fu_1406_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_29_fu_1372_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_27_fu_1338_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_25_fu_1304_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_23_fu_1270_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_21_fu_1232_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_19_fu_1190_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_17_fu_1152_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_15_fu_1118_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_13_fu_1084_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_11_fu_1046_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_9_fu_1012_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_7_fu_978_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_5_fu_944_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Layer1_Neurons_CPU_address0 = zext_ln41_4_fu_900_p1;
        end else begin
            Layer1_Neurons_CPU_address0 = 'bx;
        end
    end else begin
        Layer1_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Layer1_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer1_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            Layer1_Weights_CPU_address0 = p_cast84_fu_1740_p1;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            Layer1_Weights_CPU_address0 = p_cast83_fu_1692_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            Layer1_Weights_CPU_address0 = p_cast82_fu_1658_p1;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            Layer1_Weights_CPU_address0 = p_cast81_fu_1624_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            Layer1_Weights_CPU_address0 = p_cast60_fu_1586_p1;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            Layer1_Weights_CPU_address0 = p_cast80_fu_1552_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            Layer1_Weights_CPU_address0 = p_cast79_fu_1518_p1;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            Layer1_Weights_CPU_address0 = p_cast78_fu_1484_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            Layer1_Weights_CPU_address0 = p_cast77_fu_1450_p1;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            Layer1_Weights_CPU_address0 = p_cast76_fu_1416_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            Layer1_Weights_CPU_address0 = p_cast75_fu_1382_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            Layer1_Weights_CPU_address0 = p_cast74_fu_1348_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            Layer1_Weights_CPU_address0 = p_cast73_fu_1314_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            Layer1_Weights_CPU_address0 = p_cast72_fu_1280_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            Layer1_Weights_CPU_address0 = p_cast71_fu_1242_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            Layer1_Weights_CPU_address0 = p_cast70_fu_1200_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Layer1_Weights_CPU_address0 = p_cast69_fu_1162_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Layer1_Weights_CPU_address0 = p_cast68_fu_1128_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Layer1_Weights_CPU_address0 = p_cast67_fu_1094_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Layer1_Weights_CPU_address0 = p_cast66_fu_1056_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Layer1_Weights_CPU_address0 = p_cast65_fu_1022_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Layer1_Weights_CPU_address0 = p_cast64_fu_988_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Layer1_Weights_CPU_address0 = p_cast63_fu_954_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Layer1_Weights_CPU_address0 = p_cast62_fu_926_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Layer1_Weights_CPU_address0 = p_cast59_fu_864_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Layer1_Weights_CPU_address0 = p_cast61_fu_773_p1;
        end else begin
            Layer1_Weights_CPU_address0 = 'bx;
        end
    end else begin
        Layer1_Weights_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Layer1_Weights_CPU_ce0 = 1'b1;
    end else begin
        Layer1_Weights_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_reg_1819 == 1'd1) & (1'b0 == ap_block_pp0_stage25_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_condition_exit_pp0_iter0_stage25 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage25 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln32_reg_1819_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_condition_exit_pp0_iter3_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage25_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_186;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten12_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten12_load = indvar_flatten12_fu_190;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_182;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_633_p0 = reg_681;
    end else if ((((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_633_p0 = reg_676;
    end else if ((((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_633_p0 = reg_671;
    end else if ((((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_633_p0 = reg_666;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_633_p0 = reg_646;
    end else begin
        grp_fu_633_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_633_p1 = mul27_4_4_reg_2456_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_633_p1 = mul27_4_3_reg_2446_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_633_p1 = mul27_4_2_reg_2436_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_633_p1 = mul27_4_1_reg_2421_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_633_p1 = mul27_4_reg_2396_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_633_p1 = mul27_3_4_reg_2376_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_633_p1 = mul27_3_3_reg_2356_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_633_p1 = mul27_3_2_reg_2336_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_633_p1 = mul27_3_1_reg_2308_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_633_p1 = mul27_3_reg_2288_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_633_p1 = mul27_2_4_reg_2268_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_633_p1 = mul27_2_3_reg_2248_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_633_p1 = mul27_2_2_reg_2228_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_633_p1 = mul27_2_1_reg_2208_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_633_p1 = mul27_2_reg_2188_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_633_p1 = mul27_1_4_reg_2168_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_633_p1 = mul27_1_3_reg_2148;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_633_p1 = mul27_1_2_reg_2128;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_633_p1 = mul27_1_1_reg_2095;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_633_p1 = mul27_1_reg_2075;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_633_p1 = mul27_6_reg_2040;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_633_p1 = mul27_5_reg_2020;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_633_p1 = mul27_s_reg_1994;
    end else if ((((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_633_p1 = reg_661;
    end else begin
        grp_fu_633_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_637_p0 = reg_646;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_637_p0 = reg_656;
    end else if ((((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) 
    | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_637_p0 = reg_641;
    end else begin
        grp_fu_637_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_637_p1 = bitcast_ln41_24_fu_1759_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_637_p1 = bitcast_ln41_23_fu_1754_p1;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_637_p1 = bitcast_ln41_22_fu_1745_p1;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_637_p1 = bitcast_ln41_21_fu_1697_p1;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_637_p1 = bitcast_ln41_20_fu_1663_p1;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_637_p1 = bitcast_ln41_19_fu_1629_p1;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_637_p1 = bitcast_ln41_18_fu_1594_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_637_p1 = bitcast_ln41_17_fu_1557_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_637_p1 = bitcast_ln41_16_fu_1523_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_637_p1 = bitcast_ln41_15_fu_1489_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_637_p1 = bitcast_ln41_14_fu_1455_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_637_p1 = bitcast_ln41_13_fu_1421_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_637_p1 = bitcast_ln41_12_fu_1387_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_637_p1 = bitcast_ln41_11_fu_1353_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_637_p1 = bitcast_ln41_10_fu_1319_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_637_p1 = bitcast_ln41_9_fu_1285_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_637_p1 = bitcast_ln41_8_fu_1250_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_637_p1 = bitcast_ln41_7_fu_1205_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_637_p1 = bitcast_ln41_6_fu_1167_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_637_p1 = bitcast_ln41_5_fu_1133_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_637_p1 = bitcast_ln41_4_fu_1099_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_637_p1 = bitcast_ln41_3_fu_1064_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_637_p1 = bitcast_ln41_2_fu_1027_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_637_p1 = bitcast_ln41_1_fu_993_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_637_p1 = bitcast_ln41_fu_959_p1;
    end else begin
        grp_fu_637_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter3_stage11) & (ap_idle_pp0_0to2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Layer2_Neurons_CPU_address0 = zext_ln44_fu_1764_p1;

assign Layer2_Neurons_CPU_d0 = grp_SIGMOID_fu_77_p_dout0;

assign add_ln32_1_fu_739_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln32_fu_721_p2 = (ap_sig_allocacmp_indvar_flatten12_load + 10'd1);

assign add_ln33_1_fu_778_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln33_fu_837_p2 = (select_ln29_fu_813_p3 + 4'd1);

assign add_ln34_fu_905_p2 = (select_ln29_1_fu_848_p3 + 4'd1);

assign add_ln41_10_fu_1265_p2 = (zext_ln41_22_fu_1261_p1 + empty_226_reg_1885);

assign add_ln41_11_fu_1299_p2 = (zext_ln41_24_fu_1295_p1 + empty_226_reg_1885);

assign add_ln41_12_fu_1333_p2 = (zext_ln41_26_fu_1329_p1 + empty_226_reg_1885);

assign add_ln41_13_fu_1367_p2 = (zext_ln41_28_fu_1363_p1 + empty_226_reg_1885);

assign add_ln41_14_fu_1401_p2 = (zext_ln41_30_fu_1397_p1 + empty_226_reg_1885);

assign add_ln41_15_fu_1435_p2 = (zext_ln41_32_fu_1431_p1 + empty_226_reg_1885);

assign add_ln41_16_fu_1469_p2 = (zext_ln41_34_fu_1465_p1 + empty_226_reg_1885);

assign add_ln41_17_fu_1503_p2 = (zext_ln41_36_fu_1499_p1 + empty_226_reg_1885);

assign add_ln41_18_fu_1537_p2 = (zext_ln41_38_fu_1533_p1 + empty_226_reg_1885);

assign add_ln41_19_fu_1571_p2 = (zext_ln41_40_fu_1567_p1 + empty_226_reg_1885);

assign add_ln41_1_fu_939_p2 = (zext_ln41_3_reg_1924 + empty_227_fu_931_p2);

assign add_ln41_20_fu_1609_p2 = (zext_ln41_42_fu_1605_p1 + empty_226_reg_1885);

assign add_ln41_21_fu_1643_p2 = (zext_ln41_44_fu_1639_p1 + empty_226_reg_1885);

assign add_ln41_22_fu_1677_p2 = (zext_ln41_46_fu_1673_p1 + empty_226_reg_1885);

assign add_ln41_23_fu_1711_p2 = (zext_ln41_48_fu_1707_p1 + empty_226_reg_1885);

assign add_ln41_24_fu_1730_p2 = (zext_ln41_50_fu_1726_p1 + empty_226_reg_1885);

assign add_ln41_25_fu_964_p2 = (tmp_2_reg_1913 + 5'd2);

assign add_ln41_26_fu_998_p2 = (tmp_2_reg_1913 + 5'd3);

assign add_ln41_27_fu_1032_p2 = (tmp_2_reg_1913 + 5'd4);

assign add_ln41_28_fu_1069_p2 = (zext_ln41_2_fu_1061_p1 + 6'd29);

assign add_ln41_29_fu_1104_p2 = (zext_ln41_2_reg_2014 + 6'd30);

assign add_ln41_2_fu_973_p2 = (zext_ln41_6_fu_969_p1 + empty_226_reg_1885);

assign add_ln41_30_fu_1138_p2 = (zext_ln41_2_reg_2014 + 6'd31);

assign add_ln41_31_fu_1255_p2 = (zext_ln41_1_fu_1247_p1 + 7'd58);

assign add_ln41_32_fu_1290_p2 = (zext_ln41_1_reg_2115 + 7'd59);

assign add_ln41_33_fu_1324_p2 = (zext_ln41_1_reg_2115 + 7'd60);

assign add_ln41_34_fu_1358_p2 = (zext_ln41_1_reg_2115 + 7'd61);

assign add_ln41_35_fu_1392_p2 = (zext_ln41_1_reg_2115 + 7'd62);

assign add_ln41_36_fu_1426_p2 = ($signed(zext_ln41_1_reg_2115) + $signed(7'd87));

assign add_ln41_37_fu_1460_p2 = ($signed(zext_ln41_1_reg_2115) + $signed(7'd88));

assign add_ln41_38_fu_1494_p2 = ($signed(zext_ln41_1_reg_2115) + $signed(7'd89));

assign add_ln41_39_fu_1528_p2 = ($signed(zext_ln41_1_reg_2115) + $signed(7'd90));

assign add_ln41_3_fu_1007_p2 = (zext_ln41_8_fu_1003_p1 + empty_226_reg_1885);

assign add_ln41_40_fu_1562_p2 = ($signed(zext_ln41_1_reg_2115) + $signed(7'd91));

assign add_ln41_41_fu_1599_p2 = (zext_ln41_fu_1591_p1 + 8'd116);

assign add_ln41_42_fu_1634_p2 = (zext_ln41_reg_2328 + 8'd117);

assign add_ln41_43_fu_1668_p2 = (zext_ln41_reg_2328 + 8'd118);

assign add_ln41_44_fu_1702_p2 = (zext_ln41_reg_2328 + 8'd119);

assign add_ln41_45_fu_1721_p2 = (zext_ln41_reg_2328 + 8'd120);

assign add_ln41_4_fu_1041_p2 = (zext_ln41_10_fu_1037_p1 + empty_226_reg_1885);

assign add_ln41_5_fu_1079_p2 = (zext_ln41_12_fu_1075_p1 + empty_226_reg_1885);

assign add_ln41_6_fu_1113_p2 = (zext_ln41_14_fu_1109_p1 + empty_226_reg_1885);

assign add_ln41_7_fu_1147_p2 = (zext_ln41_16_fu_1143_p1 + empty_226_reg_1885);

assign add_ln41_8_fu_1185_p2 = (zext_ln41_18_fu_1181_p1 + empty_226_reg_1885);

assign add_ln41_9_fu_1227_p2 = (zext_ln41_20_fu_1223_p1 + empty_226_reg_1885);

assign add_ln41_fu_894_p2 = (zext_ln41_3_fu_890_p1 + empty_226_fu_876_p2);

assign and_ln29_fu_831_p2 = (xor_ln29_fu_820_p2 & icmp_ln34_fu_825_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage25;

assign bitcast_ln41_10_fu_1319_p1 = reg_652;

assign bitcast_ln41_11_fu_1353_p1 = reg_652;

assign bitcast_ln41_12_fu_1387_p1 = reg_652;

assign bitcast_ln41_13_fu_1421_p1 = reg_652;

assign bitcast_ln41_14_fu_1455_p1 = reg_652;

assign bitcast_ln41_15_fu_1489_p1 = reg_652;

assign bitcast_ln41_16_fu_1523_p1 = reg_652;

assign bitcast_ln41_17_fu_1557_p1 = reg_652;

assign bitcast_ln41_18_fu_1594_p1 = reg_652;

assign bitcast_ln41_19_fu_1629_p1 = reg_652;

assign bitcast_ln41_1_fu_993_p1 = reg_652;

assign bitcast_ln41_20_fu_1663_p1 = reg_652;

assign bitcast_ln41_21_fu_1697_p1 = reg_652;

assign bitcast_ln41_22_fu_1745_p1 = reg_652;

assign bitcast_ln41_23_fu_1754_p1 = reg_652;

assign bitcast_ln41_24_fu_1759_p1 = reg_652;

assign bitcast_ln41_2_fu_1027_p1 = reg_652;

assign bitcast_ln41_3_fu_1064_p1 = reg_652;

assign bitcast_ln41_4_fu_1099_p1 = reg_652;

assign bitcast_ln41_5_fu_1133_p1 = reg_652;

assign bitcast_ln41_6_fu_1167_p1 = reg_652;

assign bitcast_ln41_7_fu_1205_p1 = reg_652;

assign bitcast_ln41_8_fu_1250_p1 = reg_652;

assign bitcast_ln41_9_fu_1285_p1 = reg_652;

assign bitcast_ln41_fu_959_p1 = reg_652;

assign empty_200_fu_1581_p2 = (empty_reg_1835 + 8'd21);

assign empty_201_fu_767_p2 = (empty_fu_761_p2 | 8'd1);

assign empty_202_fu_921_p2 = (empty_reg_1835 + 8'd2);

assign empty_203_fu_949_p2 = (empty_reg_1835 + 8'd3);

assign empty_204_fu_983_p2 = (empty_reg_1835 + 8'd4);

assign empty_205_fu_1017_p2 = (empty_reg_1835 + 8'd5);

assign empty_206_fu_1051_p2 = (empty_reg_1835 + 8'd6);

assign empty_207_fu_1089_p2 = (empty_reg_1835 + 8'd7);

assign empty_208_fu_1123_p2 = (empty_reg_1835 + 8'd8);

assign empty_209_fu_1157_p2 = (empty_reg_1835 + 8'd9);

assign empty_210_fu_1195_p2 = (empty_reg_1835 + 8'd10);

assign empty_211_fu_1237_p2 = (empty_reg_1835 + 8'd11);

assign empty_212_fu_1275_p2 = (empty_reg_1835 + 8'd12);

assign empty_213_fu_1309_p2 = (empty_reg_1835 + 8'd13);

assign empty_214_fu_1343_p2 = (empty_reg_1835 + 8'd14);

assign empty_215_fu_1377_p2 = (empty_reg_1835 + 8'd15);

assign empty_216_fu_1411_p2 = (empty_reg_1835 + 8'd16);

assign empty_217_fu_1445_p2 = (empty_reg_1835 + 8'd17);

assign empty_218_fu_1479_p2 = (empty_reg_1835 + 8'd18);

assign empty_219_fu_1513_p2 = (empty_reg_1835 + 8'd19);

assign empty_220_fu_1547_p2 = (empty_reg_1835 + 8'd20);

assign empty_221_fu_1619_p2 = (empty_reg_1835 + 8'd22);

assign empty_222_fu_1653_p2 = (empty_reg_1835 + 8'd23);

assign empty_223_fu_1687_p2 = (empty_reg_1835 + 8'd24);

assign empty_224_fu_1735_p2 = (empty_reg_1835 + 8'd25);

assign empty_226_fu_876_p0 = empty_226_fu_876_p00;

assign empty_226_fu_876_p00 = select_ln33_fu_856_p3;

assign empty_226_fu_876_p1 = 10'd58;

assign empty_227_fu_931_p2 = (empty_226_reg_1885 | 10'd1);

assign empty_fu_761_p0 = empty_fu_761_p00;

assign empty_fu_761_p00 = select_ln32_fu_745_p3;

assign empty_fu_761_p1 = 8'd26;

assign grp_SIGMOID_fu_625_ap_ready = grp_SIGMOID_fu_77_p_ready;

assign grp_SIGMOID_fu_77_p_din1 = reg_681;

assign grp_SIGMOID_fu_77_p_start = grp_SIGMOID_fu_625_ap_start_reg;

assign grp_fu_1768_p0 = grp_fu_1768_p00;

assign grp_fu_1768_p00 = select_ln32_fu_745_p3;

assign grp_fu_1768_p1 = 10'd169;

assign grp_fu_1768_p2 = grp_fu_1768_p20;

assign grp_fu_1768_p20 = select_ln29_1_reg_1869;

assign grp_fu_1776_p0 = grp_fu_1776_p00;

assign grp_fu_1776_p00 = select_ln33_fu_856_p3;

assign grp_fu_1776_p1 = 8'd13;

assign grp_fu_82_p_ce = 1'b1;

assign grp_fu_82_p_din0 = grp_fu_633_p0;

assign grp_fu_82_p_din1 = grp_fu_633_p1;

assign grp_fu_82_p_opcode = 2'd0;

assign grp_fu_86_p_ce = 1'b1;

assign grp_fu_86_p_din0 = grp_fu_637_p0;

assign grp_fu_86_p_din1 = grp_fu_637_p1;

assign icmp_ln32_fu_715_p2 = ((ap_sig_allocacmp_indvar_flatten12_load == 10'd1014) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_733_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd169) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_825_p2 = ((k_fu_174 == 4'd13) ? 1'b1 : 1'b0);

assign or_ln29_fu_843_p2 = (icmp_ln33_reg_1823 | and_ln29_fu_831_p2);

assign or_ln41_fu_1210_p2 = (tmp_2_reg_1913 | 5'd1);

assign p_cast59_fu_864_p1 = empty_reg_1835;

assign p_cast60_fu_1586_p1 = empty_200_fu_1581_p2;

assign p_cast61_fu_773_p1 = empty_201_fu_767_p2;

assign p_cast62_fu_926_p1 = empty_202_fu_921_p2;

assign p_cast63_fu_954_p1 = empty_203_fu_949_p2;

assign p_cast64_fu_988_p1 = empty_204_fu_983_p2;

assign p_cast65_fu_1022_p1 = empty_205_fu_1017_p2;

assign p_cast66_fu_1056_p1 = empty_206_fu_1051_p2;

assign p_cast67_fu_1094_p1 = empty_207_fu_1089_p2;

assign p_cast68_fu_1128_p1 = empty_208_fu_1123_p2;

assign p_cast69_fu_1162_p1 = empty_209_fu_1157_p2;

assign p_cast70_fu_1200_p1 = empty_210_fu_1195_p2;

assign p_cast71_fu_1242_p1 = empty_211_fu_1237_p2;

assign p_cast72_fu_1280_p1 = empty_212_fu_1275_p2;

assign p_cast73_fu_1314_p1 = empty_213_fu_1309_p2;

assign p_cast74_fu_1348_p1 = empty_214_fu_1343_p2;

assign p_cast75_fu_1382_p1 = empty_215_fu_1377_p2;

assign p_cast76_fu_1416_p1 = empty_216_fu_1411_p2;

assign p_cast77_fu_1450_p1 = empty_217_fu_1445_p2;

assign p_cast78_fu_1484_p1 = empty_218_fu_1479_p2;

assign p_cast79_fu_1518_p1 = empty_219_fu_1513_p2;

assign p_cast80_fu_1552_p1 = empty_220_fu_1547_p2;

assign p_cast81_fu_1624_p1 = empty_221_fu_1619_p2;

assign p_cast82_fu_1658_p1 = empty_222_fu_1653_p2;

assign p_cast83_fu_1692_p1 = empty_223_fu_1687_p2;

assign p_cast84_fu_1740_p1 = empty_224_fu_1735_p2;

assign select_ln29_1_fu_848_p3 = ((or_ln29_fu_843_p2[0:0] == 1'b1) ? 4'd0 : k_fu_174);

assign select_ln29_fu_813_p3 = ((icmp_ln33_reg_1823[0:0] == 1'b1) ? 4'd0 : j_fu_178);

assign select_ln32_fu_745_p3 = ((icmp_ln33_fu_733_p2[0:0] == 1'b1) ? add_ln32_1_fu_739_p2 : ap_sig_allocacmp_i_load);

assign select_ln33_1_fu_784_p3 = ((icmp_ln33_fu_733_p2[0:0] == 1'b1) ? 8'd1 : add_ln33_1_fu_778_p2);

assign select_ln33_fu_856_p3 = ((and_ln29_fu_831_p2[0:0] == 1'b1) ? add_ln33_fu_837_p2 : select_ln29_fu_813_p3);

assign tmp_2_fu_882_p3 = {{select_ln29_1_fu_848_p3}, {1'd0}};

assign xor_ln29_fu_820_p2 = (icmp_ln33_reg_1823 ^ 1'd1);

assign zext_ln41_10_fu_1037_p1 = add_ln41_27_fu_1032_p2;

assign zext_ln41_11_fu_1046_p1 = add_ln41_4_fu_1041_p2;

assign zext_ln41_12_fu_1075_p1 = add_ln41_28_fu_1069_p2;

assign zext_ln41_13_fu_1084_p1 = add_ln41_5_fu_1079_p2;

assign zext_ln41_14_fu_1109_p1 = add_ln41_29_fu_1104_p2;

assign zext_ln41_15_fu_1118_p1 = add_ln41_6_fu_1113_p2;

assign zext_ln41_16_fu_1143_p1 = add_ln41_30_fu_1138_p2;

assign zext_ln41_17_fu_1152_p1 = add_ln41_7_fu_1147_p2;

assign zext_ln41_18_cast_fu_1172_p4 = {{{{1'd1}, {select_ln29_1_reg_1869}}}, {1'd0}};

assign zext_ln41_18_fu_1181_p1 = zext_ln41_18_cast_fu_1172_p4;

assign zext_ln41_19_fu_1190_p1 = add_ln41_8_fu_1185_p2;

assign zext_ln41_1_fu_1247_p1 = tmp_2_reg_1913;

assign zext_ln41_20_cast_fu_1215_p3 = {{1'd1}, {or_ln41_fu_1210_p2}};

assign zext_ln41_20_fu_1223_p1 = zext_ln41_20_cast_fu_1215_p3;

assign zext_ln41_21_fu_1232_p1 = add_ln41_9_fu_1227_p2;

assign zext_ln41_22_fu_1261_p1 = add_ln41_31_fu_1255_p2;

assign zext_ln41_23_fu_1270_p1 = add_ln41_10_fu_1265_p2;

assign zext_ln41_24_fu_1295_p1 = add_ln41_32_fu_1290_p2;

assign zext_ln41_25_fu_1304_p1 = add_ln41_11_fu_1299_p2;

assign zext_ln41_26_fu_1329_p1 = add_ln41_33_fu_1324_p2;

assign zext_ln41_27_fu_1338_p1 = add_ln41_12_fu_1333_p2;

assign zext_ln41_28_fu_1363_p1 = add_ln41_34_fu_1358_p2;

assign zext_ln41_29_fu_1372_p1 = add_ln41_13_fu_1367_p2;

assign zext_ln41_2_fu_1061_p1 = tmp_2_reg_1913;

assign zext_ln41_30_fu_1397_p1 = add_ln41_35_fu_1392_p2;

assign zext_ln41_31_fu_1406_p1 = add_ln41_14_fu_1401_p2;

assign zext_ln41_32_fu_1431_p1 = add_ln41_36_fu_1426_p2;

assign zext_ln41_33_fu_1440_p1 = add_ln41_15_fu_1435_p2;

assign zext_ln41_34_fu_1465_p1 = add_ln41_37_fu_1460_p2;

assign zext_ln41_35_fu_1474_p1 = add_ln41_16_fu_1469_p2;

assign zext_ln41_36_fu_1499_p1 = add_ln41_38_fu_1494_p2;

assign zext_ln41_37_fu_1508_p1 = add_ln41_17_fu_1503_p2;

assign zext_ln41_38_fu_1533_p1 = add_ln41_39_fu_1528_p2;

assign zext_ln41_39_fu_1542_p1 = add_ln41_18_fu_1537_p2;

assign zext_ln41_3_fu_890_p1 = tmp_2_fu_882_p3;

assign zext_ln41_40_fu_1567_p1 = add_ln41_40_fu_1562_p2;

assign zext_ln41_41_fu_1576_p1 = add_ln41_19_fu_1571_p2;

assign zext_ln41_42_fu_1605_p1 = add_ln41_41_fu_1599_p2;

assign zext_ln41_43_fu_1614_p1 = add_ln41_20_fu_1609_p2;

assign zext_ln41_44_fu_1639_p1 = add_ln41_42_fu_1634_p2;

assign zext_ln41_45_fu_1648_p1 = add_ln41_21_fu_1643_p2;

assign zext_ln41_46_fu_1673_p1 = add_ln41_43_fu_1668_p2;

assign zext_ln41_47_fu_1682_p1 = add_ln41_22_fu_1677_p2;

assign zext_ln41_48_fu_1707_p1 = add_ln41_44_fu_1702_p2;

assign zext_ln41_49_fu_1716_p1 = add_ln41_23_fu_1711_p2;

assign zext_ln41_4_fu_900_p1 = add_ln41_fu_894_p2;

assign zext_ln41_50_fu_1726_p1 = add_ln41_45_fu_1721_p2;

assign zext_ln41_51_fu_1750_p1 = add_ln41_24_reg_2411;

assign zext_ln41_5_fu_944_p1 = add_ln41_1_fu_939_p2;

assign zext_ln41_6_fu_969_p1 = add_ln41_25_fu_964_p2;

assign zext_ln41_7_fu_978_p1 = add_ln41_2_fu_973_p2;

assign zext_ln41_8_fu_1003_p1 = add_ln41_26_fu_998_p2;

assign zext_ln41_9_fu_1012_p1 = add_ln41_3_fu_1007_p2;

assign zext_ln41_fu_1591_p1 = tmp_2_reg_1913;

assign zext_ln44_fu_1764_p1 = add_ln44_reg_1984_pp0_iter4_reg;

always @ (posedge ap_clk) begin
    tmp_2_reg_1913[0] <= 1'b0;
    zext_ln41_3_reg_1924[0] <= 1'b0;
    zext_ln41_3_reg_1924[9:5] <= 5'b00000;
    zext_ln41_2_reg_2014[0] <= 1'b0;
    zext_ln41_2_reg_2014[5] <= 1'b0;
    zext_ln41_1_reg_2115[0] <= 1'b0;
    zext_ln41_1_reg_2115[6:5] <= 2'b00;
    zext_ln41_reg_2328[0] <= 1'b0;
    zext_ln41_reg_2328[7:5] <= 3'b000;
end

endmodule //cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop
