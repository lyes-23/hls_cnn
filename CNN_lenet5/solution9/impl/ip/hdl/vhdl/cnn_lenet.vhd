-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_lenet is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_LAYER_NEURONS_ADDR_WIDTH : INTEGER := 14;
    C_S_AXI_LAYER_NEURONS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_CTRL_bus_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_bus_WVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_bus_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_bus_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_bus_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_bus_RREADY : IN STD_LOGIC;
    s_axi_CTRL_bus_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_bus_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_bus_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_bus_BREADY : IN STD_LOGIC;
    s_axi_CTRL_bus_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_Layer_Neurons_AWVALID : IN STD_LOGIC;
    s_axi_Layer_Neurons_AWREADY : OUT STD_LOGIC;
    s_axi_Layer_Neurons_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_LAYER_NEURONS_ADDR_WIDTH-1 downto 0);
    s_axi_Layer_Neurons_WVALID : IN STD_LOGIC;
    s_axi_Layer_Neurons_WREADY : OUT STD_LOGIC;
    s_axi_Layer_Neurons_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_LAYER_NEURONS_DATA_WIDTH-1 downto 0);
    s_axi_Layer_Neurons_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_LAYER_NEURONS_DATA_WIDTH/8-1 downto 0);
    s_axi_Layer_Neurons_ARVALID : IN STD_LOGIC;
    s_axi_Layer_Neurons_ARREADY : OUT STD_LOGIC;
    s_axi_Layer_Neurons_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_LAYER_NEURONS_ADDR_WIDTH-1 downto 0);
    s_axi_Layer_Neurons_RVALID : OUT STD_LOGIC;
    s_axi_Layer_Neurons_RREADY : IN STD_LOGIC;
    s_axi_Layer_Neurons_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_LAYER_NEURONS_DATA_WIDTH-1 downto 0);
    s_axi_Layer_Neurons_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_Layer_Neurons_BVALID : OUT STD_LOGIC;
    s_axi_Layer_Neurons_BREADY : IN STD_LOGIC;
    s_axi_Layer_Neurons_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of cnn_lenet is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn_lenet_cnn_lenet,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.326960,HLS_SYN_LAT=216925,HLS_SYN_TPT=none,HLS_SYN_MEM=26,HLS_SYN_DSP=0,HLS_SYN_FF=16311,HLS_SYN_LUT=15993,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal Layer1_Neurons_CPU_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer2_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer2_Neurons_CPU_ce0 : STD_LOGIC;
    signal Layer2_Neurons_CPU_we0 : STD_LOGIC;
    signal Layer2_Neurons_CPU_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer2_Neurons_CPU_ce1 : STD_LOGIC;
    signal Layer2_Neurons_CPU_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_done : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_idle : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_ready : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer1_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer1_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_we0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_idle : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_ready : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce1 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_ce0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_we0 : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_start : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_ce : STD_LOGIC;
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_ce : STD_LOGIC;
    signal grp_SIGMOID_fu_77_ap_start : STD_LOGIC;
    signal grp_SIGMOID_fu_77_ap_done : STD_LOGIC;
    signal grp_SIGMOID_fu_77_ap_idle : STD_LOGIC;
    signal grp_SIGMOID_fu_77_ap_ready : STD_LOGIC;
    signal grp_SIGMOID_fu_77_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SIGMOID_fu_77_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_82_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_ce : STD_LOGIC;
    signal grp_fu_86_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_86_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_86_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_86_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Layer1_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer1_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer1_Neurons_CPU_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_we0 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_77_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_77_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_77_p_start : OUT STD_LOGIC;
        grp_SIGMOID_fu_77_p_ready : IN STD_LOGIC;
        grp_SIGMOID_fu_77_p_done : IN STD_LOGIC;
        grp_SIGMOID_fu_77_p_idle : IN STD_LOGIC;
        grp_fu_82_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_82_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_82_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_82_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_82_p_ce : OUT STD_LOGIC;
        grp_fu_86_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_lenet_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Layer2_Neurons_CPU_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Layer2_Neurons_CPU_ce1 : OUT STD_LOGIC;
        Layer2_Neurons_CPU_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Layer3_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Layer3_Neurons_CPU_ce0 : OUT STD_LOGIC;
        Layer3_Neurons_CPU_we0 : OUT STD_LOGIC;
        Layer3_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_77_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_77_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_SIGMOID_fu_77_p_start : OUT STD_LOGIC;
        grp_SIGMOID_fu_77_p_ready : IN STD_LOGIC;
        grp_SIGMOID_fu_77_p_done : IN STD_LOGIC;
        grp_SIGMOID_fu_77_p_idle : IN STD_LOGIC;
        grp_fu_82_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_82_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_82_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_82_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_82_p_ce : OUT STD_LOGIC;
        grp_fu_86_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_lenet_SIGMOID IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_Layer2_Neurons_CPU_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_CTRL_bus_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component cnn_lenet_Layer_Neurons_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        Layer1_Neurons_CPU_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        Layer1_Neurons_CPU_ce0 : IN STD_LOGIC;
        Layer1_Neurons_CPU_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Layer3_Neurons_CPU_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        Layer3_Neurons_CPU_ce0 : IN STD_LOGIC;
        Layer3_Neurons_CPU_we0 : IN STD_LOGIC;
        Layer3_Neurons_CPU_d0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Layer2_Neurons_CPU_U : component cnn_lenet_Layer2_Neurons_CPU_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1014,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Layer2_Neurons_CPU_address0,
        ce0 => Layer2_Neurons_CPU_ce0,
        we0 => Layer2_Neurons_CPU_we0,
        d0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_d0,
        q0 => Layer2_Neurons_CPU_q0,
        address1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address1,
        ce1 => Layer2_Neurons_CPU_ce1,
        q1 => Layer2_Neurons_CPU_q1);

    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54 : component cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start,
        ap_done => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_done,
        ap_idle => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_idle,
        ap_ready => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_ready,
        Layer1_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer1_Neurons_CPU_address0,
        Layer1_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer1_Neurons_CPU_ce0,
        Layer1_Neurons_CPU_q0 => Layer1_Neurons_CPU_q0,
        Layer2_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_we0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_we0,
        Layer2_Neurons_CPU_d0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_d0,
        grp_SIGMOID_fu_77_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_din1,
        grp_SIGMOID_fu_77_p_dout0 => grp_SIGMOID_fu_77_ap_return,
        grp_SIGMOID_fu_77_p_start => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_start,
        grp_SIGMOID_fu_77_p_ready => grp_SIGMOID_fu_77_ap_ready,
        grp_SIGMOID_fu_77_p_done => grp_SIGMOID_fu_77_ap_done,
        grp_SIGMOID_fu_77_p_idle => grp_SIGMOID_fu_77_ap_idle,
        grp_fu_82_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din0,
        grp_fu_82_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din1,
        grp_fu_82_p_opcode => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_opcode,
        grp_fu_82_p_dout0 => grp_fu_82_p2,
        grp_fu_82_p_ce => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_ce,
        grp_fu_86_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din0,
        grp_fu_86_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din1,
        grp_fu_86_p_dout0 => grp_fu_86_p2,
        grp_fu_86_p_ce => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_ce);

    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66 : component cnn_lenet_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start,
        ap_done => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done,
        ap_idle => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_idle,
        ap_ready => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_ready,
        Layer2_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_q0 => Layer2_Neurons_CPU_q0,
        Layer2_Neurons_CPU_address1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address1,
        Layer2_Neurons_CPU_ce1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce1,
        Layer2_Neurons_CPU_q1 => Layer2_Neurons_CPU_q1,
        Layer3_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_address0,
        Layer3_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_ce0,
        Layer3_Neurons_CPU_we0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_we0,
        Layer3_Neurons_CPU_d0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_d0,
        grp_SIGMOID_fu_77_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_din1,
        grp_SIGMOID_fu_77_p_dout0 => grp_SIGMOID_fu_77_ap_return,
        grp_SIGMOID_fu_77_p_start => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_start,
        grp_SIGMOID_fu_77_p_ready => grp_SIGMOID_fu_77_ap_ready,
        grp_SIGMOID_fu_77_p_done => grp_SIGMOID_fu_77_ap_done,
        grp_SIGMOID_fu_77_p_idle => grp_SIGMOID_fu_77_ap_idle,
        grp_fu_82_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din0,
        grp_fu_82_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din1,
        grp_fu_82_p_opcode => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_opcode,
        grp_fu_82_p_dout0 => grp_fu_82_p2,
        grp_fu_82_p_ce => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_ce,
        grp_fu_86_p_din0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din0,
        grp_fu_86_p_din1 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din1,
        grp_fu_86_p_dout0 => grp_fu_86_p2,
        grp_fu_86_p_ce => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_ce);

    grp_SIGMOID_fu_77 : component cnn_lenet_SIGMOID
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_SIGMOID_fu_77_ap_start,
        ap_done => grp_SIGMOID_fu_77_ap_done,
        ap_idle => grp_SIGMOID_fu_77_ap_idle,
        ap_ready => grp_SIGMOID_fu_77_ap_ready,
        x => grp_SIGMOID_fu_77_x,
        ap_return => grp_SIGMOID_fu_77_ap_return);

    CTRL_bus_s_axi_U : component cnn_lenet_CTRL_bus_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_bus_AWVALID,
        AWREADY => s_axi_CTRL_bus_AWREADY,
        AWADDR => s_axi_CTRL_bus_AWADDR,
        WVALID => s_axi_CTRL_bus_WVALID,
        WREADY => s_axi_CTRL_bus_WREADY,
        WDATA => s_axi_CTRL_bus_WDATA,
        WSTRB => s_axi_CTRL_bus_WSTRB,
        ARVALID => s_axi_CTRL_bus_ARVALID,
        ARREADY => s_axi_CTRL_bus_ARREADY,
        ARADDR => s_axi_CTRL_bus_ARADDR,
        RVALID => s_axi_CTRL_bus_RVALID,
        RREADY => s_axi_CTRL_bus_RREADY,
        RDATA => s_axi_CTRL_bus_RDATA,
        RRESP => s_axi_CTRL_bus_RRESP,
        BVALID => s_axi_CTRL_bus_BVALID,
        BREADY => s_axi_CTRL_bus_BREADY,
        BRESP => s_axi_CTRL_bus_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    Layer_Neurons_s_axi_U : component cnn_lenet_Layer_Neurons_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_LAYER_NEURONS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_LAYER_NEURONS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_Layer_Neurons_AWVALID,
        AWREADY => s_axi_Layer_Neurons_AWREADY,
        AWADDR => s_axi_Layer_Neurons_AWADDR,
        WVALID => s_axi_Layer_Neurons_WVALID,
        WREADY => s_axi_Layer_Neurons_WREADY,
        WDATA => s_axi_Layer_Neurons_WDATA,
        WSTRB => s_axi_Layer_Neurons_WSTRB,
        ARVALID => s_axi_Layer_Neurons_ARVALID,
        ARREADY => s_axi_Layer_Neurons_ARREADY,
        ARADDR => s_axi_Layer_Neurons_ARADDR,
        RVALID => s_axi_Layer_Neurons_RVALID,
        RREADY => s_axi_Layer_Neurons_RREADY,
        RDATA => s_axi_Layer_Neurons_RDATA,
        RRESP => s_axi_Layer_Neurons_RRESP,
        BVALID => s_axi_Layer_Neurons_BVALID,
        BREADY => s_axi_Layer_Neurons_BREADY,
        BRESP => s_axi_Layer_Neurons_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        Layer1_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer1_Neurons_CPU_address0,
        Layer1_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer1_Neurons_CPU_ce0,
        Layer1_Neurons_CPU_q0 => Layer1_Neurons_CPU_q0,
        Layer3_Neurons_CPU_address0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_address0,
        Layer3_Neurons_CPU_ce0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_ce0,
        Layer3_Neurons_CPU_we0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_we0,
        Layer3_Neurons_CPU_d0 => grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer3_Neurons_CPU_d0);

    fadd_32ns_32ns_32_4_full_dsp_1_U34 : component cnn_lenet_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_82_p0,
        din1 => grp_fu_82_p1,
        ce => grp_fu_82_ce,
        dout => grp_fu_82_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U35 : component cnn_lenet_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_86_p0,
        din1 => grp_fu_86_p1,
        ce => grp_fu_86_ce,
        dout => grp_fu_86_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_done, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    Layer2_Neurons_CPU_address0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_address0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer2_Neurons_CPU_address0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Layer2_Neurons_CPU_address0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_address0;
        else 
            Layer2_Neurons_CPU_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    Layer2_Neurons_CPU_ce0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_ce0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer2_Neurons_CPU_ce0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Layer2_Neurons_CPU_ce0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_ce0;
        else 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Layer2_Neurons_CPU_ce1_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            Layer2_Neurons_CPU_ce1 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_Layer2_Neurons_CPU_ce1;
        else 
            Layer2_Neurons_CPU_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Layer2_Neurons_CPU_we0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Layer2_Neurons_CPU_we0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_Layer2_Neurons_CPU_we0;
        else 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_done)
    begin
        if ((grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done)
    begin
        if ((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_SIGMOID_fu_77_ap_start_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_start, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_start, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_SIGMOID_fu_77_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_SIGMOID_fu_77_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_start;
        else 
            grp_SIGMOID_fu_77_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_SIGMOID_fu_77_x_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_din1, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_SIGMOID_fu_77_x <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_SIGMOID_fu_77_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_SIGMOID_fu_77_x <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_SIGMOID_fu_77_p_din1;
        else 
            grp_SIGMOID_fu_77_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_ap_start_reg;
    grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_ap_start_reg;

    grp_fu_82_ce_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_ce, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_82_ce <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_82_ce <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_ce;
        else 
            grp_fu_82_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_82_p0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_82_p0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_82_p0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din0;
        else 
            grp_fu_82_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_82_p1_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din1, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_82_p1 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_82_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_82_p1 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_82_p_din1;
        else 
            grp_fu_82_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_86_ce_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_ce, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_86_ce <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_86_ce <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_ce;
        else 
            grp_fu_86_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_86_p0_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din0, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_86_p0 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_86_p0 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din0;
        else 
            grp_fu_86_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_86_p1_assign_proc : process(grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din1, grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_86_p1 <= grp_cnn_lenet_Pipeline_calculateLayer3_loop_row_Loop_col_loop_fu_66_grp_fu_86_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_86_p1 <= grp_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_fu_54_grp_fu_86_p_din1;
        else 
            grp_fu_86_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

end behav;
