// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="calculateLayer4_calculateLayer4,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.980900,HLS_SYN_LAT=2773,HLS_SYN_TPT=none,HLS_SYN_MEM=267,HLS_SYN_DSP=0,HLS_SYN_FF=15432,HLS_SYN_LUT=14830,HLS_VERSION=2023_2}" *)

module calculateLayer4 (
        ap_clk,
        ap_rst_n,
        s_axi_CTRL_bus_AWVALID,
        s_axi_CTRL_bus_AWREADY,
        s_axi_CTRL_bus_AWADDR,
        s_axi_CTRL_bus_WVALID,
        s_axi_CTRL_bus_WREADY,
        s_axi_CTRL_bus_WDATA,
        s_axi_CTRL_bus_WSTRB,
        s_axi_CTRL_bus_ARVALID,
        s_axi_CTRL_bus_ARREADY,
        s_axi_CTRL_bus_ARADDR,
        s_axi_CTRL_bus_RVALID,
        s_axi_CTRL_bus_RREADY,
        s_axi_CTRL_bus_RDATA,
        s_axi_CTRL_bus_RRESP,
        s_axi_CTRL_bus_BVALID,
        s_axi_CTRL_bus_BREADY,
        s_axi_CTRL_bus_BRESP,
        interrupt,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 20;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_CTRL_bus_AWVALID;
output   s_axi_CTRL_bus_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_bus_AWADDR;
input   s_axi_CTRL_bus_WVALID;
output   s_axi_CTRL_bus_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_bus_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_bus_WSTRB;
input   s_axi_CTRL_bus_ARVALID;
output   s_axi_CTRL_bus_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_bus_ARADDR;
output   s_axi_CTRL_bus_RVALID;
input   s_axi_CTRL_bus_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_bus_RDATA;
output  [1:0] s_axi_CTRL_bus_RRESP;
output   s_axi_CTRL_bus_BVALID;
input   s_axi_CTRL_bus_BREADY;
output  [1:0] s_axi_CTRL_bus_BRESP;
output   interrupt;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [10:0] Layer3_Neurons_CPU_address0;
reg    Layer3_Neurons_CPU_ce0;
wire   [31:0] Layer3_Neurons_CPU_q0;
wire   [31:0] Layer3_Weights_CPU_q0;
reg   [31:0] Layer3_Neurons_CPU_load_reg_479;
wire    ap_CS_fsm_state2;
reg   [31:0] Layer3_Neurons_CPU_load_1_reg_489;
wire    ap_CS_fsm_state3;
reg   [31:0] Layer3_Neurons_CPU_load_2_reg_499;
wire    ap_CS_fsm_state4;
reg   [31:0] Layer3_Neurons_CPU_load_3_reg_509;
wire    ap_CS_fsm_state5;
reg   [31:0] Layer3_Neurons_CPU_load_4_reg_519;
wire    ap_CS_fsm_state6;
reg   [31:0] Layer3_Neurons_CPU_load_5_reg_529;
wire    ap_CS_fsm_state7;
reg   [31:0] Layer3_Neurons_CPU_load_6_reg_539;
wire    ap_CS_fsm_state8;
reg   [31:0] Layer3_Neurons_CPU_load_7_reg_549;
wire    ap_CS_fsm_state9;
reg   [31:0] Layer3_Neurons_CPU_load_8_reg_559;
wire    ap_CS_fsm_state10;
reg   [31:0] Layer3_Neurons_CPU_load_9_reg_569;
wire    ap_CS_fsm_state11;
reg   [31:0] Layer3_Neurons_CPU_load_10_reg_579;
wire    ap_CS_fsm_state12;
reg   [31:0] Layer3_Neurons_CPU_load_11_reg_589;
wire    ap_CS_fsm_state13;
reg   [31:0] Layer3_Neurons_CPU_load_12_reg_599;
wire    ap_CS_fsm_state14;
reg   [31:0] Layer3_Neurons_CPU_load_13_reg_609;
wire    ap_CS_fsm_state15;
reg   [31:0] Layer3_Neurons_CPU_load_14_reg_619;
wire    ap_CS_fsm_state16;
reg   [31:0] Layer3_Neurons_CPU_load_15_reg_629;
wire    ap_CS_fsm_state17;
reg   [31:0] Layer3_Neurons_CPU_load_16_reg_639;
wire    ap_CS_fsm_state18;
reg   [31:0] Layer3_Neurons_CPU_load_17_reg_649;
wire    ap_CS_fsm_state19;
reg   [31:0] Layer3_Neurons_CPU_load_18_reg_659;
wire    ap_CS_fsm_state20;
reg   [31:0] Layer3_Neurons_CPU_load_19_reg_669;
wire    ap_CS_fsm_state21;
reg   [31:0] Layer3_Neurons_CPU_load_20_reg_679;
wire    ap_CS_fsm_state22;
reg   [31:0] Layer3_Neurons_CPU_load_21_reg_689;
wire    ap_CS_fsm_state23;
reg   [31:0] Layer3_Neurons_CPU_load_22_reg_699;
wire    ap_CS_fsm_state24;
reg   [31:0] Layer3_Neurons_CPU_load_23_reg_709;
wire    ap_CS_fsm_state25;
wire   [31:0] empty_fu_373_p1;
reg   [31:0] empty_reg_719;
wire    ap_CS_fsm_state26;
wire   [31:0] empty_61_fu_377_p1;
reg   [31:0] empty_61_reg_724;
wire   [31:0] empty_62_fu_381_p1;
reg   [31:0] empty_62_reg_729;
wire   [31:0] empty_63_fu_385_p1;
reg   [31:0] empty_63_reg_734;
wire   [31:0] empty_64_fu_389_p1;
reg   [31:0] empty_64_reg_739;
wire   [31:0] empty_65_fu_393_p1;
reg   [31:0] empty_65_reg_744;
wire   [31:0] empty_66_fu_397_p1;
reg   [31:0] empty_66_reg_749;
wire   [31:0] empty_67_fu_401_p1;
reg   [31:0] empty_67_reg_754;
wire   [31:0] empty_68_fu_405_p1;
reg   [31:0] empty_68_reg_759;
wire   [31:0] empty_69_fu_409_p1;
reg   [31:0] empty_69_reg_764;
wire   [31:0] empty_70_fu_413_p1;
reg   [31:0] empty_70_reg_769;
wire   [31:0] empty_71_fu_417_p1;
reg   [31:0] empty_71_reg_774;
wire   [31:0] empty_72_fu_421_p1;
reg   [31:0] empty_72_reg_779;
wire   [31:0] empty_73_fu_425_p1;
reg   [31:0] empty_73_reg_784;
wire   [31:0] empty_74_fu_429_p1;
reg   [31:0] empty_74_reg_789;
wire   [31:0] empty_75_fu_433_p1;
reg   [31:0] empty_75_reg_794;
wire   [31:0] empty_76_fu_437_p1;
reg   [31:0] empty_76_reg_799;
wire   [31:0] empty_77_fu_441_p1;
reg   [31:0] empty_77_reg_804;
wire   [31:0] empty_78_fu_445_p1;
reg   [31:0] empty_78_reg_809;
wire   [31:0] empty_79_fu_449_p1;
reg   [31:0] empty_79_reg_814;
wire   [31:0] empty_80_fu_453_p1;
reg   [31:0] empty_80_reg_819;
wire   [31:0] empty_81_fu_457_p1;
reg   [31:0] empty_81_reg_824;
wire   [31:0] empty_82_fu_461_p1;
reg   [31:0] empty_82_reg_829;
wire   [31:0] empty_83_fu_465_p1;
reg   [31:0] empty_83_reg_834;
wire   [31:0] empty_84_fu_469_p1;
reg   [31:0] empty_84_reg_839;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_done;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_idle;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_ready;
wire   [16:0] grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer3_Weights_CPU_address0;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer3_Weights_CPU_ce0;
wire   [6:0] grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_address0;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_ce0;
wire    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_we0;
wire   [31:0] grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_d0;
reg    grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start_reg;
wire    ap_CS_fsm_state27;
reg   [26:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start_reg = 1'b0;
end

calculateLayer4_calculateLayer4_Pipeline_calculateLayer4_loop grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start),
    .ap_done(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_done),
    .ap_idle(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_idle),
    .ap_ready(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_ready),
    .Layer3_Weights_CPU_address0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer3_Weights_CPU_address0),
    .Layer3_Weights_CPU_ce0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer3_Weights_CPU_ce0),
    .Layer3_Weights_CPU_q0(Layer3_Weights_CPU_q0),
    .empty_36(empty_reg_719),
    .empty_37(empty_61_reg_724),
    .empty_38(empty_62_reg_729),
    .empty_39(empty_63_reg_734),
    .empty_40(empty_64_reg_739),
    .empty_41(empty_65_reg_744),
    .empty_42(empty_66_reg_749),
    .empty_43(empty_67_reg_754),
    .empty_44(empty_68_reg_759),
    .empty_45(empty_69_reg_764),
    .empty_46(empty_70_reg_769),
    .empty_47(empty_71_reg_774),
    .empty_48(empty_72_reg_779),
    .empty_49(empty_73_reg_784),
    .empty_50(empty_74_reg_789),
    .empty_51(empty_75_reg_794),
    .empty_52(empty_76_reg_799),
    .empty_53(empty_77_reg_804),
    .empty_54(empty_78_reg_809),
    .empty_55(empty_79_reg_814),
    .empty_56(empty_80_reg_819),
    .empty_57(empty_81_reg_824),
    .empty_58(empty_82_reg_829),
    .empty_59(empty_83_reg_834),
    .empty(empty_84_reg_839),
    .Layer4_Neurons_CPU_address0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_address0),
    .Layer4_Neurons_CPU_ce0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_ce0),
    .Layer4_Neurons_CPU_we0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_we0),
    .Layer4_Neurons_CPU_d0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_d0)
);

calculateLayer4_CTRL_bus_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
CTRL_bus_s_axi_U(
    .AWVALID(s_axi_CTRL_bus_AWVALID),
    .AWREADY(s_axi_CTRL_bus_AWREADY),
    .AWADDR(s_axi_CTRL_bus_AWADDR),
    .WVALID(s_axi_CTRL_bus_WVALID),
    .WREADY(s_axi_CTRL_bus_WREADY),
    .WDATA(s_axi_CTRL_bus_WDATA),
    .WSTRB(s_axi_CTRL_bus_WSTRB),
    .ARVALID(s_axi_CTRL_bus_ARVALID),
    .ARREADY(s_axi_CTRL_bus_ARREADY),
    .ARADDR(s_axi_CTRL_bus_ARADDR),
    .RVALID(s_axi_CTRL_bus_RVALID),
    .RREADY(s_axi_CTRL_bus_RREADY),
    .RDATA(s_axi_CTRL_bus_RDATA),
    .RRESP(s_axi_CTRL_bus_RRESP),
    .BVALID(s_axi_CTRL_bus_BVALID),
    .BREADY(s_axi_CTRL_bus_BREADY),
    .BRESP(s_axi_CTRL_bus_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

calculateLayer4_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .Layer4_Neurons_CPU_address0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_address0),
    .Layer4_Neurons_CPU_ce0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_ce0),
    .Layer4_Neurons_CPU_we0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_we0),
    .Layer4_Neurons_CPU_d0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer4_Neurons_CPU_d0),
    .Layer3_Neurons_CPU_address0(Layer3_Neurons_CPU_address0),
    .Layer3_Neurons_CPU_ce0(Layer3_Neurons_CPU_ce0),
    .Layer3_Neurons_CPU_q0(Layer3_Neurons_CPU_q0),
    .Layer3_Weights_CPU_address0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer3_Weights_CPU_address0),
    .Layer3_Weights_CPU_ce0(grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_Layer3_Weights_CPU_ce0),
    .Layer3_Weights_CPU_q0(Layer3_Weights_CPU_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start_reg <= 1'b1;
        end else if ((grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_ready == 1'b1)) begin
            grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Layer3_Neurons_CPU_load_10_reg_579 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Layer3_Neurons_CPU_load_11_reg_589 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Layer3_Neurons_CPU_load_12_reg_599 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        Layer3_Neurons_CPU_load_13_reg_609 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        Layer3_Neurons_CPU_load_14_reg_619 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Layer3_Neurons_CPU_load_15_reg_629 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        Layer3_Neurons_CPU_load_16_reg_639 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Layer3_Neurons_CPU_load_17_reg_649 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        Layer3_Neurons_CPU_load_18_reg_659 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Layer3_Neurons_CPU_load_19_reg_669 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer3_Neurons_CPU_load_1_reg_489 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        Layer3_Neurons_CPU_load_20_reg_679 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        Layer3_Neurons_CPU_load_21_reg_689 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        Layer3_Neurons_CPU_load_22_reg_699 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        Layer3_Neurons_CPU_load_23_reg_709 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer3_Neurons_CPU_load_2_reg_499 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer3_Neurons_CPU_load_3_reg_509 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Layer3_Neurons_CPU_load_4_reg_519 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Layer3_Neurons_CPU_load_5_reg_529 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Layer3_Neurons_CPU_load_6_reg_539 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Layer3_Neurons_CPU_load_7_reg_549 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Layer3_Neurons_CPU_load_8_reg_559 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Layer3_Neurons_CPU_load_9_reg_569 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Layer3_Neurons_CPU_load_reg_479 <= Layer3_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        empty_61_reg_724 <= empty_61_fu_377_p1;
        empty_62_reg_729 <= empty_62_fu_381_p1;
        empty_63_reg_734 <= empty_63_fu_385_p1;
        empty_64_reg_739 <= empty_64_fu_389_p1;
        empty_65_reg_744 <= empty_65_fu_393_p1;
        empty_66_reg_749 <= empty_66_fu_397_p1;
        empty_67_reg_754 <= empty_67_fu_401_p1;
        empty_68_reg_759 <= empty_68_fu_405_p1;
        empty_69_reg_764 <= empty_69_fu_409_p1;
        empty_70_reg_769 <= empty_70_fu_413_p1;
        empty_71_reg_774 <= empty_71_fu_417_p1;
        empty_72_reg_779 <= empty_72_fu_421_p1;
        empty_73_reg_784 <= empty_73_fu_425_p1;
        empty_74_reg_789 <= empty_74_fu_429_p1;
        empty_75_reg_794 <= empty_75_fu_433_p1;
        empty_76_reg_799 <= empty_76_fu_437_p1;
        empty_77_reg_804 <= empty_77_fu_441_p1;
        empty_78_reg_809 <= empty_78_fu_445_p1;
        empty_79_reg_814 <= empty_79_fu_449_p1;
        empty_80_reg_819 <= empty_80_fu_453_p1;
        empty_81_reg_824 <= empty_81_fu_457_p1;
        empty_82_reg_829 <= empty_82_fu_461_p1;
        empty_83_reg_834 <= empty_83_fu_465_p1;
        empty_84_reg_839 <= empty_84_fu_469_p1;
        empty_reg_719 <= empty_fu_373_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        Layer3_Neurons_CPU_address0 = 64'd1249;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        Layer3_Neurons_CPU_address0 = 64'd1248;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        Layer3_Neurons_CPU_address0 = 64'd1247;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        Layer3_Neurons_CPU_address0 = 64'd1246;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        Layer3_Neurons_CPU_address0 = 64'd1245;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        Layer3_Neurons_CPU_address0 = 64'd1244;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        Layer3_Neurons_CPU_address0 = 64'd1243;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        Layer3_Neurons_CPU_address0 = 64'd1242;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Layer3_Neurons_CPU_address0 = 64'd1241;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Layer3_Neurons_CPU_address0 = 64'd1240;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Layer3_Neurons_CPU_address0 = 64'd1239;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Layer3_Neurons_CPU_address0 = 64'd1238;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        Layer3_Neurons_CPU_address0 = 64'd1237;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Layer3_Neurons_CPU_address0 = 64'd1236;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Layer3_Neurons_CPU_address0 = 64'd1235;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Layer3_Neurons_CPU_address0 = 64'd1234;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Layer3_Neurons_CPU_address0 = 64'd1233;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Layer3_Neurons_CPU_address0 = 64'd1232;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Layer3_Neurons_CPU_address0 = 64'd1231;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Layer3_Neurons_CPU_address0 = 64'd1230;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer3_Neurons_CPU_address0 = 64'd1229;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer3_Neurons_CPU_address0 = 64'd1228;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Layer3_Neurons_CPU_address0 = 64'd1227;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Layer3_Neurons_CPU_address0 = 64'd1226;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        Layer3_Neurons_CPU_address0 = 64'd1225;
    end else begin
        Layer3_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Layer3_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer3_Neurons_CPU_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_done == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_61_fu_377_p1 = Layer3_Neurons_CPU_load_1_reg_489;

assign empty_62_fu_381_p1 = Layer3_Neurons_CPU_load_2_reg_499;

assign empty_63_fu_385_p1 = Layer3_Neurons_CPU_load_3_reg_509;

assign empty_64_fu_389_p1 = Layer3_Neurons_CPU_load_4_reg_519;

assign empty_65_fu_393_p1 = Layer3_Neurons_CPU_load_5_reg_529;

assign empty_66_fu_397_p1 = Layer3_Neurons_CPU_load_6_reg_539;

assign empty_67_fu_401_p1 = Layer3_Neurons_CPU_load_7_reg_549;

assign empty_68_fu_405_p1 = Layer3_Neurons_CPU_load_8_reg_559;

assign empty_69_fu_409_p1 = Layer3_Neurons_CPU_load_9_reg_569;

assign empty_70_fu_413_p1 = Layer3_Neurons_CPU_load_10_reg_579;

assign empty_71_fu_417_p1 = Layer3_Neurons_CPU_load_11_reg_589;

assign empty_72_fu_421_p1 = Layer3_Neurons_CPU_load_12_reg_599;

assign empty_73_fu_425_p1 = Layer3_Neurons_CPU_load_13_reg_609;

assign empty_74_fu_429_p1 = Layer3_Neurons_CPU_load_14_reg_619;

assign empty_75_fu_433_p1 = Layer3_Neurons_CPU_load_15_reg_629;

assign empty_76_fu_437_p1 = Layer3_Neurons_CPU_load_16_reg_639;

assign empty_77_fu_441_p1 = Layer3_Neurons_CPU_load_17_reg_649;

assign empty_78_fu_445_p1 = Layer3_Neurons_CPU_load_18_reg_659;

assign empty_79_fu_449_p1 = Layer3_Neurons_CPU_load_19_reg_669;

assign empty_80_fu_453_p1 = Layer3_Neurons_CPU_load_20_reg_679;

assign empty_81_fu_457_p1 = Layer3_Neurons_CPU_load_21_reg_689;

assign empty_82_fu_461_p1 = Layer3_Neurons_CPU_load_22_reg_699;

assign empty_83_fu_465_p1 = Layer3_Neurons_CPU_load_23_reg_709;

assign empty_84_fu_469_p1 = Layer3_Neurons_CPU_q0;

assign empty_fu_373_p1 = Layer3_Neurons_CPU_load_reg_479;

assign grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start = grp_calculateLayer4_Pipeline_calculateLayer4_loop_fu_334_ap_start_reg;

endmodule //calculateLayer4
