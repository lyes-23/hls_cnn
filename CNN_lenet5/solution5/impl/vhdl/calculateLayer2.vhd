-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calculateLayer2 is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    Layer1_Weights_CPU_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_EN_A : OUT STD_LOGIC;
    Layer1_Weights_CPU_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    Layer1_Weights_CPU_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Clk_A : OUT STD_LOGIC;
    Layer1_Weights_CPU_Rst_A : OUT STD_LOGIC;
    Layer1_Weights_CPU_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_EN_B : OUT STD_LOGIC;
    Layer1_Weights_CPU_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    Layer1_Weights_CPU_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Clk_B : OUT STD_LOGIC;
    Layer1_Weights_CPU_Rst_B : OUT STD_LOGIC;
    s_axi_CTRL_bus_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_bus_WVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_bus_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_bus_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_bus_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_bus_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_bus_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_bus_RREADY : IN STD_LOGIC;
    s_axi_CTRL_bus_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_bus_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_bus_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_bus_BREADY : IN STD_LOGIC;
    s_axi_CTRL_bus_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of calculateLayer2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "calculateLayer2_calculateLayer2,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.280380,HLS_SYN_LAT=28541,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=5483,HLS_SYN_LUT=5441,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (29 downto 0) := "000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (29 downto 0) := "000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (29 downto 0) := "000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (29 downto 0) := "000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (29 downto 0) := "000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (29 downto 0) := "000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (29 downto 0) := "000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (29 downto 0) := "000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (29 downto 0) := "000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (29 downto 0) := "001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (29 downto 0) := "010000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_3F6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111110110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3F6 : STD_LOGIC_VECTOR (9 downto 0) := "1111110110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_1A : STD_LOGIC_VECTOR (7 downto 0) := "00011010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_3A : STD_LOGIC_VECTOR (9 downto 0) := "0000111010";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv8_13 : STD_LOGIC_VECTOR (7 downto 0) := "00010011";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv8_14 : STD_LOGIC_VECTOR (7 downto 0) := "00010100";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv8_17 : STD_LOGIC_VECTOR (7 downto 0) := "00010111";
    constant ap_const_lv8_74 : STD_LOGIC_VECTOR (7 downto 0) := "01110100";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv8_18 : STD_LOGIC_VECTOR (7 downto 0) := "00011000";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal Layer1_Neurons_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer2_Neurons_CPU : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln19_reg_1659 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_032_reg_509 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal icmp_ln19_1_reg_1712 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_1712_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal first_iter_1_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal ap_block_state13_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state18_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state20_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_state20_io : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_block_state21_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_block_state22_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal grp_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state27_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal ap_block_state32_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state37_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state177_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state23_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_block_state24_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state25_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_state25_io : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_block_state26_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state28_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal ap_block_state29_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_predicate_op248_writereq_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state33_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state34_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state35_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state36_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_573 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal reg_578 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal reg_583 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal reg_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal Layer2_Neurons_CPU_read_reg_1645 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Neurons_CPU_read_reg_1650 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln19_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_1_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_1_reg_1663 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln17_1_fu_716_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln17_1_reg_1667 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln20_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln20_reg_1672 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln20_fu_742_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln20_reg_1677 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_62_fu_754_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_62_reg_1682 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln19_1_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_1712_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_1712_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_1712_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_1712_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_1712_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_45_fu_848_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_45_reg_1732 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_879_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1751 : STD_LOGIC_VECTOR (4 downto 0);
    signal Layer1_Weights_CPU_load_1_reg_1758 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_1_reg_1763 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_load_2_reg_1779 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_3_reg_1784 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_4_reg_1799 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_5_reg_1804 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_6_reg_1819 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_7_reg_1824 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_8_reg_1839 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_9_reg_1844 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_2_reg_1859 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_load_10_reg_1865 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_11_reg_1870 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_12_reg_1885 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_13_reg_1890 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_14_reg_1905 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_15_reg_1910 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal Layer1_Weights_CPU_load_16_reg_1925 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_17_reg_1930 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_18_reg_1945 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_19_reg_1950 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_46_fu_1203_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_46_reg_1965 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_48_fu_1218_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_48_reg_1970 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln27_fu_1255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_fu_1259_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_3_reg_1985 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_load_20_reg_1991 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_21_reg_1996 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_1_fu_1304_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_1_fu_1309_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_22_reg_2021 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_23_reg_2026 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_2_fu_1313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_2_fu_1318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_24_reg_2041 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_25_reg_2046 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_3_fu_1322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2056 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_3_fu_1327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_fu_1334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_4_fu_1339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_s_reg_2076 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_4_fu_1344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_5_reg_2086 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_5_fu_1364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_5_fu_1368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_reg_2101 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul27_6_reg_2107 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_6_fu_1393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_6_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_7_reg_2122 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_7_fu_1402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_7_fu_1407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_8_fu_1411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_reg_2142 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_8_fu_1416_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_9_fu_1420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_1_reg_2157 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_9_fu_1425_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_2_reg_2167 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_2_reg_2167_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_10_fu_1445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_10_fu_1449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_5_reg_2182 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul27_1_3_reg_2188 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_3_reg_2188_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_11_fu_1474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_11_fu_1479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_4_reg_2203 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_4_reg_2203_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_12_fu_1483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_12_fu_1488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_13_fu_1492_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_reg_2223 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_reg_2223_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_13_fu_1497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_14_fu_1501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_1_reg_2238 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_1_reg_2238_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_14_fu_1506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_2_reg_2248 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_2_reg_2248_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_15_fu_1510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_15_fu_1514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_3_reg_2263 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_3_reg_2263_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_16_fu_1519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_16_fu_1524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_2278 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_2278_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_2278_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_17_fu_1528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_17_fu_1533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_18_fu_1537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_2298 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_2298_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_2298_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_18_fu_1542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_19_fu_1546_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_2313 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_2313_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_2313_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_19_fu_1551_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_2323 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_2323_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_2323_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_20_fu_1555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_20_fu_1559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_2338 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_2338_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_2338_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_21_fu_1564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_21_fu_1569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_2353 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_2353_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_2353_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_22_fu_1573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_22_fu_1578_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_23_fu_1582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_2373 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_2373_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_2373_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_23_fu_1587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln28_24_fu_1591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2388 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2388_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2388_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2388_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_24_fu_1596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2398 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2398_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2398_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2398_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2403_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2403_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2403_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2408 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2408_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2408_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2408_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SIGMOID_fu_533_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2413 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal grp_SIGMOID_fu_533_ap_start : STD_LOGIC;
    signal grp_SIGMOID_fu_533_ap_done : STD_LOGIC;
    signal grp_SIGMOID_fu_533_ap_idle : STD_LOGIC;
    signal grp_SIGMOID_fu_533_ap_ready : STD_LOGIC;
    signal grp_SIGMOID_fu_533_ap_ce : STD_LOGIC;
    signal ap_block_state31_pp0_stage1_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp775 : BOOLEAN;
    signal ap_block_state32_pp0_stage2_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp776 : BOOLEAN;
    signal ap_block_state33_pp0_stage3_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp777 : BOOLEAN;
    signal ap_block_state34_pp0_stage4_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp778 : BOOLEAN;
    signal ap_block_state35_pp0_stage5_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp779 : BOOLEAN;
    signal ap_block_state36_pp0_stage6_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp780 : BOOLEAN;
    signal ap_block_state37_pp0_stage7_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_state177_pp0_stage7_iter6_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp781 : BOOLEAN;
    signal ap_block_pp0_stage8_11001_ignoreCallOp782 : BOOLEAN;
    signal ap_block_pp0_stage9_11001_ignoreCallOp783 : BOOLEAN;
    signal ap_block_pp0_stage10_11001_ignoreCallOp784 : BOOLEAN;
    signal ap_block_state13_pp0_stage11_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage11_11001_ignoreCallOp785 : BOOLEAN;
    signal ap_block_state14_pp0_stage12_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage12_11001_ignoreCallOp786 : BOOLEAN;
    signal ap_block_state15_pp0_stage13_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp787 : BOOLEAN;
    signal ap_block_state16_pp0_stage14_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp788 : BOOLEAN;
    signal ap_block_state17_pp0_stage15_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp789 : BOOLEAN;
    signal ap_block_state18_pp0_stage16_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage16_11001_ignoreCallOp790 : BOOLEAN;
    signal ap_block_state19_pp0_stage17_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage17_11001_ignoreCallOp791 : BOOLEAN;
    signal ap_block_state20_pp0_stage18_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage18_11001_ignoreCallOp792 : BOOLEAN;
    signal ap_block_state21_pp0_stage19_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage19_11001_ignoreCallOp793 : BOOLEAN;
    signal ap_block_state22_pp0_stage20_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage20_11001_ignoreCallOp794 : BOOLEAN;
    signal ap_block_state23_pp0_stage21_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage21_11001_ignoreCallOp795 : BOOLEAN;
    signal ap_block_state24_pp0_stage22_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage22_11001_ignoreCallOp796 : BOOLEAN;
    signal ap_block_state25_pp0_stage23_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage23_11001_ignoreCallOp797 : BOOLEAN;
    signal ap_block_state26_pp0_stage24_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage24_11001_ignoreCallOp798 : BOOLEAN;
    signal ap_block_state27_pp0_stage25_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage25_11001_ignoreCallOp799 : BOOLEAN;
    signal ap_block_state28_pp0_stage26_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage26_11001_ignoreCallOp800 : BOOLEAN;
    signal ap_block_state29_pp0_stage27_iter0_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage27_11001_ignoreCallOp801 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter1_ignore_call283 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp802 : BOOLEAN;
    signal ap_phi_mux_first_iter_032_phi_fu_513_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_first_iter_1_phi_fu_526_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_SIGMOID_fu_533_ap_start_reg : STD_LOGIC := '0';
    signal p_cast13_fu_831_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast15_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast16_fu_864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast17_fu_874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast18_fu_937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast19_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast20_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast21_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast22_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast23_fu_987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast24_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast25_fu_1007_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast26_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast27_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast28_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast29_fu_1102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast30_fu_1112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal p_cast31_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast32_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal p_cast33_fu_1142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast34_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast14_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast35_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast36_fu_1182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast37_fu_1289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_fu_1299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln19_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln28_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln28_1_fu_1077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln28_2_fu_1274_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln28_3_fu_1383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln28_4_fu_1464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal k_fu_180 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln21_fu_760_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_184 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal indvar_flatten_fu_188 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln20_1_fu_772_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_192 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal select_ln19_fu_690_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten18_fu_196 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln19_fu_631_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer1_Weights_CPU_load2_fu_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Layer1_Weights_CPU_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_540_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_544_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln20_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln17_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln19_1_fu_684_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln17_fu_652_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln17_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln17_2_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln20_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln20_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln20_fu_698_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_62_fu_754_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_62_fu_754_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln20_1_fu_766_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_fu_811_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_21_fu_835_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_45_fu_848_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_45_fu_848_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_22_fu_859_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_23_fu_869_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast11_fu_886_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_54_fu_890_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_895_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast43_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_55_fu_907_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_912_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_24_fu_932_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_25_fu_942_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_26_fu_952_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_27_fu_962_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_28_fu_972_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_29_fu_982_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_30_fu_992_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_31_fu_1002_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_32_fu_1012_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_33_fu_1022_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast9_fu_1032_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_fu_1035_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_cast_fu_1041_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_52_fu_1045_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_1050_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast42_fu_1058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_53_fu_1062_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_1_fu_1067_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_34_fu_1087_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_35_fu_1097_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_36_fu_1107_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_37_fu_1117_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_38_fu_1127_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_39_fu_1137_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_20_fu_1147_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_40_fu_1157_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_41_fu_1167_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_42_fu_1177_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast_fu_1190_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_1193_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_cast_fu_1199_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast6_fu_1187_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_fu_1208_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_1214_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_fu_1223_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_cast_fu_1229_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_50_fu_1233_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1238_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast41_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_51_fu_1250_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_2_fu_1264_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_43_fu_1284_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_44_fu_1294_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_1348_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast40_fu_1355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_49_fu_1359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_3_fu_1373_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_2_fu_1429_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast39_fu_1436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_47_fu_1440_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_4_fu_1454_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_540_ce : STD_LOGIC;
    signal grp_fu_544_ce : STD_LOGIC;
    signal ap_CS_fsm_state178 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state178 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state178_blk : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal empty_45_fu_848_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_62_fu_754_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component calculateLayer2_SIGMOID IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calculateLayer2_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calculateLayer2_fmul_32ns_32ns_32_4_max_dsp_1_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calculateLayer2_mul_3ns_6ns_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component calculateLayer2_mul_4ns_7ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component calculateLayer2_CTRL_bus_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        Layer1_Neurons_CPU : OUT STD_LOGIC_VECTOR (63 downto 0);
        Layer2_Neurons_CPU : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component calculateLayer2_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    grp_SIGMOID_fu_533 : component calculateLayer2_SIGMOID
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_SIGMOID_fu_533_ap_start,
        ap_done => grp_SIGMOID_fu_533_ap_done,
        ap_idle => grp_SIGMOID_fu_533_ap_idle,
        ap_ready => grp_SIGMOID_fu_533_ap_ready,
        ap_ce => grp_SIGMOID_fu_533_ap_ce,
        x => reg_588,
        ap_return => grp_SIGMOID_fu_533_ap_return);

    CTRL_bus_s_axi_U : component calculateLayer2_CTRL_bus_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_bus_AWVALID,
        AWREADY => s_axi_CTRL_bus_AWREADY,
        AWADDR => s_axi_CTRL_bus_AWADDR,
        WVALID => s_axi_CTRL_bus_WVALID,
        WREADY => s_axi_CTRL_bus_WREADY,
        WDATA => s_axi_CTRL_bus_WDATA,
        WSTRB => s_axi_CTRL_bus_WSTRB,
        ARVALID => s_axi_CTRL_bus_ARVALID,
        ARREADY => s_axi_CTRL_bus_ARREADY,
        ARADDR => s_axi_CTRL_bus_ARADDR,
        RVALID => s_axi_CTRL_bus_RVALID,
        RREADY => s_axi_CTRL_bus_RREADY,
        RDATA => s_axi_CTRL_bus_RDATA,
        RRESP => s_axi_CTRL_bus_RRESP,
        BVALID => s_axi_CTRL_bus_BVALID,
        BREADY => s_axi_CTRL_bus_BREADY,
        BRESP => s_axi_CTRL_bus_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        Layer1_Neurons_CPU => Layer1_Neurons_CPU,
        Layer2_Neurons_CPU => Layer2_Neurons_CPU,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component calculateLayer2_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => ap_const_lv32_5,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => sext_ln19_fu_820_p1,
        I_AWLEN => ap_const_lv32_3F6,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    fadd_32ns_32ns_32_5_full_dsp_1_U9 : component calculateLayer2_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_540_p0,
        din1 => grp_fu_540_p1,
        ce => grp_fu_540_ce,
        dout => grp_fu_540_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_x_U10 : component calculateLayer2_fmul_32ns_32ns_32_4_max_dsp_1_x
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_544_p0,
        din1 => grp_fu_544_p1,
        ce => grp_fu_544_ce,
        dout => grp_fu_544_p2);

    mul_3ns_6ns_8_1_1_U11 : component calculateLayer2_mul_3ns_6ns_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 6,
        dout_WIDTH => 8)
    port map (
        din0 => empty_62_fu_754_p0,
        din1 => empty_62_fu_754_p1,
        dout => empty_62_fu_754_p2);

    mul_4ns_7ns_10_1_1_U12 : component calculateLayer2_mul_4ns_7ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        din0 => empty_45_fu_848_p0,
        din1 => empty_45_fu_848_p1,
        dout => empty_45_fu_848_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_SIGMOID_fu_533_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_SIGMOID_fu_533_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_SIGMOID_fu_533_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_SIGMOID_fu_533_ap_ready = ap_const_logic_1)) then 
                    grp_SIGMOID_fu_533_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    first_iter_032_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                first_iter_032_reg_509 <= ap_const_lv1_0;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                first_iter_032_reg_509 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    first_iter_1_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                first_iter_1_reg_522 <= or_ln20_reg_1672;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                first_iter_1_reg_522 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_192 <= ap_const_lv3_0;
            elsif (((icmp_ln19_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_fu_192 <= select_ln19_fu_690_p3;
            end if; 
        end if;
    end process;

    indvar_flatten18_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten18_fu_196 <= ap_const_lv10_0;
            elsif (((icmp_ln19_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten18_fu_196 <= add_ln19_fu_631_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_188 <= ap_const_lv8_0;
            elsif (((icmp_ln19_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_fu_188 <= select_ln20_1_fu_772_p3;
            end if; 
        end if;
    end process;

    j_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_184 <= ap_const_lv4_0;
            elsif (((icmp_ln19_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_fu_184 <= select_ln20_fu_742_p3;
            end if; 
        end if;
    end process;

    k_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                k_fu_180 <= ap_const_lv4_0;
            elsif (((icmp_ln19_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                k_fu_180 <= add_ln21_fu_760_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                Layer1_Neurons_CPU_read_reg_1650 <= Layer1_Neurons_CPU;
                Layer2_Neurons_CPU_read_reg_1645 <= Layer2_Neurons_CPU;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln20_reg_1672 = ap_const_lv1_1) and (or_ln17_1_reg_1663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load2_fu_200 <= Layer1_Weights_CPU_Dout_B;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_10_reg_1865 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_11_reg_1870 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_12_reg_1885 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_13_reg_1890 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_14_reg_1905 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_15_reg_1910 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_16_reg_1925 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_17_reg_1930 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_18_reg_1945 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_19_reg_1950 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_1_reg_1758 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_20_reg_1991 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_21_reg_1996 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_22_reg_2021 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_23_reg_2026 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_24_reg_2041 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_25_reg_2046 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_2_reg_1779 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_3_reg_1784 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_4_reg_1799 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_5_reg_1804 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_6_reg_1819 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_7_reg_1824 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                Layer1_Weights_CPU_load_8_reg_1839 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_9_reg_1844 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                empty_45_reg_1732 <= empty_45_fu_848_p2;
                mul27_2_4_reg_2278_pp0_iter2_reg <= mul27_2_4_reg_2278;
                mul27_2_4_reg_2278_pp0_iter3_reg <= mul27_2_4_reg_2278_pp0_iter2_reg;
                tmp_reg_2413 <= grp_SIGMOID_fu_533_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                empty_46_reg_1965 <= empty_46_fu_1203_p2;
                empty_48_reg_1970 <= empty_48_fu_1218_p2;
                gmem_addr_3_reg_1985 <= sext_ln28_2_fu_1274_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_62_reg_1682 <= empty_62_fu_754_p2;
                icmp_ln19_1_reg_1712 <= icmp_ln19_1_fu_780_p2;
                icmp_ln19_1_reg_1712_pp0_iter1_reg <= icmp_ln19_1_reg_1712;
                icmp_ln19_1_reg_1712_pp0_iter2_reg <= icmp_ln19_1_reg_1712_pp0_iter1_reg;
                icmp_ln19_1_reg_1712_pp0_iter3_reg <= icmp_ln19_1_reg_1712_pp0_iter2_reg;
                icmp_ln19_1_reg_1712_pp0_iter4_reg <= icmp_ln19_1_reg_1712_pp0_iter3_reg;
                icmp_ln19_1_reg_1712_pp0_iter5_reg <= icmp_ln19_1_reg_1712_pp0_iter4_reg;
                icmp_ln19_1_reg_1712_pp0_iter6_reg <= icmp_ln19_1_reg_1712_pp0_iter5_reg;
                icmp_ln19_reg_1659 <= icmp_ln19_fu_625_p2;
                mul27_2_3_reg_2263_pp0_iter2_reg <= mul27_2_3_reg_2263;
                or_ln17_1_reg_1663 <= or_ln17_1_fu_704_p2;
                select_ln17_1_reg_1667 <= select_ln17_1_fu_716_p3;
                select_ln20_reg_1677 <= select_ln20_fu_742_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem_addr_1_reg_1763 <= sext_ln28_fu_922_p1;
                mul27_3_reg_2298_pp0_iter2_reg <= mul27_3_reg_2298;
                mul27_3_reg_2298_pp0_iter3_reg <= mul27_3_reg_2298_pp0_iter2_reg;
                    tmp_1_reg_1751(4 downto 1) <= tmp_1_fu_879_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                gmem_addr_2_reg_1859 <= sext_ln28_1_fu_1077_p1;
                mul27_4_reg_2373_pp0_iter2_reg <= mul27_4_reg_2373;
                mul27_4_reg_2373_pp0_iter3_reg <= mul27_4_reg_2373_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                gmem_addr_4_reg_2101 <= sext_ln28_3_fu_1383_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                gmem_addr_5_reg_2182 <= sext_ln28_4_fu_1464_p1;
                mul27_1_2_reg_2167_pp0_iter1_reg <= mul27_1_2_reg_2167;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_1_1_reg_2157 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_1_2_reg_2167 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_1_3_reg_2188 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul27_1_3_reg_2188_pp0_iter1_reg <= mul27_1_3_reg_2188;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_1_4_reg_2203 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                mul27_1_4_reg_2203_pp0_iter1_reg <= mul27_1_4_reg_2203;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_1_reg_2142 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_2_1_reg_2238 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001))) then
                mul27_2_1_reg_2238_pp0_iter1_reg <= mul27_2_1_reg_2238;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_2_2_reg_2248 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001))) then
                mul27_2_2_reg_2248_pp0_iter1_reg <= mul27_2_2_reg_2248;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul27_2_3_reg_2263 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul27_2_4_reg_2278 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_2_reg_2223 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then
                mul27_2_reg_2223_pp0_iter1_reg <= mul27_2_reg_2223;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul27_3_1_reg_2313 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul27_3_1_reg_2313_pp0_iter2_reg <= mul27_3_1_reg_2313;
                mul27_3_1_reg_2313_pp0_iter3_reg <= mul27_3_1_reg_2313_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul27_3_2_reg_2323 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul27_3_2_reg_2323_pp0_iter2_reg <= mul27_3_2_reg_2323;
                mul27_3_2_reg_2323_pp0_iter3_reg <= mul27_3_2_reg_2323_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul27_3_3_reg_2338 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul27_3_3_reg_2338_pp0_iter2_reg <= mul27_3_3_reg_2338;
                mul27_3_3_reg_2338_pp0_iter3_reg <= mul27_3_3_reg_2338_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul27_3_4_reg_2353 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul27_3_4_reg_2353_pp0_iter2_reg <= mul27_3_4_reg_2353;
                mul27_3_4_reg_2353_pp0_iter3_reg <= mul27_3_4_reg_2353_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul27_3_reg_2298 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul27_4_1_reg_2388 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul27_4_1_reg_2388_pp0_iter2_reg <= mul27_4_1_reg_2388;
                mul27_4_1_reg_2388_pp0_iter3_reg <= mul27_4_1_reg_2388_pp0_iter2_reg;
                mul27_4_1_reg_2388_pp0_iter4_reg <= mul27_4_1_reg_2388_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                mul27_4_2_reg_2398 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                mul27_4_2_reg_2398_pp0_iter2_reg <= mul27_4_2_reg_2398;
                mul27_4_2_reg_2398_pp0_iter3_reg <= mul27_4_2_reg_2398_pp0_iter2_reg;
                mul27_4_2_reg_2398_pp0_iter4_reg <= mul27_4_2_reg_2398_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul27_4_3_reg_2403 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul27_4_3_reg_2403_pp0_iter2_reg <= mul27_4_3_reg_2403;
                mul27_4_3_reg_2403_pp0_iter3_reg <= mul27_4_3_reg_2403_pp0_iter2_reg;
                mul27_4_3_reg_2403_pp0_iter4_reg <= mul27_4_3_reg_2403_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                mul27_4_4_reg_2408 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                mul27_4_4_reg_2408_pp0_iter2_reg <= mul27_4_4_reg_2408;
                mul27_4_4_reg_2408_pp0_iter3_reg <= mul27_4_4_reg_2408_pp0_iter2_reg;
                mul27_4_4_reg_2408_pp0_iter4_reg <= mul27_4_4_reg_2408_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                mul27_4_reg_2373 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_5_reg_2086 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_6_reg_2107 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_7_reg_2122 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul27_s_reg_2076 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                mul_reg_2056 <= grp_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                or_ln20_reg_1672 <= or_ln20_fu_736_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_548 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_552 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_556 <= grp_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_561 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_565 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)))) then
                reg_569 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)))) then
                reg_573 <= grp_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)))) then
                reg_578 <= grp_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then
                reg_583 <= grp_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then
                reg_588 <= grp_fu_540_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1751(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, icmp_ln19_fu_625_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln19_fu_625_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln19_fu_625_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state178;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state178;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Layer1_Weights_CPU_Addr_A <= std_logic_vector(shift_left(unsigned(Layer1_Weights_CPU_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    Layer1_Weights_CPU_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, p_cast15_fu_840_p1, p_cast17_fu_874_p1, p_cast19_fu_947_p1, p_cast21_fu_967_p1, p_cast23_fu_987_p1, p_cast25_fu_1007_p1, p_cast27_fu_1027_p1, p_cast29_fu_1102_p1, ap_block_pp0_stage9, p_cast31_fu_1122_p1, ap_block_pp0_stage10, p_cast33_fu_1142_p1, p_cast14_fu_1152_p1, p_cast36_fu_1182_p1, zext_ln27_fu_1299_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                Layer1_Weights_CPU_Addr_A_orig <= zext_ln27_fu_1299_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast36_fu_1182_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast14_fu_1152_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast33_fu_1142_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast31_fu_1122_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast29_fu_1102_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast27_fu_1027_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast25_fu_1007_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast23_fu_987_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast21_fu_967_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast19_fu_947_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast17_fu_874_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast15_fu_840_p1(32 - 1 downto 0);
            else 
                Layer1_Weights_CPU_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            Layer1_Weights_CPU_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    Layer1_Weights_CPU_Addr_B <= std_logic_vector(shift_left(unsigned(Layer1_Weights_CPU_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    Layer1_Weights_CPU_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, p_cast13_fu_831_p1, p_cast16_fu_864_p1, p_cast18_fu_937_p1, p_cast20_fu_957_p1, p_cast22_fu_977_p1, p_cast24_fu_997_p1, p_cast26_fu_1017_p1, p_cast28_fu_1092_p1, p_cast30_fu_1112_p1, ap_block_pp0_stage9, p_cast32_fu_1132_p1, ap_block_pp0_stage10, p_cast34_fu_1162_p1, p_cast35_fu_1172_p1, p_cast37_fu_1289_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast37_fu_1289_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast35_fu_1172_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast34_fu_1162_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast32_fu_1132_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast30_fu_1112_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast28_fu_1092_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast26_fu_1017_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast24_fu_997_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast22_fu_977_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast20_fu_957_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast18_fu_937_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast16_fu_864_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast13_fu_831_p1(32 - 1 downto 0);
            else 
                Layer1_Weights_CPU_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            Layer1_Weights_CPU_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    Layer1_Weights_CPU_Clk_A <= ap_clk;
    Layer1_Weights_CPU_Clk_B <= ap_clk;
    Layer1_Weights_CPU_Din_A <= ap_const_lv32_0;
    Layer1_Weights_CPU_Din_B <= ap_const_lv32_0;

    Layer1_Weights_CPU_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = 
    ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            Layer1_Weights_CPU_EN_A <= ap_const_logic_1;
        else 
            Layer1_Weights_CPU_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    Layer1_Weights_CPU_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = 
    ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            Layer1_Weights_CPU_EN_B <= ap_const_logic_1;
        else 
            Layer1_Weights_CPU_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    Layer1_Weights_CPU_Rst_A <= ap_rst_n_inv;
    Layer1_Weights_CPU_Rst_B <= ap_rst_n_inv;
    Layer1_Weights_CPU_WEN_A <= ap_const_lv4_0;
    Layer1_Weights_CPU_WEN_B <= ap_const_lv4_0;
    add_ln19_1_fu_684_p2 <= std_logic_vector(unsigned(i_fu_192) + unsigned(ap_const_lv3_1));
    add_ln19_fu_631_p2 <= std_logic_vector(unsigned(indvar_flatten18_fu_196) + unsigned(ap_const_lv10_1));
    add_ln20_1_fu_766_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_188) + unsigned(ap_const_lv8_1));
    add_ln20_fu_698_p2 <= std_logic_vector(unsigned(select_ln17_fu_652_p3) + unsigned(ap_const_lv4_1));
    add_ln21_fu_760_p2 <= std_logic_vector(unsigned(select_ln17_1_fu_716_p3) + unsigned(ap_const_lv4_1));
    and_ln17_fu_678_p2 <= (xor_ln17_fu_666_p2 and icmp_ln21_fu_672_p2);
    and_ln20_fu_730_p2 <= (xor_ln20_fu_724_p2 and ap_phi_mux_first_iter_1_phi_fu_526_p4);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state178 <= ap_CS_fsm(29);
    ap_ST_fsm_state178_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state30_pp0_stage0_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp802_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage0_iter1_ignore_call283)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp802 <= ((ap_const_boolean_1 = ap_block_state30_pp0_stage0_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state30_pp0_stage0_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001_ignoreCallOp784 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_const_boolean_1 = ap_block_state13_pp0_stage11_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_11001_ignoreCallOp785_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage11_iter0_ignore_call283)
    begin
                ap_block_pp0_stage11_11001_ignoreCallOp785 <= ((ap_const_boolean_1 = ap_block_state13_pp0_stage11_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_const_boolean_1 = ap_block_state13_pp0_stage11_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_const_boolean_1 = ap_block_state14_pp0_stage12_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage12_11001_ignoreCallOp786_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage12_iter0_ignore_call283)
    begin
                ap_block_pp0_stage12_11001_ignoreCallOp786 <= ((ap_const_boolean_1 = ap_block_state14_pp0_stage12_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_const_boolean_1 = ap_block_state14_pp0_stage12_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage13_iter0, ap_block_state15_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or (ap_const_boolean_1 = ap_block_state15_pp0_stage13_iter0)));
    end process;


    ap_block_pp0_stage13_11001_ignoreCallOp787_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_io, ap_block_state15_pp0_stage13_iter0_ignore_call283)
    begin
                ap_block_pp0_stage13_11001_ignoreCallOp787 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or (ap_const_boolean_1 = ap_block_state15_pp0_stage13_iter0_ignore_call283)));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage13_iter0, ap_block_state15_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or (ap_const_boolean_1 = ap_block_state15_pp0_stage13_iter0)));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_const_boolean_1 = ap_block_state16_pp0_stage14_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage14_11001_ignoreCallOp788_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage14_iter0_ignore_call283)
    begin
                ap_block_pp0_stage14_11001_ignoreCallOp788 <= ((ap_const_boolean_1 = ap_block_state16_pp0_stage14_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_const_boolean_1 = ap_block_state16_pp0_stage14_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_const_boolean_1 = ap_block_state17_pp0_stage15_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage15_11001_ignoreCallOp789_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage15_iter0_ignore_call283)
    begin
                ap_block_pp0_stage15_11001_ignoreCallOp789 <= ((ap_const_boolean_1 = ap_block_state17_pp0_stage15_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_const_boolean_1 = ap_block_state17_pp0_stage15_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_const_boolean_1 = ap_block_state18_pp0_stage16_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage16_11001_ignoreCallOp790_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage16_iter0_ignore_call283)
    begin
                ap_block_pp0_stage16_11001_ignoreCallOp790 <= ((ap_const_boolean_1 = ap_block_state18_pp0_stage16_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_const_boolean_1 = ap_block_state18_pp0_stage16_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_const_boolean_1 = ap_block_state19_pp0_stage17_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage17_11001_ignoreCallOp791_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage17_iter0_ignore_call283)
    begin
                ap_block_pp0_stage17_11001_ignoreCallOp791 <= ((ap_const_boolean_1 = ap_block_state19_pp0_stage17_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_const_boolean_1 = ap_block_state19_pp0_stage17_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage18_iter0, ap_block_state20_io)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state20_io) or (ap_const_boolean_1 = ap_block_state20_pp0_stage18_iter0)));
    end process;


    ap_block_pp0_stage18_11001_ignoreCallOp792_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_io, ap_block_state20_pp0_stage18_iter0_ignore_call283)
    begin
                ap_block_pp0_stage18_11001_ignoreCallOp792 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state20_io) or (ap_const_boolean_1 = ap_block_state20_pp0_stage18_iter0_ignore_call283)));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage18_iter0, ap_block_state20_io)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state20_io) or (ap_const_boolean_1 = ap_block_state20_pp0_stage18_iter0)));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_11001 <= ((ap_const_boolean_1 = ap_block_state21_pp0_stage19_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage19_11001_ignoreCallOp793_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage19_iter0_ignore_call283)
    begin
                ap_block_pp0_stage19_11001_ignoreCallOp793 <= ((ap_const_boolean_1 = ap_block_state21_pp0_stage19_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_subdone <= ((ap_const_boolean_1 = ap_block_state21_pp0_stage19_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state31_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state31_pp0_stage1_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp775_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state31_pp0_stage1_iter1_ignore_call283)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp775 <= (((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state31_pp0_stage1_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state31_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state31_pp0_stage1_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_11001 <= ((ap_const_boolean_1 = ap_block_state22_pp0_stage20_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage20_11001_ignoreCallOp794_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage20_iter0_ignore_call283)
    begin
                ap_block_pp0_stage20_11001_ignoreCallOp794 <= ((ap_const_boolean_1 = ap_block_state22_pp0_stage20_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_subdone <= ((ap_const_boolean_1 = ap_block_state22_pp0_stage20_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_11001 <= ((ap_const_boolean_1 = ap_block_state23_pp0_stage21_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage21_11001_ignoreCallOp795_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage21_iter0_ignore_call283)
    begin
                ap_block_pp0_stage21_11001_ignoreCallOp795 <= ((ap_const_boolean_1 = ap_block_state23_pp0_stage21_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_subdone <= ((ap_const_boolean_1 = ap_block_state23_pp0_stage21_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_11001 <= ((ap_const_boolean_1 = ap_block_state24_pp0_stage22_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage22_11001_ignoreCallOp796_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage22_iter0_ignore_call283)
    begin
                ap_block_pp0_stage22_11001_ignoreCallOp796 <= ((ap_const_boolean_1 = ap_block_state24_pp0_stage22_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_subdone <= ((ap_const_boolean_1 = ap_block_state24_pp0_stage22_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage23_iter0, ap_block_state25_io)
    begin
                ap_block_pp0_stage23_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state25_io) or (ap_const_boolean_1 = ap_block_state25_pp0_stage23_iter0)));
    end process;


    ap_block_pp0_stage23_11001_ignoreCallOp797_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_io, ap_block_state25_pp0_stage23_iter0_ignore_call283)
    begin
                ap_block_pp0_stage23_11001_ignoreCallOp797 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state25_io) or (ap_const_boolean_1 = ap_block_state25_pp0_stage23_iter0_ignore_call283)));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage23_iter0, ap_block_state25_io)
    begin
                ap_block_pp0_stage23_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state25_io) or (ap_const_boolean_1 = ap_block_state25_pp0_stage23_iter0)));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_11001 <= ((ap_const_boolean_1 = ap_block_state26_pp0_stage24_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage24_11001_ignoreCallOp798_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage24_iter0_ignore_call283)
    begin
                ap_block_pp0_stage24_11001_ignoreCallOp798 <= ((ap_const_boolean_1 = ap_block_state26_pp0_stage24_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state26_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_subdone <= ((ap_const_boolean_1 = ap_block_state26_pp0_stage24_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state27_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_11001 <= ((ap_const_boolean_1 = ap_block_state27_pp0_stage25_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage25_11001_ignoreCallOp799_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state27_pp0_stage25_iter0_ignore_call283)
    begin
                ap_block_pp0_stage25_11001_ignoreCallOp799 <= ((ap_const_boolean_1 = ap_block_state27_pp0_stage25_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state27_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_subdone <= ((ap_const_boolean_1 = ap_block_state27_pp0_stage25_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage26_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state28_pp0_stage26_iter0)
    begin
                ap_block_pp0_stage26_11001 <= ((ap_const_boolean_1 = ap_block_state28_pp0_stage26_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage26_11001_ignoreCallOp800_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state28_pp0_stage26_iter0_ignore_call283)
    begin
                ap_block_pp0_stage26_11001_ignoreCallOp800 <= ((ap_const_boolean_1 = ap_block_state28_pp0_stage26_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage26_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state28_pp0_stage26_iter0)
    begin
                ap_block_pp0_stage26_subdone <= ((ap_const_boolean_1 = ap_block_state28_pp0_stage26_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage27_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state29_pp0_stage27_iter0)
    begin
                ap_block_pp0_stage27_11001 <= ((ap_const_boolean_1 = ap_block_state29_pp0_stage27_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage27_11001_ignoreCallOp801_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state29_pp0_stage27_iter0_ignore_call283)
    begin
                ap_block_pp0_stage27_11001_ignoreCallOp801 <= ((ap_const_boolean_1 = ap_block_state29_pp0_stage27_iter0_ignore_call283) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage27_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state29_pp0_stage27_iter0)
    begin
                ap_block_pp0_stage27_subdone <= ((ap_const_boolean_1 = ap_block_state29_pp0_stage27_iter0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_const_boolean_1 = ap_block_state32_pp0_stage2_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, gmem_WREADY, ap_block_state32_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_11001 <= (((gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state32_pp0_stage2_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_11001_ignoreCallOp776_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, gmem_WREADY, ap_block_state32_pp0_stage2_iter1_ignore_call283)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp776 <= (((gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state32_pp0_stage2_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, gmem_WREADY, ap_block_state32_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_subdone <= (((gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state32_pp0_stage2_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io, ap_block_state33_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_const_boolean_1 = ap_block_state33_pp0_stage3_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_11001_ignoreCallOp777_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io, ap_block_state33_pp0_stage3_iter1_ignore_call283)
    begin
                ap_block_pp0_stage3_11001_ignoreCallOp777 <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state33_pp0_stage3_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io, ap_block_state33_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_const_boolean_1 = ap_block_state33_pp0_stage3_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_const_boolean_1 = ap_block_state34_pp0_stage4_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_ignoreCallOp778_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage4_iter1_ignore_call283)
    begin
                ap_block_pp0_stage4_11001_ignoreCallOp778 <= ((ap_const_boolean_1 = ap_block_state34_pp0_stage4_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_const_boolean_1 = ap_block_state34_pp0_stage4_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_const_boolean_1 = ap_block_state35_pp0_stage5_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_11001_ignoreCallOp779_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage5_iter1_ignore_call283)
    begin
                ap_block_pp0_stage5_11001_ignoreCallOp779 <= ((ap_const_boolean_1 = ap_block_state35_pp0_stage5_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_const_boolean_1 = ap_block_state35_pp0_stage5_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state36_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_const_boolean_1 = ap_block_state36_pp0_stage6_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_11001_ignoreCallOp780_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state36_pp0_stage6_iter1_ignore_call283)
    begin
                ap_block_pp0_stage6_11001_ignoreCallOp780 <= ((ap_const_boolean_1 = ap_block_state36_pp0_stage6_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state36_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_const_boolean_1 = ap_block_state36_pp0_stage6_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_block_state37_pp0_stage7_iter1, ap_block_state177_pp0_stage7_iter6)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_const_boolean_1 = ap_block_state177_pp0_stage7_iter6) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state37_pp0_stage7_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_11001_ignoreCallOp781_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_block_state37_pp0_stage7_iter1_ignore_call283, ap_block_state177_pp0_stage7_iter6_ignore_call283)
    begin
                ap_block_pp0_stage7_11001_ignoreCallOp781 <= (((ap_const_boolean_1 = ap_block_state177_pp0_stage7_iter6_ignore_call283) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state37_pp0_stage7_iter1_ignore_call283) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_block_state37_pp0_stage7_iter1, ap_block_state177_pp0_stage7_iter6)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_const_boolean_1 = ap_block_state177_pp0_stage7_iter6) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state37_pp0_stage7_iter1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_io)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage8_11001_ignoreCallOp782_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_io)
    begin
                ap_block_pp0_stage8_11001_ignoreCallOp782 <= ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state10_io)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001_ignoreCallOp783 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state10_io_assign_proc : process(icmp_ln19_reg_1659, gmem_ARREADY)
    begin
                ap_block_state10_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage11_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state13_pp0_stage11_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage11_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state13_pp0_stage11_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage12_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state14_pp0_stage12_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage12_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state14_pp0_stage12_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state15_io_assign_proc : process(icmp_ln19_reg_1659, gmem_ARREADY)
    begin
                ap_block_state15_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage13_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state15_pp0_stage13_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage13_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state15_pp0_stage13_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage14_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state16_pp0_stage14_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage14_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state16_pp0_stage14_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state177_pp0_stage7_iter6_assign_proc : process(icmp_ln19_1_reg_1712_pp0_iter6_reg, gmem_BVALID)
    begin
                ap_block_state177_pp0_stage7_iter6 <= ((gmem_BVALID = ap_const_logic_0) and (icmp_ln19_1_reg_1712_pp0_iter6_reg = ap_const_lv1_1));
    end process;


    ap_block_state177_pp0_stage7_iter6_ignore_call283_assign_proc : process(icmp_ln19_1_reg_1712_pp0_iter6_reg, gmem_BVALID)
    begin
                ap_block_state177_pp0_stage7_iter6_ignore_call283 <= ((gmem_BVALID = ap_const_logic_0) and (icmp_ln19_1_reg_1712_pp0_iter6_reg = ap_const_lv1_1));
    end process;


    ap_block_state17_pp0_stage15_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state17_pp0_stage15_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage15_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state17_pp0_stage15_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage16_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state18_pp0_stage16_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage16_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state18_pp0_stage16_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state19_pp0_stage17_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state19_pp0_stage17_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state19_pp0_stage17_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state19_pp0_stage17_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state20_io_assign_proc : process(icmp_ln19_reg_1659, gmem_ARREADY)
    begin
                ap_block_state20_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state20_pp0_stage18_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state20_pp0_stage18_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state20_pp0_stage18_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state20_pp0_stage18_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state21_pp0_stage19_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state21_pp0_stage19_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state21_pp0_stage19_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state21_pp0_stage19_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state22_pp0_stage20_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state22_pp0_stage20_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state22_pp0_stage20_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state22_pp0_stage20_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state23_pp0_stage21_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state23_pp0_stage21_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state23_pp0_stage21_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state23_pp0_stage21_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state24_pp0_stage22_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state24_pp0_stage22_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state24_pp0_stage22_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state24_pp0_stage22_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state25_io_assign_proc : process(icmp_ln19_reg_1659, gmem_ARREADY)
    begin
                ap_block_state25_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state25_pp0_stage23_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state25_pp0_stage23_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state25_pp0_stage23_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state25_pp0_stage23_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state26_pp0_stage24_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state26_pp0_stage24_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state26_pp0_stage24_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state26_pp0_stage24_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state27_pp0_stage25_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state27_pp0_stage25_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state27_pp0_stage25_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state27_pp0_stage25_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state28_pp0_stage26_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state28_pp0_stage26_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state28_pp0_stage26_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state28_pp0_stage26_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state29_pp0_stage27_iter0_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state29_pp0_stage27_iter0 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state29_pp0_stage27_iter0_ignore_call283_assign_proc : process(icmp_ln19_reg_1659, gmem_RVALID)
    begin
                ap_block_state29_pp0_stage27_iter0_ignore_call283 <= ((gmem_RVALID = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_block_state30_pp0_stage0_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state30_pp0_stage0_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state30_pp0_stage0_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state30_pp0_stage0_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state31_pp0_stage1_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state31_pp0_stage1_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state31_pp0_stage1_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state31_pp0_stage1_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state32_pp0_stage2_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state32_pp0_stage2_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state32_pp0_stage2_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state32_pp0_stage2_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state33_pp0_stage3_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state33_pp0_stage3_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state33_pp0_stage3_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state33_pp0_stage3_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state34_pp0_stage4_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state34_pp0_stage4_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state34_pp0_stage4_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state34_pp0_stage4_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state35_pp0_stage5_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state35_pp0_stage5_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state35_pp0_stage5_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state35_pp0_stage5_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state36_pp0_stage6_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state36_pp0_stage6_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state36_pp0_stage6_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state36_pp0_stage6_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state37_pp0_stage7_iter1_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state37_pp0_stage7_iter1 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state37_pp0_stage7_iter1_ignore_call283_assign_proc : process(gmem_RVALID)
    begin
                ap_block_state37_pp0_stage7_iter1_ignore_call283 <= (gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state3_io_assign_proc : process(gmem_AWREADY, ap_predicate_op248_writereq_state3)
    begin
                ap_block_state3_io <= ((ap_predicate_op248_writereq_state3 = ap_const_boolean_1) and (gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state5_io_assign_proc : process(icmp_ln19_reg_1659, gmem_ARREADY)
    begin
                ap_block_state5_io <= ((gmem_ARREADY = ap_const_logic_0) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln19_fu_625_p2)
    begin
        if ((icmp_ln19_fu_625_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state178)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_first_iter_032_phi_fu_513_p4_assign_proc : process(icmp_ln19_reg_1659, first_iter_032_reg_509, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_first_iter_032_phi_fu_513_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_first_iter_032_phi_fu_513_p4 <= first_iter_032_reg_509;
        end if; 
    end process;


    ap_phi_mux_first_iter_1_phi_fu_526_p4_assign_proc : process(icmp_ln19_reg_1659, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, first_iter_1_reg_522, or_ln20_reg_1672)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_first_iter_1_phi_fu_526_p4 <= or_ln20_reg_1672;
        else 
            ap_phi_mux_first_iter_1_phi_fu_526_p4 <= first_iter_1_reg_522;
        end if; 
    end process;


    ap_predicate_op248_writereq_state3_assign_proc : process(icmp_ln19_reg_1659, first_iter_032_reg_509)
    begin
                ap_predicate_op248_writereq_state3 <= ((first_iter_032_reg_509 = ap_const_lv1_1) and (icmp_ln19_reg_1659 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state178)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln27_10_fu_1445_p1 <= Layer1_Weights_CPU_load_11_reg_1870;
    bitcast_ln27_11_fu_1479_p1 <= Layer1_Weights_CPU_load_12_reg_1885;
    bitcast_ln27_12_fu_1488_p1 <= Layer1_Weights_CPU_load_13_reg_1890;
    bitcast_ln27_13_fu_1497_p1 <= Layer1_Weights_CPU_load_14_reg_1905;
    bitcast_ln27_14_fu_1506_p1 <= Layer1_Weights_CPU_load_15_reg_1910;
    bitcast_ln27_15_fu_1510_p1 <= Layer1_Weights_CPU_load_16_reg_1925;
    bitcast_ln27_16_fu_1524_p1 <= Layer1_Weights_CPU_load_17_reg_1930;
    bitcast_ln27_17_fu_1533_p1 <= Layer1_Weights_CPU_load_18_reg_1945;
    bitcast_ln27_18_fu_1542_p1 <= Layer1_Weights_CPU_load_19_reg_1950;
    bitcast_ln27_19_fu_1551_p1 <= Layer1_Weights_CPU_load_20_reg_1991;
    bitcast_ln27_1_fu_1309_p1 <= Layer1_Weights_CPU_load_2_reg_1779;
    bitcast_ln27_20_fu_1555_p1 <= Layer1_Weights_CPU_load_21_reg_1996;
    bitcast_ln27_21_fu_1569_p1 <= Layer1_Weights_CPU_load_22_reg_2021;
    bitcast_ln27_22_fu_1578_p1 <= Layer1_Weights_CPU_load_23_reg_2026;
    bitcast_ln27_23_fu_1587_p1 <= Layer1_Weights_CPU_load_24_reg_2041;
    bitcast_ln27_24_fu_1596_p1 <= Layer1_Weights_CPU_load_25_reg_2046;
    bitcast_ln27_2_fu_1318_p1 <= Layer1_Weights_CPU_load_3_reg_1784;
    bitcast_ln27_3_fu_1327_p1 <= Layer1_Weights_CPU_load_4_reg_1799;
    bitcast_ln27_4_fu_1344_p1 <= Layer1_Weights_CPU_load_5_reg_1804;
    bitcast_ln27_5_fu_1364_p1 <= Layer1_Weights_CPU_load_6_reg_1819;
    bitcast_ln27_6_fu_1398_p1 <= Layer1_Weights_CPU_load_7_reg_1824;
    bitcast_ln27_7_fu_1407_p1 <= Layer1_Weights_CPU_load_8_reg_1839;
    bitcast_ln27_8_fu_1416_p1 <= Layer1_Weights_CPU_load_9_reg_1844;
    bitcast_ln27_9_fu_1425_p1 <= Layer1_Weights_CPU_load_10_reg_1865;
    bitcast_ln27_fu_1255_p1 <= Layer1_Weights_CPU_load_1_reg_1758;
    bitcast_ln28_10_fu_1449_p1 <= reg_561;
    bitcast_ln28_11_fu_1474_p1 <= reg_561;
    bitcast_ln28_12_fu_1483_p1 <= reg_561;
    bitcast_ln28_13_fu_1492_p1 <= reg_561;
    bitcast_ln28_14_fu_1501_p1 <= reg_561;
    bitcast_ln28_15_fu_1514_p1 <= reg_565;
    bitcast_ln28_16_fu_1519_p1 <= reg_565;
    bitcast_ln28_17_fu_1528_p1 <= reg_565;
    bitcast_ln28_18_fu_1537_p1 <= reg_565;
    bitcast_ln28_19_fu_1546_p1 <= reg_565;
    bitcast_ln28_1_fu_1304_p1 <= reg_548;
    bitcast_ln28_20_fu_1559_p1 <= reg_569;
    bitcast_ln28_21_fu_1564_p1 <= reg_569;
    bitcast_ln28_22_fu_1573_p1 <= reg_569;
    bitcast_ln28_23_fu_1582_p1 <= reg_569;
    bitcast_ln28_24_fu_1591_p1 <= reg_569;
    bitcast_ln28_2_fu_1313_p1 <= reg_548;
    bitcast_ln28_3_fu_1322_p1 <= reg_548;
    bitcast_ln28_4_fu_1339_p1 <= reg_548;
    bitcast_ln28_5_fu_1368_p1 <= reg_552;
    bitcast_ln28_6_fu_1393_p1 <= reg_552;
    bitcast_ln28_7_fu_1402_p1 <= reg_552;
    bitcast_ln28_8_fu_1411_p1 <= reg_552;
    bitcast_ln28_9_fu_1420_p1 <= reg_552;
    bitcast_ln28_fu_1259_p1 <= reg_548;
    empty_20_fu_1147_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_15));
    empty_21_fu_835_p2 <= (empty_62_reg_1682 or ap_const_lv8_1);
    empty_22_fu_859_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_2));
    empty_23_fu_869_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_3));
    empty_24_fu_932_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_4));
    empty_25_fu_942_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_5));
    empty_26_fu_952_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_6));
    empty_27_fu_962_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_7));
    empty_28_fu_972_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_8));
    empty_29_fu_982_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_9));
    empty_30_fu_992_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_A));
    empty_31_fu_1002_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_B));
    empty_32_fu_1012_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_C));
    empty_33_fu_1022_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_D));
    empty_34_fu_1087_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_E));
    empty_35_fu_1097_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_F));
    empty_36_fu_1107_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_10));
    empty_37_fu_1117_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_11));
    empty_38_fu_1127_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_12));
    empty_39_fu_1137_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_13));
    empty_40_fu_1157_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_14));
    empty_41_fu_1167_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_16));
    empty_42_fu_1177_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_17));
    empty_43_fu_1284_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_18));
    empty_44_fu_1294_p2 <= std_logic_vector(unsigned(empty_62_reg_1682) + unsigned(ap_const_lv8_19));
    empty_45_fu_848_p0 <= empty_45_fu_848_p00(4 - 1 downto 0);
    empty_45_fu_848_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln20_reg_1677),10));
    empty_45_fu_848_p1 <= ap_const_lv10_3A(7 - 1 downto 0);
    empty_46_fu_1203_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_1199_p1) + unsigned(empty_45_reg_1732));
    empty_47_fu_1440_p2 <= std_logic_vector(unsigned(p_cast39_fu_1436_p1) + unsigned(Layer1_Neurons_CPU_read_reg_1650));
    empty_48_fu_1218_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_1214_p1) + unsigned(empty_45_reg_1732));
    empty_49_fu_1359_p2 <= std_logic_vector(unsigned(p_cast40_fu_1355_p1) + unsigned(Layer1_Neurons_CPU_read_reg_1650));
    empty_50_fu_1233_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_1229_p1) + unsigned(empty_45_reg_1732));
    empty_51_fu_1250_p2 <= std_logic_vector(unsigned(p_cast41_fu_1246_p1) + unsigned(Layer1_Neurons_CPU_read_reg_1650));
    empty_52_fu_1045_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_1041_p1) + unsigned(empty_45_reg_1732));
    empty_53_fu_1062_p2 <= std_logic_vector(unsigned(p_cast42_fu_1058_p1) + unsigned(Layer1_Neurons_CPU_read_reg_1650));
    empty_54_fu_890_p2 <= std_logic_vector(unsigned(p_cast11_fu_886_p1) + unsigned(empty_45_reg_1732));
    empty_55_fu_907_p2 <= std_logic_vector(unsigned(p_cast43_fu_903_p1) + unsigned(Layer1_Neurons_CPU_read_reg_1650));
    empty_62_fu_754_p0 <= empty_62_fu_754_p00(3 - 1 downto 0);
    empty_62_fu_754_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln19_fu_690_p3),8));
    empty_62_fu_754_p1 <= ap_const_lv8_1A(6 - 1 downto 0);

    gmem_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_reg_1659, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage13_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage8_11001, gmem_addr_1_reg_1763, gmem_addr_2_reg_1859, gmem_addr_3_reg_1985, gmem_addr_4_reg_2101, gmem_addr_5_reg_2182)
    begin
        if (((icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then 
                gmem_ARADDR <= gmem_addr_5_reg_2182;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then 
                gmem_ARADDR <= gmem_addr_4_reg_2101;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then 
                gmem_ARADDR <= gmem_addr_3_reg_1985;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                gmem_ARADDR <= gmem_addr_2_reg_1859;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                gmem_ARADDR <= gmem_addr_1_reg_1763;
            else 
                gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_reg_1659, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage13_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op248_writereq_state3, ap_block_pp0_stage1_11001)
    begin
        if (((ap_predicate_op248_writereq_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, icmp_ln19_1_reg_1712_pp0_iter6_reg, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln19_1_reg_1712_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln19_reg_1659, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) 
    or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 
    = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = 
    ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) 
    and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    gmem_WDATA <= tmp_reg_2413;

    gmem_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_enable_reg_pp0_iter0, icmp_ln19_reg_1659, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln19_reg_1659, first_iter_032_reg_509)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (first_iter_032_reg_509 = ap_const_lv1_1) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, icmp_ln19_1_reg_1712_pp0_iter6_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln19_1_reg_1712_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln19_reg_1659, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln19_reg_1659 
    = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln19_reg_1659 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6, ap_block_pp0_stage2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_SIGMOID_fu_533_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_11001_ignoreCallOp775, ap_block_pp0_stage2_11001_ignoreCallOp776, ap_block_pp0_stage3_11001_ignoreCallOp777, ap_block_pp0_stage4_11001_ignoreCallOp778, ap_block_pp0_stage5_11001_ignoreCallOp779, ap_block_pp0_stage6_11001_ignoreCallOp780, ap_block_pp0_stage7_11001_ignoreCallOp781, ap_block_pp0_stage8_11001_ignoreCallOp782, ap_block_pp0_stage9_11001_ignoreCallOp783, ap_block_pp0_stage10_11001_ignoreCallOp784, ap_block_pp0_stage11_11001_ignoreCallOp785, ap_block_pp0_stage12_11001_ignoreCallOp786, ap_block_pp0_stage13_11001_ignoreCallOp787, ap_block_pp0_stage14_11001_ignoreCallOp788, ap_block_pp0_stage15_11001_ignoreCallOp789, ap_block_pp0_stage16_11001_ignoreCallOp790, ap_block_pp0_stage17_11001_ignoreCallOp791, ap_block_pp0_stage18_11001_ignoreCallOp792, ap_block_pp0_stage19_11001_ignoreCallOp793, ap_block_pp0_stage20_11001_ignoreCallOp794, ap_block_pp0_stage21_11001_ignoreCallOp795, ap_block_pp0_stage22_11001_ignoreCallOp796, ap_block_pp0_stage23_11001_ignoreCallOp797, ap_block_pp0_stage24_11001_ignoreCallOp798, ap_block_pp0_stage25_11001_ignoreCallOp799, ap_block_pp0_stage26_11001_ignoreCallOp800, ap_block_pp0_stage27_11001_ignoreCallOp801, ap_block_pp0_stage0_11001_ignoreCallOp802)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001_ignoreCallOp784)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001_ignoreCallOp783)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp780)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp779)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp778)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp802)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001_ignoreCallOp801)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001_ignoreCallOp800)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001_ignoreCallOp799)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001_ignoreCallOp798)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001_ignoreCallOp797)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001_ignoreCallOp796)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001_ignoreCallOp795)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001_ignoreCallOp794)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001_ignoreCallOp793)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001_ignoreCallOp792)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001_ignoreCallOp791)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001_ignoreCallOp790)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001_ignoreCallOp782)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001_ignoreCallOp789)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001_ignoreCallOp788)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001_ignoreCallOp787)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001_ignoreCallOp786)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001_ignoreCallOp785)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp777)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp781)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp776)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp775)))) then 
            grp_SIGMOID_fu_533_ap_ce <= ap_const_logic_1;
        else 
            grp_SIGMOID_fu_533_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_SIGMOID_fu_533_ap_start <= grp_SIGMOID_fu_533_ap_start_reg;

    grp_fu_540_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) 
    and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_540_ce <= ap_const_logic_1;
        else 
            grp_fu_540_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_540_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, reg_556, reg_573, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, reg_578, ap_enable_reg_pp0_iter3, reg_583, ap_enable_reg_pp0_iter4, reg_588, ap_CS_fsm_pp0_stage10, somme_fu_1334_p1, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)))) then 
            grp_fu_540_p0 <= reg_588;
        elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)))) then 
            grp_fu_540_p0 <= reg_583;
        elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)))) then 
            grp_fu_540_p0 <= reg_578;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18)))) then 
            grp_fu_540_p0 <= reg_573;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_540_p0 <= reg_556;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_540_p0 <= somme_fu_1334_p1;
        else 
            grp_fu_540_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_540_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage10, mul_reg_2056, mul27_s_reg_2076, mul27_5_reg_2086, mul27_6_reg_2107, mul27_7_reg_2122, mul27_1_reg_2142, mul27_1_1_reg_2157, mul27_1_2_reg_2167_pp0_iter1_reg, mul27_1_3_reg_2188_pp0_iter1_reg, mul27_1_4_reg_2203_pp0_iter1_reg, mul27_2_reg_2223_pp0_iter1_reg, mul27_2_1_reg_2238_pp0_iter1_reg, mul27_2_2_reg_2248_pp0_iter1_reg, mul27_2_3_reg_2263_pp0_iter2_reg, mul27_2_4_reg_2278_pp0_iter3_reg, mul27_3_reg_2298_pp0_iter3_reg, mul27_3_1_reg_2313_pp0_iter3_reg, mul27_3_2_reg_2323_pp0_iter3_reg, mul27_3_3_reg_2338_pp0_iter3_reg, mul27_3_4_reg_2353_pp0_iter3_reg, mul27_4_reg_2373_pp0_iter3_reg, mul27_4_1_reg_2388_pp0_iter4_reg, mul27_4_2_reg_2398_pp0_iter4_reg, mul27_4_3_reg_2403_pp0_iter4_reg, mul27_4_4_reg_2408_pp0_iter4_reg, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_540_p1 <= mul27_4_4_reg_2408_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_540_p1 <= mul27_4_3_reg_2403_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_540_p1 <= mul27_4_2_reg_2398_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_540_p1 <= mul27_4_1_reg_2388_pp0_iter4_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_540_p1 <= mul27_4_reg_2373_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27))) then 
            grp_fu_540_p1 <= mul27_3_4_reg_2353_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_540_p1 <= mul27_3_3_reg_2338_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_540_p1 <= mul27_3_2_reg_2323_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_540_p1 <= mul27_3_1_reg_2313_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_540_p1 <= mul27_3_reg_2298_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_540_p1 <= mul27_2_4_reg_2278_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
            grp_fu_540_p1 <= mul27_2_3_reg_2263_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_540_p1 <= mul27_2_2_reg_2248_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_540_p1 <= mul27_2_1_reg_2238_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_540_p1 <= mul27_2_reg_2223_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_540_p1 <= mul27_1_4_reg_2203_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_540_p1 <= mul27_1_3_reg_2188_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_540_p1 <= mul27_1_2_reg_2167_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_540_p1 <= mul27_1_1_reg_2157;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_540_p1 <= mul27_1_reg_2142;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_540_p1 <= mul27_7_reg_2122;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_540_p1 <= mul27_6_reg_2107;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_540_p1 <= mul27_5_reg_2086;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_540_p1 <= mul27_s_reg_2076;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_540_p1 <= mul_reg_2056;
        else 
            grp_fu_540_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_544_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) 
    and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_544_ce <= ap_const_logic_1;
        else 
            grp_fu_544_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_544_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, bitcast_ln27_fu_1255_p1, bitcast_ln27_1_fu_1309_p1, bitcast_ln27_2_fu_1318_p1, bitcast_ln27_3_fu_1327_p1, bitcast_ln27_4_fu_1344_p1, bitcast_ln27_5_fu_1364_p1, bitcast_ln27_6_fu_1398_p1, bitcast_ln27_7_fu_1407_p1, bitcast_ln27_8_fu_1416_p1, bitcast_ln27_9_fu_1425_p1, bitcast_ln27_10_fu_1445_p1, bitcast_ln27_11_fu_1479_p1, bitcast_ln27_12_fu_1488_p1, bitcast_ln27_13_fu_1497_p1, bitcast_ln27_14_fu_1506_p1, bitcast_ln27_15_fu_1510_p1, bitcast_ln27_16_fu_1524_p1, bitcast_ln27_17_fu_1533_p1, bitcast_ln27_18_fu_1542_p1, bitcast_ln27_19_fu_1551_p1, bitcast_ln27_20_fu_1555_p1, bitcast_ln27_21_fu_1569_p1, bitcast_ln27_22_fu_1578_p1, bitcast_ln27_23_fu_1587_p1, bitcast_ln27_24_fu_1596_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_544_p0 <= bitcast_ln27_24_fu_1596_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_544_p0 <= bitcast_ln27_23_fu_1587_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_544_p0 <= bitcast_ln27_22_fu_1578_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_544_p0 <= bitcast_ln27_21_fu_1569_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_544_p0 <= bitcast_ln27_20_fu_1555_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_544_p0 <= bitcast_ln27_19_fu_1551_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_544_p0 <= bitcast_ln27_18_fu_1542_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_544_p0 <= bitcast_ln27_17_fu_1533_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_544_p0 <= bitcast_ln27_16_fu_1524_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_15_fu_1510_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_14_fu_1506_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_13_fu_1497_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_12_fu_1488_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_11_fu_1479_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_10_fu_1445_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_9_fu_1425_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_8_fu_1416_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_7_fu_1407_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_6_fu_1398_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_5_fu_1364_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_4_fu_1344_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_3_fu_1327_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_2_fu_1318_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_1_fu_1309_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p0 <= bitcast_ln27_fu_1255_p1;
        else 
            grp_fu_544_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_544_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, bitcast_ln28_fu_1259_p1, bitcast_ln28_1_fu_1304_p1, bitcast_ln28_2_fu_1313_p1, bitcast_ln28_3_fu_1322_p1, bitcast_ln28_4_fu_1339_p1, bitcast_ln28_5_fu_1368_p1, bitcast_ln28_6_fu_1393_p1, bitcast_ln28_7_fu_1402_p1, bitcast_ln28_8_fu_1411_p1, bitcast_ln28_9_fu_1420_p1, bitcast_ln28_10_fu_1449_p1, bitcast_ln28_11_fu_1474_p1, bitcast_ln28_12_fu_1483_p1, bitcast_ln28_13_fu_1492_p1, bitcast_ln28_14_fu_1501_p1, bitcast_ln28_15_fu_1514_p1, bitcast_ln28_16_fu_1519_p1, bitcast_ln28_17_fu_1528_p1, bitcast_ln28_18_fu_1537_p1, bitcast_ln28_19_fu_1546_p1, bitcast_ln28_20_fu_1559_p1, bitcast_ln28_21_fu_1564_p1, bitcast_ln28_22_fu_1573_p1, bitcast_ln28_23_fu_1582_p1, bitcast_ln28_24_fu_1591_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_544_p1 <= bitcast_ln28_24_fu_1591_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_544_p1 <= bitcast_ln28_23_fu_1582_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_544_p1 <= bitcast_ln28_22_fu_1573_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_544_p1 <= bitcast_ln28_21_fu_1564_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_544_p1 <= bitcast_ln28_20_fu_1559_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_544_p1 <= bitcast_ln28_19_fu_1546_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_544_p1 <= bitcast_ln28_18_fu_1537_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_544_p1 <= bitcast_ln28_17_fu_1528_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_544_p1 <= bitcast_ln28_16_fu_1519_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_15_fu_1514_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_14_fu_1501_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_13_fu_1492_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_12_fu_1483_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_11_fu_1474_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_10_fu_1449_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_9_fu_1420_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_8_fu_1411_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_7_fu_1402_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_6_fu_1393_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_5_fu_1368_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_4_fu_1339_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_3_fu_1322_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_2_fu_1313_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_1_fu_1304_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_544_p1 <= bitcast_ln28_fu_1259_p1;
        else 
            grp_fu_544_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln19_1_fu_780_p2 <= "1" when (add_ln19_fu_631_p2 = ap_const_lv10_3F6) else "0";
    icmp_ln19_fu_625_p2 <= "1" when (indvar_flatten18_fu_196 = ap_const_lv10_3F6) else "0";
    icmp_ln20_fu_646_p2 <= "1" when (indvar_flatten_fu_188 = ap_const_lv8_A9) else "0";
    icmp_ln21_fu_672_p2 <= "1" when (k_fu_180 = ap_const_lv4_D) else "0";
    or_ln17_1_fu_704_p2 <= (or_ln17_fu_660_p2 or and_ln17_fu_678_p2);
    or_ln17_2_fu_710_p2 <= (icmp_ln20_fu_646_p2 or and_ln17_fu_678_p2);
    or_ln17_fu_660_p2 <= (icmp_ln20_fu_646_p2 or ap_phi_mux_first_iter_032_phi_fu_513_p4);
    or_ln20_fu_736_p2 <= (icmp_ln20_fu_646_p2 or and_ln20_fu_730_p2);
    p_cast11_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_879_p3),10));
    p_cast13_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_62_reg_1682),64));
    p_cast14_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_20_fu_1147_p2),64));
    p_cast15_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_21_fu_835_p2),64));
    p_cast16_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_22_fu_859_p2),64));
    p_cast17_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_23_fu_869_p2),64));
    p_cast18_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_24_fu_932_p2),64));
    p_cast19_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_25_fu_942_p2),64));
    p_cast20_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_26_fu_952_p2),64));
    p_cast21_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_27_fu_962_p2),64));
    p_cast22_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_28_fu_972_p2),64));
    p_cast23_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_29_fu_982_p2),64));
    p_cast24_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_30_fu_992_p2),64));
    p_cast25_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_31_fu_1002_p2),64));
    p_cast26_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_32_fu_1012_p2),64));
    p_cast27_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_33_fu_1022_p2),64));
    p_cast28_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_34_fu_1087_p2),64));
    p_cast29_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_35_fu_1097_p2),64));
    p_cast30_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_36_fu_1107_p2),64));
    p_cast31_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_37_fu_1117_p2),64));
    p_cast32_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_38_fu_1127_p2),64));
    p_cast33_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_39_fu_1137_p2),64));
    p_cast34_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_40_fu_1157_p2),64));
    p_cast35_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_41_fu_1167_p2),64));
    p_cast36_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_42_fu_1177_p2),64));
    p_cast37_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_43_fu_1284_p2),64));
    p_cast39_fu_1436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1429_p3),64));
    p_cast40_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1348_p3),64));
    p_cast41_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1238_p3),64));
    p_cast42_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1050_p3),64));
    p_cast43_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_895_p3),64));
    p_cast6_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1751),7));
    p_cast9_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1751),6));
    p_cast_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1751),8));
    select_ln17_1_fu_716_p3 <= 
        ap_const_lv4_0 when (or_ln17_2_fu_710_p2(0) = '1') else 
        k_fu_180;
    select_ln17_fu_652_p3 <= 
        ap_const_lv4_0 when (icmp_ln20_fu_646_p2(0) = '1') else 
        j_fu_184;
    select_ln19_fu_690_p3 <= 
        add_ln19_1_fu_684_p2 when (icmp_ln20_fu_646_p2(0) = '1') else 
        i_fu_192;
    select_ln20_1_fu_772_p3 <= 
        ap_const_lv8_1 when (icmp_ln20_fu_646_p2(0) = '1') else 
        add_ln20_1_fu_766_p2;
    select_ln20_fu_742_p3 <= 
        add_ln20_fu_698_p2 when (and_ln17_fu_678_p2(0) = '1') else 
        select_ln17_fu_652_p3;
        sext_ln19_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_811_p4),64));

        sext_ln28_1_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln28_1_fu_1067_p4),64));

        sext_ln28_2_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln28_2_fu_1264_p4),64));

        sext_ln28_3_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln28_3_fu_1373_p4),64));

        sext_ln28_4_fu_1464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln28_4_fu_1454_p4),64));

        sext_ln28_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_912_p4),64));

    somme_fu_1334_p1 <= Layer1_Weights_CPU_load2_fu_200;
    tmp1_cast_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_1193_p2),10));
    tmp1_fu_1193_p2 <= std_logic_vector(unsigned(p_cast_fu_1190_p1) + unsigned(ap_const_lv8_74));
    tmp2_cast_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_1208_p2),10));
    tmp2_fu_1208_p2 <= std_logic_vector(unsigned(p_cast6_fu_1187_p1) + unsigned(ap_const_lv7_57));
    tmp3_cast_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1223_p2),10));
    tmp3_fu_1223_p2 <= std_logic_vector(unsigned(p_cast6_fu_1187_p1) + unsigned(ap_const_lv7_3A));
    tmp4_cast_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_1035_p2),10));
    tmp4_fu_1035_p2 <= std_logic_vector(unsigned(p_cast9_fu_1032_p1) + unsigned(ap_const_lv6_1D));
    tmp_1_fu_879_p3 <= (select_ln17_1_reg_1667 & ap_const_lv1_0);
    tmp_2_fu_1429_p3 <= (empty_46_reg_1965 & ap_const_lv2_0);
    tmp_3_fu_1348_p3 <= (empty_48_reg_1970 & ap_const_lv2_0);
    tmp_4_fu_1238_p3 <= (empty_50_fu_1233_p2 & ap_const_lv2_0);
    tmp_5_fu_1050_p3 <= (empty_52_fu_1045_p2 & ap_const_lv2_0);
    tmp_6_fu_895_p3 <= (empty_54_fu_890_p2 & ap_const_lv2_0);
    trunc_ln1_fu_912_p4 <= empty_55_fu_907_p2(63 downto 2);
    trunc_ln28_1_fu_1067_p4 <= empty_53_fu_1062_p2(63 downto 2);
    trunc_ln28_2_fu_1264_p4 <= empty_51_fu_1250_p2(63 downto 2);
    trunc_ln28_3_fu_1373_p4 <= empty_49_fu_1359_p2(63 downto 2);
    trunc_ln28_4_fu_1454_p4 <= empty_47_fu_1440_p2(63 downto 2);
    trunc_ln_fu_811_p4 <= Layer2_Neurons_CPU_read_reg_1645(63 downto 2);
    xor_ln17_fu_666_p2 <= (icmp_ln20_fu_646_p2 xor ap_const_lv1_1);
    xor_ln20_fu_724_p2 <= (icmp_ln21_fu_672_p2 xor ap_const_lv1_1);
    zext_ln27_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_44_fu_1294_p2),64));
end behav;
