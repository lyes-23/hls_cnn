// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Layer2_Neurons_CPU_6_address0,
        Layer2_Neurons_CPU_6_ce0,
        Layer2_Neurons_CPU_6_we0,
        Layer2_Neurons_CPU_6_d0,
        Layer2_Neurons_CPU_5_address0,
        Layer2_Neurons_CPU_5_ce0,
        Layer2_Neurons_CPU_5_we0,
        Layer2_Neurons_CPU_5_d0,
        Layer2_Neurons_CPU_4_address0,
        Layer2_Neurons_CPU_4_ce0,
        Layer2_Neurons_CPU_4_we0,
        Layer2_Neurons_CPU_4_d0,
        Layer2_Neurons_CPU_3_address0,
        Layer2_Neurons_CPU_3_ce0,
        Layer2_Neurons_CPU_3_we0,
        Layer2_Neurons_CPU_3_d0,
        Layer2_Neurons_CPU_2_address0,
        Layer2_Neurons_CPU_2_ce0,
        Layer2_Neurons_CPU_2_we0,
        Layer2_Neurons_CPU_2_d0,
        Layer2_Neurons_CPU_1_address0,
        Layer2_Neurons_CPU_1_ce0,
        Layer2_Neurons_CPU_1_we0,
        Layer2_Neurons_CPU_1_d0,
        Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_we0,
        Layer2_Neurons_CPU_d0,
        Layer1_Neurons_CPU_address0,
        Layer1_Neurons_CPU_ce0,
        Layer1_Neurons_CPU_q0,
        grp_SIGMOID_fu_119_p_din1,
        grp_SIGMOID_fu_119_p_dout0,
        grp_SIGMOID_fu_119_p_start,
        grp_SIGMOID_fu_119_p_ready,
        grp_SIGMOID_fu_119_p_done,
        grp_SIGMOID_fu_119_p_idle,
        grp_fu_124_p_din0,
        grp_fu_124_p_din1,
        grp_fu_124_p_opcode,
        grp_fu_124_p_dout0,
        grp_fu_124_p_ce,
        grp_fu_128_p_din0,
        grp_fu_128_p_din1,
        grp_fu_128_p_dout0,
        grp_fu_128_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 26'd1;
parameter    ap_ST_fsm_pp0_stage1 = 26'd2;
parameter    ap_ST_fsm_pp0_stage2 = 26'd4;
parameter    ap_ST_fsm_pp0_stage3 = 26'd8;
parameter    ap_ST_fsm_pp0_stage4 = 26'd16;
parameter    ap_ST_fsm_pp0_stage5 = 26'd32;
parameter    ap_ST_fsm_pp0_stage6 = 26'd64;
parameter    ap_ST_fsm_pp0_stage7 = 26'd128;
parameter    ap_ST_fsm_pp0_stage8 = 26'd256;
parameter    ap_ST_fsm_pp0_stage9 = 26'd512;
parameter    ap_ST_fsm_pp0_stage10 = 26'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 26'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 26'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 26'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 26'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 26'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 26'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 26'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 26'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 26'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 26'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 26'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 26'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 26'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 26'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] Layer2_Neurons_CPU_6_address0;
output   Layer2_Neurons_CPU_6_ce0;
output   Layer2_Neurons_CPU_6_we0;
output  [31:0] Layer2_Neurons_CPU_6_d0;
output  [7:0] Layer2_Neurons_CPU_5_address0;
output   Layer2_Neurons_CPU_5_ce0;
output   Layer2_Neurons_CPU_5_we0;
output  [31:0] Layer2_Neurons_CPU_5_d0;
output  [7:0] Layer2_Neurons_CPU_4_address0;
output   Layer2_Neurons_CPU_4_ce0;
output   Layer2_Neurons_CPU_4_we0;
output  [31:0] Layer2_Neurons_CPU_4_d0;
output  [7:0] Layer2_Neurons_CPU_3_address0;
output   Layer2_Neurons_CPU_3_ce0;
output   Layer2_Neurons_CPU_3_we0;
output  [31:0] Layer2_Neurons_CPU_3_d0;
output  [7:0] Layer2_Neurons_CPU_2_address0;
output   Layer2_Neurons_CPU_2_ce0;
output   Layer2_Neurons_CPU_2_we0;
output  [31:0] Layer2_Neurons_CPU_2_d0;
output  [7:0] Layer2_Neurons_CPU_1_address0;
output   Layer2_Neurons_CPU_1_ce0;
output   Layer2_Neurons_CPU_1_we0;
output  [31:0] Layer2_Neurons_CPU_1_d0;
output  [7:0] Layer2_Neurons_CPU_address0;
output   Layer2_Neurons_CPU_ce0;
output   Layer2_Neurons_CPU_we0;
output  [31:0] Layer2_Neurons_CPU_d0;
output  [9:0] Layer1_Neurons_CPU_address0;
output   Layer1_Neurons_CPU_ce0;
input  [31:0] Layer1_Neurons_CPU_q0;
output  [31:0] grp_SIGMOID_fu_119_p_din1;
input  [31:0] grp_SIGMOID_fu_119_p_dout0;
output   grp_SIGMOID_fu_119_p_start;
input   grp_SIGMOID_fu_119_p_ready;
input   grp_SIGMOID_fu_119_p_done;
input   grp_SIGMOID_fu_119_p_idle;
output  [31:0] grp_fu_124_p_din0;
output  [31:0] grp_fu_124_p_din1;
output  [1:0] grp_fu_124_p_opcode;
input  [31:0] grp_fu_124_p_dout0;
output   grp_fu_124_p_ce;
output  [31:0] grp_fu_128_p_din0;
output  [31:0] grp_fu_128_p_din1;
input  [31:0] grp_fu_128_p_dout0;
output   grp_fu_128_p_ce;

reg ap_idle;
reg Layer2_Neurons_CPU_6_ce0;
reg Layer2_Neurons_CPU_6_we0;
reg Layer2_Neurons_CPU_5_ce0;
reg Layer2_Neurons_CPU_5_we0;
reg Layer2_Neurons_CPU_4_ce0;
reg Layer2_Neurons_CPU_4_we0;
reg Layer2_Neurons_CPU_3_ce0;
reg Layer2_Neurons_CPU_3_we0;
reg Layer2_Neurons_CPU_2_ce0;
reg Layer2_Neurons_CPU_2_we0;
reg Layer2_Neurons_CPU_1_ce0;
reg Layer2_Neurons_CPU_1_we0;
reg Layer2_Neurons_CPU_ce0;
reg Layer2_Neurons_CPU_we0;
reg[9:0] Layer1_Neurons_CPU_address0;
reg Layer1_Neurons_CPU_ce0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25_subdone;
reg   [0:0] icmp_ln29_reg_1968;
reg    ap_condition_exit_pp0_iter0_stage25;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [7:0] Layer1_Weights_CPU_address0;
reg    Layer1_Weights_CPU_ce0;
wire   [31:0] Layer1_Weights_CPU_q0;
reg   [31:0] reg_755;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24_11001;
reg   [31:0] reg_760;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_pp0_stage25_11001;
reg   [31:0] reg_766;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_770;
reg   [31:0] reg_775;
reg   [31:0] reg_780;
reg   [31:0] reg_785;
reg   [31:0] reg_790;
reg   [31:0] reg_795;
wire   [0:0] icmp_ln29_fu_832_p2;
reg   [0:0] icmp_ln29_reg_1968_pp0_iter1_reg;
reg   [0:0] icmp_ln29_reg_1968_pp0_iter2_reg;
reg   [0:0] icmp_ln29_reg_1968_pp0_iter3_reg;
wire   [0:0] icmp_ln30_fu_847_p2;
reg   [0:0] icmp_ln30_reg_1972;
wire   [7:0] empty_fu_875_p2;
reg   [7:0] empty_reg_1984;
wire   [3:0] select_ln26_1_fu_962_p3;
reg   [3:0] select_ln26_1_reg_2018;
wire   [9:0] empty_234_fu_990_p2;
reg   [9:0] empty_234_reg_2034;
wire   [4:0] tmp_151_fu_996_p3;
reg   [4:0] tmp_151_reg_2062;
wire   [9:0] zext_ln38_3_fu_1004_p1;
reg   [9:0] zext_ln38_3_reg_2073;
wire   [31:0] bitcast_ln38_fu_1073_p1;
wire   [9:0] grp_fu_1916_p3;
wire   [31:0] bitcast_ln38_1_fu_1107_p1;
wire   [9:0] grp_fu_1924_p3;
reg   [9:0] add_ln41_reg_2133;
reg   [9:0] add_ln41_reg_2133_pp0_iter1_reg;
reg   [9:0] add_ln41_reg_2133_pp0_iter2_reg;
reg   [9:0] add_ln41_reg_2133_pp0_iter3_reg;
reg   [31:0] mul27_s_reg_2144;
wire   [31:0] bitcast_ln38_2_fu_1146_p1;
wire   [5:0] zext_ln38_2_fu_1180_p1;
reg   [5:0] zext_ln38_2_reg_2164;
reg   [31:0] mul27_5_reg_2170;
wire   [31:0] bitcast_ln38_3_fu_1183_p1;
reg   [31:0] mul27_6_reg_2190;
wire   [31:0] bitcast_ln38_4_fu_1218_p1;
wire   [31:0] bitcast_ln38_5_fu_1252_p1;
reg   [31:0] mul27_1_reg_2225;
wire   [31:0] bitcast_ln38_6_fu_1286_p1;
reg   [31:0] mul27_1_1_reg_2245;
wire   [31:0] bitcast_ln38_7_fu_1324_p1;
wire   [6:0] zext_ln38_1_fu_1366_p1;
reg   [6:0] zext_ln38_1_reg_2265;
reg   [31:0] mul27_1_2_reg_2278;
wire   [31:0] bitcast_ln38_8_fu_1369_p1;
reg   [31:0] mul27_1_3_reg_2298;
wire   [31:0] bitcast_ln38_9_fu_1404_p1;
reg   [31:0] mul27_1_4_reg_2318;
reg   [31:0] mul27_1_4_reg_2318_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_10_fu_1438_p1;
reg   [31:0] mul27_2_reg_2338;
reg   [31:0] mul27_2_reg_2338_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_11_fu_1472_p1;
reg   [31:0] mul27_2_1_reg_2358;
reg   [31:0] mul27_2_1_reg_2358_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_12_fu_1506_p1;
reg   [31:0] mul27_2_2_reg_2378;
reg   [31:0] mul27_2_2_reg_2378_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_13_fu_1540_p1;
reg   [31:0] mul27_2_3_reg_2398;
reg   [31:0] mul27_2_3_reg_2398_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_14_fu_1574_p1;
wire   [2:0] trunc_ln41_fu_1598_p1;
reg   [2:0] trunc_ln41_reg_2413;
reg   [2:0] trunc_ln41_reg_2413_pp0_iter1_reg;
reg   [2:0] trunc_ln41_reg_2413_pp0_iter2_reg;
reg   [2:0] trunc_ln41_reg_2413_pp0_iter3_reg;
reg   [31:0] mul27_2_4_reg_2422;
reg   [31:0] mul27_2_4_reg_2422_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_15_fu_1612_p1;
reg   [31:0] mul27_3_reg_2442;
reg   [31:0] mul27_3_reg_2442_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_16_fu_1646_p1;
reg   [31:0] mul27_3_1_reg_2462;
reg   [31:0] mul27_3_1_reg_2462_pp0_iter1_reg;
wire   [31:0] bitcast_ln38_17_fu_1680_p1;
wire   [7:0] zext_ln38_fu_1714_p1;
reg   [7:0] zext_ln38_reg_2482;
reg   [31:0] mul27_3_2_reg_2490;
reg   [31:0] mul27_3_2_reg_2490_pp0_iter1_reg;
reg   [31:0] mul27_3_2_reg_2490_pp0_iter2_reg;
wire   [31:0] bitcast_ln38_18_fu_1717_p1;
reg   [31:0] mul27_3_3_reg_2510;
reg   [31:0] mul27_3_3_reg_2510_pp0_iter1_reg;
reg   [31:0] mul27_3_3_reg_2510_pp0_iter2_reg;
wire   [31:0] bitcast_ln38_19_fu_1752_p1;
reg   [31:0] mul27_3_4_reg_2530;
reg   [31:0] mul27_3_4_reg_2530_pp0_iter1_reg;
reg   [31:0] mul27_3_4_reg_2530_pp0_iter2_reg;
wire   [31:0] bitcast_ln38_20_fu_1786_p1;
reg   [31:0] mul27_4_reg_2550;
reg   [31:0] mul27_4_reg_2550_pp0_iter1_reg;
reg   [31:0] mul27_4_reg_2550_pp0_iter2_reg;
wire   [31:0] bitcast_ln38_21_fu_1820_p1;
wire   [9:0] add_ln38_24_fu_1853_p2;
reg   [9:0] add_ln38_24_reg_2565;
reg   [31:0] mul27_4_1_reg_2575;
reg   [31:0] mul27_4_1_reg_2575_pp0_iter1_reg;
reg   [31:0] mul27_4_1_reg_2575_pp0_iter2_reg;
wire   [31:0] bitcast_ln38_22_fu_1868_p1;
reg   [31:0] mul27_4_2_reg_2590;
reg   [31:0] mul27_4_2_reg_2590_pp0_iter2_reg;
reg   [31:0] mul27_4_2_reg_2590_pp0_iter3_reg;
wire   [31:0] bitcast_ln38_23_fu_1877_p1;
reg   [31:0] mul27_4_3_reg_2600;
reg   [31:0] mul27_4_3_reg_2600_pp0_iter2_reg;
reg   [31:0] mul27_4_3_reg_2600_pp0_iter3_reg;
wire   [31:0] bitcast_ln38_24_fu_1882_p1;
reg   [31:0] mul27_4_4_reg_2610;
reg   [31:0] mul27_4_4_reg_2610_pp0_iter2_reg;
reg   [31:0] mul27_4_4_reg_2610_pp0_iter3_reg;
reg   [7:0] tmp_301_reg_2615;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage11_subdone;
wire    grp_SIGMOID_fu_733_ap_ready;
reg    grp_SIGMOID_fu_733_ap_start_reg;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire   [63:0] p_cast61_fu_887_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast59_fu_978_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln38_4_fu_1014_p1;
wire   [63:0] p_cast62_fu_1040_p1;
wire   [63:0] zext_ln38_5_fu_1058_p1;
wire   [63:0] p_cast63_fu_1068_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln38_7_fu_1092_p1;
wire   [63:0] p_cast64_fu_1102_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln38_9_fu_1126_p1;
wire   [63:0] p_cast65_fu_1141_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln38_11_fu_1165_p1;
wire   [63:0] p_cast66_fu_1175_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln38_13_fu_1203_p1;
wire   [63:0] p_cast67_fu_1213_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln38_15_fu_1237_p1;
wire   [63:0] p_cast68_fu_1247_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln38_17_fu_1271_p1;
wire   [63:0] p_cast69_fu_1281_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln38_19_fu_1309_p1;
wire   [63:0] p_cast70_fu_1319_p1;
wire   [63:0] zext_ln38_21_fu_1351_p1;
wire   [63:0] p_cast71_fu_1361_p1;
wire   [63:0] zext_ln38_23_fu_1389_p1;
wire   [63:0] p_cast72_fu_1399_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln38_25_fu_1423_p1;
wire   [63:0] p_cast73_fu_1433_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln38_27_fu_1457_p1;
wire   [63:0] p_cast74_fu_1467_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln38_29_fu_1491_p1;
wire   [63:0] p_cast75_fu_1501_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln38_31_fu_1525_p1;
wire   [63:0] p_cast76_fu_1535_p1;
wire    ap_block_pp0_stage16;
wire   [63:0] zext_ln38_33_fu_1559_p1;
wire   [63:0] p_cast77_fu_1569_p1;
wire    ap_block_pp0_stage17;
wire   [63:0] zext_ln38_35_fu_1593_p1;
wire   [63:0] p_cast78_fu_1607_p1;
wire    ap_block_pp0_stage18;
wire   [63:0] zext_ln38_37_fu_1631_p1;
wire   [63:0] p_cast79_fu_1641_p1;
wire    ap_block_pp0_stage19;
wire   [63:0] zext_ln38_39_fu_1665_p1;
wire   [63:0] p_cast80_fu_1675_p1;
wire    ap_block_pp0_stage20;
wire   [63:0] zext_ln38_41_fu_1699_p1;
wire   [63:0] p_cast60_fu_1709_p1;
wire    ap_block_pp0_stage21;
wire   [63:0] zext_ln38_43_fu_1737_p1;
wire   [63:0] p_cast81_fu_1747_p1;
wire    ap_block_pp0_stage22;
wire   [63:0] zext_ln38_45_fu_1771_p1;
wire   [63:0] p_cast82_fu_1781_p1;
wire    ap_block_pp0_stage23;
wire   [63:0] zext_ln38_47_fu_1805_p1;
wire   [63:0] p_cast83_fu_1815_p1;
wire    ap_block_pp0_stage24;
wire   [63:0] zext_ln38_49_fu_1839_p1;
wire   [63:0] p_cast84_fu_1863_p1;
wire    ap_block_pp0_stage25;
wire   [63:0] zext_ln38_51_fu_1873_p1;
wire   [63:0] zext_ln41_fu_1906_p1;
reg   [3:0] k_fu_204;
wire   [3:0] add_ln31_fu_1019_p2;
wire    ap_loop_init;
reg   [3:0] j_fu_208;
wire   [3:0] select_ln30_fu_970_p3;
reg   [7:0] indvar_flatten_fu_212;
wire   [7:0] select_ln30_1_fu_898_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] i_fu_216;
wire   [2:0] select_ln29_fu_859_p3;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten12_fu_220;
wire   [9:0] add_ln29_fu_838_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten12_load;
reg   [31:0] grp_fu_747_p0;
reg   [31:0] grp_fu_747_p1;
reg   [31:0] grp_fu_751_p0;
reg   [31:0] grp_fu_751_p1;
wire   [2:0] add_ln29_1_fu_853_p2;
wire   [2:0] empty_fu_875_p0;
wire   [5:0] empty_fu_875_p1;
wire   [7:0] empty_209_fu_881_p2;
wire   [7:0] add_ln30_1_fu_892_p2;
wire   [0:0] icmp_ln31_fu_939_p2;
wire   [0:0] xor_ln26_fu_934_p2;
wire   [3:0] select_ln26_fu_927_p3;
wire   [0:0] and_ln26_fu_945_p2;
wire   [0:0] or_ln26_fu_957_p2;
wire   [3:0] add_ln30_fu_951_p2;
wire   [3:0] empty_234_fu_990_p0;
wire   [6:0] empty_234_fu_990_p1;
wire   [9:0] add_ln38_fu_1008_p2;
wire   [7:0] empty_210_fu_1035_p2;
wire   [9:0] empty_235_fu_1045_p2;
wire   [9:0] add_ln38_1_fu_1053_p2;
wire   [7:0] empty_211_fu_1063_p2;
wire   [4:0] add_ln38_25_fu_1078_p2;
wire   [9:0] zext_ln38_6_fu_1083_p1;
wire   [9:0] add_ln38_2_fu_1087_p2;
wire   [7:0] empty_212_fu_1097_p2;
wire   [4:0] add_ln38_26_fu_1112_p2;
wire   [9:0] zext_ln38_8_fu_1117_p1;
wire   [9:0] add_ln38_3_fu_1121_p2;
wire   [3:0] grp_fu_1131_p1;
wire   [7:0] empty_213_fu_1136_p2;
wire   [4:0] add_ln38_27_fu_1151_p2;
wire   [9:0] zext_ln38_10_fu_1156_p1;
wire   [9:0] add_ln38_4_fu_1160_p2;
wire   [7:0] empty_214_fu_1170_p2;
wire   [5:0] add_ln38_28_fu_1188_p2;
wire   [9:0] zext_ln38_12_fu_1194_p1;
wire   [9:0] add_ln38_5_fu_1198_p2;
wire   [7:0] empty_215_fu_1208_p2;
wire   [5:0] add_ln38_29_fu_1223_p2;
wire   [9:0] zext_ln38_14_fu_1228_p1;
wire   [9:0] add_ln38_6_fu_1232_p2;
wire   [7:0] empty_216_fu_1242_p2;
wire   [5:0] add_ln38_30_fu_1257_p2;
wire   [9:0] zext_ln38_16_fu_1262_p1;
wire   [9:0] add_ln38_7_fu_1266_p2;
wire   [7:0] empty_217_fu_1276_p2;
wire   [5:0] zext_ln38_18_cast_fu_1291_p4;
wire   [9:0] zext_ln38_18_fu_1300_p1;
wire   [9:0] add_ln38_8_fu_1304_p2;
wire   [7:0] empty_218_fu_1314_p2;
wire   [4:0] or_ln38_fu_1329_p2;
wire   [5:0] zext_ln38_20_cast_fu_1334_p3;
wire   [9:0] zext_ln38_20_fu_1342_p1;
wire   [9:0] add_ln38_9_fu_1346_p2;
wire   [7:0] empty_219_fu_1356_p2;
wire   [6:0] add_ln38_31_fu_1374_p2;
wire   [9:0] zext_ln38_22_fu_1380_p1;
wire   [9:0] add_ln38_10_fu_1384_p2;
wire   [7:0] empty_220_fu_1394_p2;
wire   [6:0] add_ln38_32_fu_1409_p2;
wire   [9:0] zext_ln38_24_fu_1414_p1;
wire   [9:0] add_ln38_11_fu_1418_p2;
wire   [7:0] empty_221_fu_1428_p2;
wire   [6:0] add_ln38_33_fu_1443_p2;
wire   [9:0] zext_ln38_26_fu_1448_p1;
wire   [9:0] add_ln38_12_fu_1452_p2;
wire   [7:0] empty_222_fu_1462_p2;
wire   [6:0] add_ln38_34_fu_1477_p2;
wire   [9:0] zext_ln38_28_fu_1482_p1;
wire   [9:0] add_ln38_13_fu_1486_p2;
wire   [7:0] empty_223_fu_1496_p2;
wire   [6:0] add_ln38_35_fu_1511_p2;
wire   [9:0] zext_ln38_30_fu_1516_p1;
wire   [9:0] add_ln38_14_fu_1520_p2;
wire   [7:0] empty_224_fu_1530_p2;
wire   [6:0] add_ln38_36_fu_1545_p2;
wire   [9:0] zext_ln38_32_fu_1550_p1;
wire   [9:0] add_ln38_15_fu_1554_p2;
wire   [7:0] empty_225_fu_1564_p2;
wire   [6:0] add_ln38_37_fu_1579_p2;
wire   [9:0] zext_ln38_34_fu_1584_p1;
wire   [9:0] add_ln38_16_fu_1588_p2;
wire   [2:0] grp_fu_1131_p2;
wire   [7:0] empty_226_fu_1602_p2;
wire   [6:0] add_ln38_38_fu_1617_p2;
wire   [9:0] zext_ln38_36_fu_1622_p1;
wire   [9:0] add_ln38_17_fu_1626_p2;
wire   [7:0] empty_227_fu_1636_p2;
wire   [6:0] add_ln38_39_fu_1651_p2;
wire   [9:0] zext_ln38_38_fu_1656_p1;
wire   [9:0] add_ln38_18_fu_1660_p2;
wire   [7:0] empty_228_fu_1670_p2;
wire   [6:0] add_ln38_40_fu_1685_p2;
wire   [9:0] zext_ln38_40_fu_1690_p1;
wire   [9:0] add_ln38_19_fu_1694_p2;
wire   [7:0] empty_208_fu_1704_p2;
wire   [7:0] add_ln38_41_fu_1722_p2;
wire   [9:0] zext_ln38_42_fu_1728_p1;
wire   [9:0] add_ln38_20_fu_1732_p2;
wire   [7:0] empty_229_fu_1742_p2;
wire   [7:0] add_ln38_42_fu_1757_p2;
wire   [9:0] zext_ln38_44_fu_1762_p1;
wire   [9:0] add_ln38_21_fu_1766_p2;
wire   [7:0] empty_230_fu_1776_p2;
wire   [7:0] add_ln38_43_fu_1791_p2;
wire   [9:0] zext_ln38_46_fu_1796_p1;
wire   [9:0] add_ln38_22_fu_1800_p2;
wire   [7:0] empty_231_fu_1810_p2;
wire   [7:0] add_ln38_44_fu_1825_p2;
wire   [9:0] zext_ln38_48_fu_1830_p1;
wire   [9:0] add_ln38_23_fu_1834_p2;
wire   [7:0] add_ln38_45_fu_1844_p2;
wire   [9:0] zext_ln38_50_fu_1849_p1;
wire   [7:0] empty_232_fu_1858_p2;
wire   [9:0] mul_ln41_fu_1890_p0;
wire   [11:0] mul_ln41_fu_1890_p1;
wire   [20:0] mul_ln41_fu_1890_p2;
wire   [2:0] grp_fu_1916_p0;
wire   [7:0] grp_fu_1916_p1;
wire   [3:0] grp_fu_1916_p2;
wire   [3:0] grp_fu_1924_p0;
wire   [3:0] grp_fu_1924_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage11;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [25:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage13_00001;
wire    ap_block_pp0_stage17_00001;
wire    ap_block_pp0_stage21_00001;
wire    ap_block_pp0_stage25_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage11_00001;
wire    ap_block_pp0_stage15_00001;
wire    ap_block_pp0_stage19_00001;
wire    ap_block_pp0_stage23_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage14_00001;
wire    ap_block_pp0_stage18_00001;
wire    ap_block_pp0_stage22_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage16_00001;
wire    ap_block_pp0_stage20_00001;
wire    ap_block_pp0_stage24_00001;
wire   [9:0] empty_234_fu_990_p00;
wire   [7:0] empty_fu_875_p00;
wire   [9:0] grp_fu_1916_p00;
wire   [9:0] grp_fu_1916_p20;
wire   [7:0] grp_fu_1924_p00;
wire   [20:0] mul_ln41_fu_1890_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_SIGMOID_fu_733_ap_start_reg = 1'b0;
#0 k_fu_204 = 4'd0;
#0 j_fu_208 = 4'd0;
#0 indvar_flatten_fu_212 = 8'd0;
#0 i_fu_216 = 3'd0;
#0 indvar_flatten12_fu_220 = 10'd0;
#0 ap_done_reg = 1'b0;
end

cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop_Layebkb #(
    .DataWidth( 32 ),
    .AddressRange( 156 ),
    .AddressWidth( 8 ))
Layer1_Weights_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Layer1_Weights_CPU_address0),
    .ce0(Layer1_Weights_CPU_ce0),
    .q0(Layer1_Weights_CPU_q0)
);

cnn_lenet_mul_3ns_6ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
mul_3ns_6ns_8_1_1_U13(
    .din0(empty_fu_875_p0),
    .din1(empty_fu_875_p1),
    .dout(empty_fu_875_p2)
);

cnn_lenet_mul_4ns_7ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_4ns_7ns_10_1_1_U14(
    .din0(empty_234_fu_990_p0),
    .din1(empty_234_fu_990_p1),
    .dout(empty_234_fu_990_p2)
);

cnn_lenet_urem_10ns_4ns_3_14_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_10ns_4ns_3_14_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1924_p3),
    .din1(grp_fu_1131_p1),
    .ce(1'b1),
    .dout(grp_fu_1131_p2)
);

cnn_lenet_mul_10ns_12ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_10ns_12ns_21_1_1_U16(
    .din0(mul_ln41_fu_1890_p0),
    .din1(mul_ln41_fu_1890_p1),
    .dout(mul_ln41_fu_1890_p2)
);

cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_8ns_4ns_10_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1916_p0),
    .din1(grp_fu_1916_p1),
    .din2(grp_fu_1916_p2),
    .ce(1'b1),
    .dout(grp_fu_1916_p3)
);

cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_4ns_4ns_10ns_10_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1924_p0),
    .din1(grp_fu_1924_p1),
    .din2(grp_fu_1916_p3),
    .ce(1'b1),
    .dout(grp_fu_1924_p3)
);

cnn_lenet_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage25),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage25)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SIGMOID_fu_733_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_SIGMOID_fu_733_ap_start_reg <= 1'b1;
        end else if ((grp_SIGMOID_fu_733_ap_ready == 1'b1)) begin
            grp_SIGMOID_fu_733_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage11))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage11))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage11))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_832_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_216 <= select_ln29_fu_859_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_216 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_832_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten12_fu_220 <= add_ln29_fu_838_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten12_fu_220 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_832_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_212 <= select_ln30_1_fu_898_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_212 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        j_fu_208 <= 4'd0;
    end else if (((icmp_ln29_reg_1968 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_208 <= select_ln30_fu_970_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        k_fu_204 <= 4'd0;
    end else if (((icmp_ln29_reg_1968 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        k_fu_204 <= add_ln31_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        add_ln38_24_reg_2565 <= add_ln38_24_fu_1853_p2;
        mul27_4_reg_2550_pp0_iter1_reg <= mul27_4_reg_2550;
        mul27_4_reg_2550_pp0_iter2_reg <= mul27_4_reg_2550_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln41_reg_2133 <= grp_fu_1924_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln41_reg_2133_pp0_iter1_reg <= add_ln41_reg_2133;
        add_ln41_reg_2133_pp0_iter2_reg <= add_ln41_reg_2133_pp0_iter1_reg;
        add_ln41_reg_2133_pp0_iter3_reg <= add_ln41_reg_2133_pp0_iter2_reg;
        tmp_301_reg_2615 <= {{mul_ln41_fu_1890_p2[20:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_234_reg_2034 <= empty_234_fu_990_p2;
        mul27_4_3_reg_2600_pp0_iter2_reg <= mul27_4_3_reg_2600;
        mul27_4_3_reg_2600_pp0_iter3_reg <= mul27_4_3_reg_2600_pp0_iter2_reg;
        select_ln26_1_reg_2018 <= select_ln26_1_fu_962_p3;
        tmp_151_reg_2062[4 : 1] <= tmp_151_fu_996_p3[4 : 1];
        zext_ln38_3_reg_2073[4 : 1] <= zext_ln38_3_fu_1004_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_1984 <= empty_fu_875_p2;
        icmp_ln29_reg_1968 <= icmp_ln29_fu_832_p2;
        icmp_ln29_reg_1968_pp0_iter1_reg <= icmp_ln29_reg_1968;
        icmp_ln29_reg_1968_pp0_iter2_reg <= icmp_ln29_reg_1968_pp0_iter1_reg;
        icmp_ln29_reg_1968_pp0_iter3_reg <= icmp_ln29_reg_1968_pp0_iter2_reg;
        icmp_ln30_reg_1972 <= icmp_ln30_fu_847_p2;
        mul27_4_2_reg_2590_pp0_iter2_reg <= mul27_4_2_reg_2590;
        mul27_4_2_reg_2590_pp0_iter3_reg <= mul27_4_2_reg_2590_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul27_1_1_reg_2245 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul27_1_2_reg_2278 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul27_1_3_reg_2298 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul27_1_4_reg_2318 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul27_1_4_reg_2318_pp0_iter1_reg <= mul27_1_4_reg_2318;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul27_1_reg_2225 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul27_2_1_reg_2358 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul27_2_1_reg_2358_pp0_iter1_reg <= mul27_2_1_reg_2358;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        mul27_2_2_reg_2378 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        mul27_2_2_reg_2378_pp0_iter1_reg <= mul27_2_2_reg_2378;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul27_2_3_reg_2398 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul27_2_3_reg_2398_pp0_iter1_reg <= mul27_2_3_reg_2398;
        trunc_ln41_reg_2413 <= trunc_ln41_fu_1598_p1;
        trunc_ln41_reg_2413_pp0_iter1_reg <= trunc_ln41_reg_2413;
        trunc_ln41_reg_2413_pp0_iter2_reg <= trunc_ln41_reg_2413_pp0_iter1_reg;
        trunc_ln41_reg_2413_pp0_iter3_reg <= trunc_ln41_reg_2413_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul27_2_4_reg_2422 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul27_2_4_reg_2422_pp0_iter1_reg <= mul27_2_4_reg_2422;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul27_2_reg_2338 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul27_2_reg_2338_pp0_iter1_reg <= mul27_2_reg_2338;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        mul27_3_1_reg_2462 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        mul27_3_1_reg_2462_pp0_iter1_reg <= mul27_3_1_reg_2462;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        mul27_3_2_reg_2490 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        mul27_3_2_reg_2490_pp0_iter1_reg <= mul27_3_2_reg_2490;
        mul27_3_2_reg_2490_pp0_iter2_reg <= mul27_3_2_reg_2490_pp0_iter1_reg;
        zext_ln38_reg_2482[4 : 1] <= zext_ln38_fu_1714_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul27_3_3_reg_2510 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul27_3_3_reg_2510_pp0_iter1_reg <= mul27_3_3_reg_2510;
        mul27_3_3_reg_2510_pp0_iter2_reg <= mul27_3_3_reg_2510_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul27_3_4_reg_2530 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul27_3_4_reg_2530_pp0_iter1_reg <= mul27_3_4_reg_2530;
        mul27_3_4_reg_2530_pp0_iter2_reg <= mul27_3_4_reg_2530_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul27_3_reg_2442 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul27_3_reg_2442_pp0_iter1_reg <= mul27_3_reg_2442;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        mul27_4_1_reg_2575 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        mul27_4_1_reg_2575_pp0_iter1_reg <= mul27_4_1_reg_2575;
        mul27_4_1_reg_2575_pp0_iter2_reg <= mul27_4_1_reg_2575_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul27_4_2_reg_2590 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul27_4_3_reg_2600 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul27_4_4_reg_2610 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul27_4_4_reg_2610_pp0_iter2_reg <= mul27_4_4_reg_2610;
        mul27_4_4_reg_2610_pp0_iter3_reg <= mul27_4_4_reg_2610_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        mul27_4_reg_2550 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul27_5_reg_2170 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul27_6_reg_2190 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul27_s_reg_2144 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_755 <= Layer1_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_760 <= Layer1_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_766 <= Layer1_Neurons_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_770 <= Layer1_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_775 <= grp_fu_128_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_780 <= grp_fu_124_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_785 <= grp_fu_124_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_790 <= grp_fu_124_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_795 <= grp_fu_124_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        zext_ln38_1_reg_2265[4 : 1] <= zext_ln38_1_fu_1366_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        zext_ln38_2_reg_2164[4 : 1] <= zext_ln38_2_fu_1180_p1[4 : 1];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_51_fu_1873_p1;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_49_fu_1839_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_47_fu_1805_p1;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_45_fu_1771_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_43_fu_1737_p1;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_41_fu_1699_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_39_fu_1665_p1;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_37_fu_1631_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_35_fu_1593_p1;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_33_fu_1559_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_31_fu_1525_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_29_fu_1491_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_27_fu_1457_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_25_fu_1423_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_23_fu_1389_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_21_fu_1351_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_19_fu_1309_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_17_fu_1271_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_15_fu_1237_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_13_fu_1203_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_11_fu_1165_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_9_fu_1126_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_7_fu_1092_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_5_fu_1058_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Layer1_Neurons_CPU_address0 = zext_ln38_4_fu_1014_p1;
        end else begin
            Layer1_Neurons_CPU_address0 = 'bx;
        end
    end else begin
        Layer1_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Layer1_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer1_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            Layer1_Weights_CPU_address0 = p_cast84_fu_1863_p1;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            Layer1_Weights_CPU_address0 = p_cast83_fu_1815_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            Layer1_Weights_CPU_address0 = p_cast82_fu_1781_p1;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            Layer1_Weights_CPU_address0 = p_cast81_fu_1747_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            Layer1_Weights_CPU_address0 = p_cast60_fu_1709_p1;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            Layer1_Weights_CPU_address0 = p_cast80_fu_1675_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            Layer1_Weights_CPU_address0 = p_cast79_fu_1641_p1;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            Layer1_Weights_CPU_address0 = p_cast78_fu_1607_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            Layer1_Weights_CPU_address0 = p_cast77_fu_1569_p1;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            Layer1_Weights_CPU_address0 = p_cast76_fu_1535_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            Layer1_Weights_CPU_address0 = p_cast75_fu_1501_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            Layer1_Weights_CPU_address0 = p_cast74_fu_1467_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            Layer1_Weights_CPU_address0 = p_cast73_fu_1433_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            Layer1_Weights_CPU_address0 = p_cast72_fu_1399_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            Layer1_Weights_CPU_address0 = p_cast71_fu_1361_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            Layer1_Weights_CPU_address0 = p_cast70_fu_1319_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Layer1_Weights_CPU_address0 = p_cast69_fu_1281_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Layer1_Weights_CPU_address0 = p_cast68_fu_1247_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Layer1_Weights_CPU_address0 = p_cast67_fu_1213_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Layer1_Weights_CPU_address0 = p_cast66_fu_1175_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Layer1_Weights_CPU_address0 = p_cast65_fu_1141_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Layer1_Weights_CPU_address0 = p_cast64_fu_1102_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Layer1_Weights_CPU_address0 = p_cast63_fu_1068_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Layer1_Weights_CPU_address0 = p_cast62_fu_1040_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Layer1_Weights_CPU_address0 = p_cast59_fu_978_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Layer1_Weights_CPU_address0 = p_cast61_fu_887_p1;
        end else begin
            Layer1_Weights_CPU_address0 = 'bx;
        end
    end else begin
        Layer1_Weights_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Layer1_Weights_CPU_ce0 = 1'b1;
    end else begin
        Layer1_Weights_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_1_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd1) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_1_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_2_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd2) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_2_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_3_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd3) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_3_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_4_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd4) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_4_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_5_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd5) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_5_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_6_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & ((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd6) | (trunc_ln41_reg_2413_pp0_iter3_reg == 3'd7)))) begin
        Layer2_Neurons_CPU_6_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln41_reg_2413_pp0_iter3_reg == 3'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        Layer2_Neurons_CPU_we0 = 1'b1;
    end else begin
        Layer2_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_1968 == 1'd1) & (1'b0 == ap_block_pp0_stage25_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_condition_exit_pp0_iter0_stage25 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage25 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (icmp_ln29_reg_1968_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_condition_exit_pp0_iter3_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage25_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_216;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten12_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten12_load = indvar_flatten12_fu_220;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_212;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        grp_fu_747_p0 = reg_795;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_747_p0 = reg_790;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_747_p0 = reg_785;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_747_p0 = reg_780;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_747_p0 = reg_760;
    end else begin
        grp_fu_747_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_747_p1 = mul27_4_4_reg_2610_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_747_p1 = mul27_4_3_reg_2600_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_747_p1 = mul27_4_2_reg_2590_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_747_p1 = mul27_4_1_reg_2575_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_747_p1 = mul27_4_reg_2550_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_747_p1 = mul27_3_4_reg_2530_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_747_p1 = mul27_3_3_reg_2510_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_747_p1 = mul27_3_2_reg_2490_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_747_p1 = mul27_3_1_reg_2462_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_747_p1 = mul27_3_reg_2442_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_747_p1 = mul27_2_4_reg_2422_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_747_p1 = mul27_2_3_reg_2398_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_747_p1 = mul27_2_2_reg_2378_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_747_p1 = mul27_2_1_reg_2358_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_747_p1 = mul27_2_reg_2338_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_747_p1 = mul27_1_4_reg_2318_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_747_p1 = mul27_1_3_reg_2298;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_747_p1 = mul27_1_2_reg_2278;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_747_p1 = mul27_1_1_reg_2245;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_747_p1 = mul27_1_reg_2225;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_747_p1 = mul27_6_reg_2190;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_747_p1 = mul27_5_reg_2170;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_747_p1 = mul27_s_reg_2144;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)))) begin
        grp_fu_747_p1 = reg_775;
    end else begin
        grp_fu_747_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_751_p0 = reg_760;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_751_p0 = reg_770;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) 
    | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_751_p0 = reg_755;
    end else begin
        grp_fu_751_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_751_p1 = bitcast_ln38_24_fu_1882_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_751_p1 = bitcast_ln38_23_fu_1877_p1;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_751_p1 = bitcast_ln38_22_fu_1868_p1;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_751_p1 = bitcast_ln38_21_fu_1820_p1;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_751_p1 = bitcast_ln38_20_fu_1786_p1;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_751_p1 = bitcast_ln38_19_fu_1752_p1;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_751_p1 = bitcast_ln38_18_fu_1717_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_751_p1 = bitcast_ln38_17_fu_1680_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_751_p1 = bitcast_ln38_16_fu_1646_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_751_p1 = bitcast_ln38_15_fu_1612_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_751_p1 = bitcast_ln38_14_fu_1574_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_751_p1 = bitcast_ln38_13_fu_1540_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_751_p1 = bitcast_ln38_12_fu_1506_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_751_p1 = bitcast_ln38_11_fu_1472_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_751_p1 = bitcast_ln38_10_fu_1438_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_751_p1 = bitcast_ln38_9_fu_1404_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_751_p1 = bitcast_ln38_8_fu_1369_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_751_p1 = bitcast_ln38_7_fu_1324_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_751_p1 = bitcast_ln38_6_fu_1286_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_751_p1 = bitcast_ln38_5_fu_1252_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_751_p1 = bitcast_ln38_4_fu_1218_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_751_p1 = bitcast_ln38_3_fu_1183_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_751_p1 = bitcast_ln38_2_fu_1146_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_751_p1 = bitcast_ln38_1_fu_1107_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_751_p1 = bitcast_ln38_fu_1073_p1;
    end else begin
        grp_fu_751_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage11))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Layer2_Neurons_CPU_1_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_1_d0 = grp_SIGMOID_fu_119_p_dout0;

assign Layer2_Neurons_CPU_2_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_2_d0 = grp_SIGMOID_fu_119_p_dout0;

assign Layer2_Neurons_CPU_3_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_3_d0 = grp_SIGMOID_fu_119_p_dout0;

assign Layer2_Neurons_CPU_4_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_4_d0 = grp_SIGMOID_fu_119_p_dout0;

assign Layer2_Neurons_CPU_5_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_5_d0 = grp_SIGMOID_fu_119_p_dout0;

assign Layer2_Neurons_CPU_6_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_6_d0 = grp_SIGMOID_fu_119_p_dout0;

assign Layer2_Neurons_CPU_address0 = zext_ln41_fu_1906_p1;

assign Layer2_Neurons_CPU_d0 = grp_SIGMOID_fu_119_p_dout0;

assign add_ln29_1_fu_853_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln29_fu_838_p2 = (ap_sig_allocacmp_indvar_flatten12_load + 10'd1);

assign add_ln30_1_fu_892_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln30_fu_951_p2 = (select_ln26_fu_927_p3 + 4'd1);

assign add_ln31_fu_1019_p2 = (select_ln26_1_fu_962_p3 + 4'd1);

assign add_ln38_10_fu_1384_p2 = (zext_ln38_22_fu_1380_p1 + empty_234_reg_2034);

assign add_ln38_11_fu_1418_p2 = (zext_ln38_24_fu_1414_p1 + empty_234_reg_2034);

assign add_ln38_12_fu_1452_p2 = (zext_ln38_26_fu_1448_p1 + empty_234_reg_2034);

assign add_ln38_13_fu_1486_p2 = (zext_ln38_28_fu_1482_p1 + empty_234_reg_2034);

assign add_ln38_14_fu_1520_p2 = (zext_ln38_30_fu_1516_p1 + empty_234_reg_2034);

assign add_ln38_15_fu_1554_p2 = (zext_ln38_32_fu_1550_p1 + empty_234_reg_2034);

assign add_ln38_16_fu_1588_p2 = (zext_ln38_34_fu_1584_p1 + empty_234_reg_2034);

assign add_ln38_17_fu_1626_p2 = (zext_ln38_36_fu_1622_p1 + empty_234_reg_2034);

assign add_ln38_18_fu_1660_p2 = (zext_ln38_38_fu_1656_p1 + empty_234_reg_2034);

assign add_ln38_19_fu_1694_p2 = (zext_ln38_40_fu_1690_p1 + empty_234_reg_2034);

assign add_ln38_1_fu_1053_p2 = (zext_ln38_3_reg_2073 + empty_235_fu_1045_p2);

assign add_ln38_20_fu_1732_p2 = (zext_ln38_42_fu_1728_p1 + empty_234_reg_2034);

assign add_ln38_21_fu_1766_p2 = (zext_ln38_44_fu_1762_p1 + empty_234_reg_2034);

assign add_ln38_22_fu_1800_p2 = (zext_ln38_46_fu_1796_p1 + empty_234_reg_2034);

assign add_ln38_23_fu_1834_p2 = (zext_ln38_48_fu_1830_p1 + empty_234_reg_2034);

assign add_ln38_24_fu_1853_p2 = (zext_ln38_50_fu_1849_p1 + empty_234_reg_2034);

assign add_ln38_25_fu_1078_p2 = (tmp_151_reg_2062 + 5'd2);

assign add_ln38_26_fu_1112_p2 = (tmp_151_reg_2062 + 5'd3);

assign add_ln38_27_fu_1151_p2 = (tmp_151_reg_2062 + 5'd4);

assign add_ln38_28_fu_1188_p2 = (zext_ln38_2_fu_1180_p1 + 6'd29);

assign add_ln38_29_fu_1223_p2 = (zext_ln38_2_reg_2164 + 6'd30);

assign add_ln38_2_fu_1087_p2 = (zext_ln38_6_fu_1083_p1 + empty_234_reg_2034);

assign add_ln38_30_fu_1257_p2 = (zext_ln38_2_reg_2164 + 6'd31);

assign add_ln38_31_fu_1374_p2 = (zext_ln38_1_fu_1366_p1 + 7'd58);

assign add_ln38_32_fu_1409_p2 = (zext_ln38_1_reg_2265 + 7'd59);

assign add_ln38_33_fu_1443_p2 = (zext_ln38_1_reg_2265 + 7'd60);

assign add_ln38_34_fu_1477_p2 = (zext_ln38_1_reg_2265 + 7'd61);

assign add_ln38_35_fu_1511_p2 = (zext_ln38_1_reg_2265 + 7'd62);

assign add_ln38_36_fu_1545_p2 = ($signed(zext_ln38_1_reg_2265) + $signed(7'd87));

assign add_ln38_37_fu_1579_p2 = ($signed(zext_ln38_1_reg_2265) + $signed(7'd88));

assign add_ln38_38_fu_1617_p2 = ($signed(zext_ln38_1_reg_2265) + $signed(7'd89));

assign add_ln38_39_fu_1651_p2 = ($signed(zext_ln38_1_reg_2265) + $signed(7'd90));

assign add_ln38_3_fu_1121_p2 = (zext_ln38_8_fu_1117_p1 + empty_234_reg_2034);

assign add_ln38_40_fu_1685_p2 = ($signed(zext_ln38_1_reg_2265) + $signed(7'd91));

assign add_ln38_41_fu_1722_p2 = (zext_ln38_fu_1714_p1 + 8'd116);

assign add_ln38_42_fu_1757_p2 = (zext_ln38_reg_2482 + 8'd117);

assign add_ln38_43_fu_1791_p2 = (zext_ln38_reg_2482 + 8'd118);

assign add_ln38_44_fu_1825_p2 = (zext_ln38_reg_2482 + 8'd119);

assign add_ln38_45_fu_1844_p2 = (zext_ln38_reg_2482 + 8'd120);

assign add_ln38_4_fu_1160_p2 = (zext_ln38_10_fu_1156_p1 + empty_234_reg_2034);

assign add_ln38_5_fu_1198_p2 = (zext_ln38_12_fu_1194_p1 + empty_234_reg_2034);

assign add_ln38_6_fu_1232_p2 = (zext_ln38_14_fu_1228_p1 + empty_234_reg_2034);

assign add_ln38_7_fu_1266_p2 = (zext_ln38_16_fu_1262_p1 + empty_234_reg_2034);

assign add_ln38_8_fu_1304_p2 = (zext_ln38_18_fu_1300_p1 + empty_234_reg_2034);

assign add_ln38_9_fu_1346_p2 = (zext_ln38_20_fu_1342_p1 + empty_234_reg_2034);

assign add_ln38_fu_1008_p2 = (zext_ln38_3_fu_1004_p1 + empty_234_fu_990_p2);

assign and_ln26_fu_945_p2 = (xor_ln26_fu_934_p2 & icmp_ln31_fu_939_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage25;

assign bitcast_ln38_10_fu_1438_p1 = reg_766;

assign bitcast_ln38_11_fu_1472_p1 = reg_766;

assign bitcast_ln38_12_fu_1506_p1 = reg_766;

assign bitcast_ln38_13_fu_1540_p1 = reg_766;

assign bitcast_ln38_14_fu_1574_p1 = reg_766;

assign bitcast_ln38_15_fu_1612_p1 = reg_766;

assign bitcast_ln38_16_fu_1646_p1 = reg_766;

assign bitcast_ln38_17_fu_1680_p1 = reg_766;

assign bitcast_ln38_18_fu_1717_p1 = reg_766;

assign bitcast_ln38_19_fu_1752_p1 = reg_766;

assign bitcast_ln38_1_fu_1107_p1 = reg_766;

assign bitcast_ln38_20_fu_1786_p1 = reg_766;

assign bitcast_ln38_21_fu_1820_p1 = reg_766;

assign bitcast_ln38_22_fu_1868_p1 = reg_766;

assign bitcast_ln38_23_fu_1877_p1 = reg_766;

assign bitcast_ln38_24_fu_1882_p1 = reg_766;

assign bitcast_ln38_2_fu_1146_p1 = reg_766;

assign bitcast_ln38_3_fu_1183_p1 = reg_766;

assign bitcast_ln38_4_fu_1218_p1 = reg_766;

assign bitcast_ln38_5_fu_1252_p1 = reg_766;

assign bitcast_ln38_6_fu_1286_p1 = reg_766;

assign bitcast_ln38_7_fu_1324_p1 = reg_766;

assign bitcast_ln38_8_fu_1369_p1 = reg_766;

assign bitcast_ln38_9_fu_1404_p1 = reg_766;

assign bitcast_ln38_fu_1073_p1 = reg_766;

assign empty_208_fu_1704_p2 = (empty_reg_1984 + 8'd21);

assign empty_209_fu_881_p2 = (empty_fu_875_p2 | 8'd1);

assign empty_210_fu_1035_p2 = (empty_reg_1984 + 8'd2);

assign empty_211_fu_1063_p2 = (empty_reg_1984 + 8'd3);

assign empty_212_fu_1097_p2 = (empty_reg_1984 + 8'd4);

assign empty_213_fu_1136_p2 = (empty_reg_1984 + 8'd5);

assign empty_214_fu_1170_p2 = (empty_reg_1984 + 8'd6);

assign empty_215_fu_1208_p2 = (empty_reg_1984 + 8'd7);

assign empty_216_fu_1242_p2 = (empty_reg_1984 + 8'd8);

assign empty_217_fu_1276_p2 = (empty_reg_1984 + 8'd9);

assign empty_218_fu_1314_p2 = (empty_reg_1984 + 8'd10);

assign empty_219_fu_1356_p2 = (empty_reg_1984 + 8'd11);

assign empty_220_fu_1394_p2 = (empty_reg_1984 + 8'd12);

assign empty_221_fu_1428_p2 = (empty_reg_1984 + 8'd13);

assign empty_222_fu_1462_p2 = (empty_reg_1984 + 8'd14);

assign empty_223_fu_1496_p2 = (empty_reg_1984 + 8'd15);

assign empty_224_fu_1530_p2 = (empty_reg_1984 + 8'd16);

assign empty_225_fu_1564_p2 = (empty_reg_1984 + 8'd17);

assign empty_226_fu_1602_p2 = (empty_reg_1984 + 8'd18);

assign empty_227_fu_1636_p2 = (empty_reg_1984 + 8'd19);

assign empty_228_fu_1670_p2 = (empty_reg_1984 + 8'd20);

assign empty_229_fu_1742_p2 = (empty_reg_1984 + 8'd22);

assign empty_230_fu_1776_p2 = (empty_reg_1984 + 8'd23);

assign empty_231_fu_1810_p2 = (empty_reg_1984 + 8'd24);

assign empty_232_fu_1858_p2 = (empty_reg_1984 + 8'd25);

assign empty_234_fu_990_p0 = empty_234_fu_990_p00;

assign empty_234_fu_990_p00 = select_ln30_fu_970_p3;

assign empty_234_fu_990_p1 = 10'd58;

assign empty_235_fu_1045_p2 = (empty_234_reg_2034 | 10'd1);

assign empty_fu_875_p0 = empty_fu_875_p00;

assign empty_fu_875_p00 = select_ln29_fu_859_p3;

assign empty_fu_875_p1 = 8'd26;

assign grp_SIGMOID_fu_119_p_din1 = reg_795;

assign grp_SIGMOID_fu_119_p_start = grp_SIGMOID_fu_733_ap_start_reg;

assign grp_SIGMOID_fu_733_ap_ready = grp_SIGMOID_fu_119_p_ready;

assign grp_fu_1131_p1 = 10'd7;

assign grp_fu_124_p_ce = 1'b1;

assign grp_fu_124_p_din0 = grp_fu_747_p0;

assign grp_fu_124_p_din1 = grp_fu_747_p1;

assign grp_fu_124_p_opcode = 2'd0;

assign grp_fu_128_p_ce = 1'b1;

assign grp_fu_128_p_din0 = grp_fu_751_p0;

assign grp_fu_128_p_din1 = grp_fu_751_p1;

assign grp_fu_1916_p0 = grp_fu_1916_p00;

assign grp_fu_1916_p00 = select_ln29_fu_859_p3;

assign grp_fu_1916_p1 = 10'd169;

assign grp_fu_1916_p2 = grp_fu_1916_p20;

assign grp_fu_1916_p20 = select_ln26_1_reg_2018;

assign grp_fu_1924_p0 = grp_fu_1924_p00;

assign grp_fu_1924_p00 = select_ln30_fu_970_p3;

assign grp_fu_1924_p1 = 8'd13;

assign icmp_ln29_fu_832_p2 = ((ap_sig_allocacmp_indvar_flatten12_load == 10'd1014) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_847_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd169) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_939_p2 = ((k_fu_204 == 4'd13) ? 1'b1 : 1'b0);

assign mul_ln41_fu_1890_p0 = mul_ln41_fu_1890_p00;

assign mul_ln41_fu_1890_p00 = add_ln41_reg_2133_pp0_iter3_reg;

assign mul_ln41_fu_1890_p1 = 21'd1171;

assign or_ln26_fu_957_p2 = (icmp_ln30_reg_1972 | and_ln26_fu_945_p2);

assign or_ln38_fu_1329_p2 = (tmp_151_reg_2062 | 5'd1);

assign p_cast59_fu_978_p1 = empty_reg_1984;

assign p_cast60_fu_1709_p1 = empty_208_fu_1704_p2;

assign p_cast61_fu_887_p1 = empty_209_fu_881_p2;

assign p_cast62_fu_1040_p1 = empty_210_fu_1035_p2;

assign p_cast63_fu_1068_p1 = empty_211_fu_1063_p2;

assign p_cast64_fu_1102_p1 = empty_212_fu_1097_p2;

assign p_cast65_fu_1141_p1 = empty_213_fu_1136_p2;

assign p_cast66_fu_1175_p1 = empty_214_fu_1170_p2;

assign p_cast67_fu_1213_p1 = empty_215_fu_1208_p2;

assign p_cast68_fu_1247_p1 = empty_216_fu_1242_p2;

assign p_cast69_fu_1281_p1 = empty_217_fu_1276_p2;

assign p_cast70_fu_1319_p1 = empty_218_fu_1314_p2;

assign p_cast71_fu_1361_p1 = empty_219_fu_1356_p2;

assign p_cast72_fu_1399_p1 = empty_220_fu_1394_p2;

assign p_cast73_fu_1433_p1 = empty_221_fu_1428_p2;

assign p_cast74_fu_1467_p1 = empty_222_fu_1462_p2;

assign p_cast75_fu_1501_p1 = empty_223_fu_1496_p2;

assign p_cast76_fu_1535_p1 = empty_224_fu_1530_p2;

assign p_cast77_fu_1569_p1 = empty_225_fu_1564_p2;

assign p_cast78_fu_1607_p1 = empty_226_fu_1602_p2;

assign p_cast79_fu_1641_p1 = empty_227_fu_1636_p2;

assign p_cast80_fu_1675_p1 = empty_228_fu_1670_p2;

assign p_cast81_fu_1747_p1 = empty_229_fu_1742_p2;

assign p_cast82_fu_1781_p1 = empty_230_fu_1776_p2;

assign p_cast83_fu_1815_p1 = empty_231_fu_1810_p2;

assign p_cast84_fu_1863_p1 = empty_232_fu_1858_p2;

assign select_ln26_1_fu_962_p3 = ((or_ln26_fu_957_p2[0:0] == 1'b1) ? 4'd0 : k_fu_204);

assign select_ln26_fu_927_p3 = ((icmp_ln30_reg_1972[0:0] == 1'b1) ? 4'd0 : j_fu_208);

assign select_ln29_fu_859_p3 = ((icmp_ln30_fu_847_p2[0:0] == 1'b1) ? add_ln29_1_fu_853_p2 : ap_sig_allocacmp_i_load);

assign select_ln30_1_fu_898_p3 = ((icmp_ln30_fu_847_p2[0:0] == 1'b1) ? 8'd1 : add_ln30_1_fu_892_p2);

assign select_ln30_fu_970_p3 = ((and_ln26_fu_945_p2[0:0] == 1'b1) ? add_ln30_fu_951_p2 : select_ln26_fu_927_p3);

assign tmp_151_fu_996_p3 = {{select_ln26_1_fu_962_p3}, {1'd0}};

assign trunc_ln41_fu_1598_p1 = grp_fu_1131_p2[2:0];

assign xor_ln26_fu_934_p2 = (icmp_ln30_reg_1972 ^ 1'd1);

assign zext_ln38_10_fu_1156_p1 = add_ln38_27_fu_1151_p2;

assign zext_ln38_11_fu_1165_p1 = add_ln38_4_fu_1160_p2;

assign zext_ln38_12_fu_1194_p1 = add_ln38_28_fu_1188_p2;

assign zext_ln38_13_fu_1203_p1 = add_ln38_5_fu_1198_p2;

assign zext_ln38_14_fu_1228_p1 = add_ln38_29_fu_1223_p2;

assign zext_ln38_15_fu_1237_p1 = add_ln38_6_fu_1232_p2;

assign zext_ln38_16_fu_1262_p1 = add_ln38_30_fu_1257_p2;

assign zext_ln38_17_fu_1271_p1 = add_ln38_7_fu_1266_p2;

assign zext_ln38_18_cast_fu_1291_p4 = {{{{1'd1}, {select_ln26_1_reg_2018}}}, {1'd0}};

assign zext_ln38_18_fu_1300_p1 = zext_ln38_18_cast_fu_1291_p4;

assign zext_ln38_19_fu_1309_p1 = add_ln38_8_fu_1304_p2;

assign zext_ln38_1_fu_1366_p1 = tmp_151_reg_2062;

assign zext_ln38_20_cast_fu_1334_p3 = {{1'd1}, {or_ln38_fu_1329_p2}};

assign zext_ln38_20_fu_1342_p1 = zext_ln38_20_cast_fu_1334_p3;

assign zext_ln38_21_fu_1351_p1 = add_ln38_9_fu_1346_p2;

assign zext_ln38_22_fu_1380_p1 = add_ln38_31_fu_1374_p2;

assign zext_ln38_23_fu_1389_p1 = add_ln38_10_fu_1384_p2;

assign zext_ln38_24_fu_1414_p1 = add_ln38_32_fu_1409_p2;

assign zext_ln38_25_fu_1423_p1 = add_ln38_11_fu_1418_p2;

assign zext_ln38_26_fu_1448_p1 = add_ln38_33_fu_1443_p2;

assign zext_ln38_27_fu_1457_p1 = add_ln38_12_fu_1452_p2;

assign zext_ln38_28_fu_1482_p1 = add_ln38_34_fu_1477_p2;

assign zext_ln38_29_fu_1491_p1 = add_ln38_13_fu_1486_p2;

assign zext_ln38_2_fu_1180_p1 = tmp_151_reg_2062;

assign zext_ln38_30_fu_1516_p1 = add_ln38_35_fu_1511_p2;

assign zext_ln38_31_fu_1525_p1 = add_ln38_14_fu_1520_p2;

assign zext_ln38_32_fu_1550_p1 = add_ln38_36_fu_1545_p2;

assign zext_ln38_33_fu_1559_p1 = add_ln38_15_fu_1554_p2;

assign zext_ln38_34_fu_1584_p1 = add_ln38_37_fu_1579_p2;

assign zext_ln38_35_fu_1593_p1 = add_ln38_16_fu_1588_p2;

assign zext_ln38_36_fu_1622_p1 = add_ln38_38_fu_1617_p2;

assign zext_ln38_37_fu_1631_p1 = add_ln38_17_fu_1626_p2;

assign zext_ln38_38_fu_1656_p1 = add_ln38_39_fu_1651_p2;

assign zext_ln38_39_fu_1665_p1 = add_ln38_18_fu_1660_p2;

assign zext_ln38_3_fu_1004_p1 = tmp_151_fu_996_p3;

assign zext_ln38_40_fu_1690_p1 = add_ln38_40_fu_1685_p2;

assign zext_ln38_41_fu_1699_p1 = add_ln38_19_fu_1694_p2;

assign zext_ln38_42_fu_1728_p1 = add_ln38_41_fu_1722_p2;

assign zext_ln38_43_fu_1737_p1 = add_ln38_20_fu_1732_p2;

assign zext_ln38_44_fu_1762_p1 = add_ln38_42_fu_1757_p2;

assign zext_ln38_45_fu_1771_p1 = add_ln38_21_fu_1766_p2;

assign zext_ln38_46_fu_1796_p1 = add_ln38_43_fu_1791_p2;

assign zext_ln38_47_fu_1805_p1 = add_ln38_22_fu_1800_p2;

assign zext_ln38_48_fu_1830_p1 = add_ln38_44_fu_1825_p2;

assign zext_ln38_49_fu_1839_p1 = add_ln38_23_fu_1834_p2;

assign zext_ln38_4_fu_1014_p1 = add_ln38_fu_1008_p2;

assign zext_ln38_50_fu_1849_p1 = add_ln38_45_fu_1844_p2;

assign zext_ln38_51_fu_1873_p1 = add_ln38_24_reg_2565;

assign zext_ln38_5_fu_1058_p1 = add_ln38_1_fu_1053_p2;

assign zext_ln38_6_fu_1083_p1 = add_ln38_25_fu_1078_p2;

assign zext_ln38_7_fu_1092_p1 = add_ln38_2_fu_1087_p2;

assign zext_ln38_8_fu_1117_p1 = add_ln38_26_fu_1112_p2;

assign zext_ln38_9_fu_1126_p1 = add_ln38_3_fu_1121_p2;

assign zext_ln38_fu_1714_p1 = tmp_151_reg_2062;

assign zext_ln41_fu_1906_p1 = tmp_301_reg_2615;

always @ (posedge ap_clk) begin
    tmp_151_reg_2062[0] <= 1'b0;
    zext_ln38_3_reg_2073[0] <= 1'b0;
    zext_ln38_3_reg_2073[9:5] <= 5'b00000;
    zext_ln38_2_reg_2164[0] <= 1'b0;
    zext_ln38_2_reg_2164[5] <= 1'b0;
    zext_ln38_1_reg_2265[0] <= 1'b0;
    zext_ln38_1_reg_2265[6:5] <= 2'b00;
    zext_ln38_reg_2482[0] <= 1'b0;
    zext_ln38_reg_2482[7:5] <= 3'b000;
end

endmodule //cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop
