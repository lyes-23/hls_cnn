-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    Layer1_Weights_CPU_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_EN_A : OUT STD_LOGIC;
    Layer1_Weights_CPU_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    Layer1_Weights_CPU_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_EN_B : OUT STD_LOGIC;
    Layer1_Weights_CPU_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    Layer1_Weights_CPU_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Weights_CPU_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    Layer1_Neurons_CPU : IN STD_LOGIC_VECTOR (63 downto 0);
    Layer2_Neurons_CPU_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Layer2_Neurons_CPU_ce0 : OUT STD_LOGIC;
    Layer2_Neurons_CPU_we0 : OUT STD_LOGIC;
    Layer2_Neurons_CPU_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_SIGMOID_fu_171_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_SIGMOID_fu_171_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_SIGMOID_fu_171_p_ce : OUT STD_LOGIC;
    grp_SIGMOID_fu_171_p_start : OUT STD_LOGIC;
    grp_SIGMOID_fu_171_p_ready : IN STD_LOGIC;
    grp_SIGMOID_fu_171_p_done : IN STD_LOGIC;
    grp_SIGMOID_fu_171_p_idle : IN STD_LOGIC;
    grp_fu_176_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_176_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_176_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_176_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_176_p_ce : OUT STD_LOGIC;
    grp_fu_180_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_180_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_180_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_180_p_ce : OUT STD_LOGIC );
end;


architecture behav of cnn_lenet_cnn_lenet_Pipeline_calculateLayer2_loop_OutputRow_Loop_OutputColumn_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3F6 : STD_LOGIC_VECTOR (9 downto 0) := "1111110110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_3A : STD_LOGIC_VECTOR (9 downto 0) := "0000111010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_1A : STD_LOGIC_VECTOR (7 downto 0) := "00011010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_12 : STD_LOGIC_VECTOR (7 downto 0) := "00010010";
    constant ap_const_lv8_13 : STD_LOGIC_VECTOR (7 downto 0) := "00010011";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv8_14 : STD_LOGIC_VECTOR (7 downto 0) := "00010100";
    constant ap_const_lv8_74 : STD_LOGIC_VECTOR (7 downto 0) := "01110100";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv8_17 : STD_LOGIC_VECTOR (7 downto 0) := "00010111";
    constant ap_const_lv8_18 : STD_LOGIC_VECTOR (7 downto 0) := "00011000";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv10_A9 : STD_LOGIC_VECTOR (9 downto 0) := "0010101001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal icmp_ln31_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage24 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln31_reg_1627_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal reg_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state33_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_state23_io : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state26_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state31_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state32_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state34_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state35_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_549 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln31_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1627_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1627_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1627_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_656_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_reg_1631 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln28_1_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_1_reg_1636 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_1_fu_682_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln28_1_reg_1640 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln32_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_reg_1646 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_fu_708_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln32_reg_1651 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_230_fu_724_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_230_reg_1661 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_247_fu_778_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_247_reg_1670 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_803_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_reg_1713 : STD_LOGIC_VECTOR (4 downto 0);
    signal gmem_addr_reg_1720 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_load_1_reg_1741 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_2_reg_1756 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_3_reg_1761 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1561_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer1_Weights_CPU_load_4_reg_1781 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_5_reg_1786 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1569_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_reg_1791 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_reg_1791_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_reg_1791_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_reg_1791_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_reg_1791_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer1_Weights_CPU_load_6_reg_1806 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_7_reg_1811 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_1_reg_1826 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_load_8_reg_1832 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_9_reg_1837 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_10_reg_1852 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_11_reg_1857 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_12_reg_1872 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_13_reg_1877 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_14_reg_1892 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_15_reg_1897 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_16_reg_1912 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_17_reg_1917 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_232_fu_1135_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_232_reg_1932 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_234_fu_1150_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_234_reg_1937 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln39_fu_1187_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_fu_1191_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_2_reg_1952 : STD_LOGIC_VECTOR (63 downto 0);
    signal Layer1_Weights_CPU_load_18_reg_1958 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_19_reg_1963 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_1_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_1_fu_1241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_20_reg_1988 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_21_reg_1993 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_26_fu_1248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_2_fu_1273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_s_reg_2018 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_2_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_22_reg_2028 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_23_reg_2033 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_3_fu_1282_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_5_reg_2043 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_3_fu_1287_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_24_reg_2053 : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_load_25_reg_2058 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_4_fu_1291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_6_reg_2068 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_4_fu_1296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_5_fu_1316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_5_fu_1320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_3_reg_2088 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln40_6_fu_1345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_reg_2099 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_6_fu_1350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_7_fu_1354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_1_reg_2114 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_7_fu_1359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_8_fu_1363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_2_reg_2129 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_8_fu_1368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_9_fu_1372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_3_reg_2144 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_9_fu_1377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_4_reg_2154 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_1_4_reg_2154_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_10_fu_1397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_10_fu_1401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_reg_2169 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln40_11_fu_1426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_reg_2180 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_reg_2180_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_11_fu_1431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_12_fu_1435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_1_reg_2195 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_1_reg_2195_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_12_fu_1440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_13_fu_1444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_2_reg_2210 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_2_reg_2210_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_13_fu_1449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_14_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_3_reg_2225 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_3_reg_2225_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_14_fu_1458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_2235 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_2_4_reg_2235_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_15_fu_1462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_15_fu_1466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_16_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_2255 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_reg_2255_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_16_fu_1476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_17_fu_1480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_2270 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_1_reg_2270_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_17_fu_1485_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_18_fu_1489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_2285 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_2285_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_2_reg_2285_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_18_fu_1494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_19_fu_1498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_2300 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_2300_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_3_reg_2300_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_19_fu_1503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_2310 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_2310_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_3_4_reg_2310_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_20_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_20_fu_1511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_21_fu_1516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_2330_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_reg_2330_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_21_fu_1521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_22_fu_1525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2345_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_1_reg_2345_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_22_fu_1530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_23_fu_1534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2360 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2360_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_2_reg_2360_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_23_fu_1539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln40_24_fu_1543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2375 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2375_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_3_reg_2375_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln39_24_fu_1548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2385 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2385_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul27_4_4_reg_2385_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal grp_SIGMOID_fu_499_ap_ready : STD_LOGIC;
    signal grp_SIGMOID_fu_499_ap_ce : STD_LOGIC;
    signal ap_block_state14_pp0_stage13_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage13_11001_ignoreCallOp646 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage14_11001_ignoreCallOp647 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage15_11001_ignoreCallOp648 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage16_11001_ignoreCallOp649 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage17_11001_ignoreCallOp650 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage18_11001_ignoreCallOp651 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage19_11001_ignoreCallOp652 : BOOLEAN;
    signal ap_block_state21_pp0_stage20_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage20_11001_ignoreCallOp653 : BOOLEAN;
    signal ap_block_state22_pp0_stage21_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage21_11001_ignoreCallOp654 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0_ignore_call289 : BOOLEAN;
    signal ap_block_pp0_stage22_11001_ignoreCallOp656 : BOOLEAN;
    signal ap_phi_mux_first_iter_1_phi_fu_481_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_first_iter_0_phi_fu_491_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_SIGMOID_fu_499_ap_start_reg : STD_LOGIC := '0';
    signal p_cast46_fu_784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast48_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast49_fu_866_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast50_fu_876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast51_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast52_fu_899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast53_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast54_fu_919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast55_fu_929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast56_fu_939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast57_fu_949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast58_fu_959_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast59_fu_1024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast60_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast61_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast62_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast63_fu_1064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast64_fu_1074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast65_fu_1084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast66_fu_1094_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast67_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast47_fu_1104_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast68_fu_1221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast69_fu_1231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast70_fu_1258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln39_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_fu_1552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_fu_846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_1_fu_1009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_2_fu_1206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_3_fu_1335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln40_4_fu_1416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_158 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln33_fu_730_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_k_load : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_162 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_166 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln32_1_fu_742_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_170 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten18_fu_174 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln31_fu_597_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten18_load : STD_LOGIC_VECTOR (9 downto 0);
    signal Layer1_Weights_CPU_load2_fu_178 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Layer1_Weights_CPU_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal Layer1_Weights_CPU_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_510_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln32_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln28_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln31_1_fu_650_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln28_fu_618_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln28_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_2_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln32_fu_664_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_230_fu_724_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_230_fu_724_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_fu_736_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_247_fu_778_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_247_fu_778_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_206_fu_789_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast23_fu_810_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_240_fu_814_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_819_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast228_fu_827_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_241_fu_831_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_836_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_207_fu_861_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_208_fu_871_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_209_fu_884_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_210_fu_894_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_211_fu_904_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_212_fu_914_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_213_fu_924_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_214_fu_934_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_215_fu_944_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_216_fu_954_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast21_fu_964_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_fu_967_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_cast_fu_973_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_238_fu_977_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_982_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast227_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_239_fu_994_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln40_1_fu_999_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_217_fu_1019_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_218_fu_1029_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_219_fu_1039_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_220_fu_1049_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_221_fu_1059_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_222_fu_1069_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_223_fu_1079_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_224_fu_1089_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_205_fu_1099_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_225_fu_1109_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast16_fu_1122_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_1125_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_cast_fu_1131_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast18_fu_1119_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_fu_1140_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_1146_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_fu_1155_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_cast_fu_1161_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_236_fu_1165_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1170_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast226_fu_1178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_237_fu_1182_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln40_2_fu_1196_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_226_fu_1216_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_227_fu_1226_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_228_fu_1253_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_229_fu_1263_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1300_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast225_fu_1307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_235_fu_1311_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln40_3_fu_1325_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_5_fu_1381_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast224_fu_1388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_233_fu_1392_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln40_4_fu_1406_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_1561_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1561_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1561_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1569_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1569_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_506_ce : STD_LOGIC;
    signal grp_fu_510_ce : STD_LOGIC;
    signal grp_fu_1561_ce : STD_LOGIC;
    signal grp_fu_1569_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter3_stage22 : STD_LOGIC;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage13_00001 : BOOLEAN;
    signal ap_block_pp0_stage17_00001 : BOOLEAN;
    signal ap_block_pp0_stage21_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage12_00001 : BOOLEAN;
    signal ap_block_pp0_stage16_00001 : BOOLEAN;
    signal ap_block_pp0_stage20_00001 : BOOLEAN;
    signal ap_block_pp0_stage24_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage11_00001 : BOOLEAN;
    signal ap_block_pp0_stage15_00001 : BOOLEAN;
    signal ap_block_pp0_stage19_00001 : BOOLEAN;
    signal ap_block_pp0_stage23_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_block_pp0_stage14_00001 : BOOLEAN;
    signal ap_block_pp0_stage18_00001 : BOOLEAN;
    signal ap_block_pp0_stage22_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal empty_230_fu_724_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_247_fu_778_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1561_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1561_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1569_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_2525 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_lenet_SIGMOID IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_lenet_mul_4ns_7ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_mul_3ns_6ns_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component cnn_lenet_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_4ns_7ns_10_1_1_U13 : component cnn_lenet_mul_4ns_7ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        din0 => empty_230_fu_724_p0,
        din1 => empty_230_fu_724_p1,
        dout => empty_230_fu_724_p2);

    mul_3ns_6ns_8_1_1_U14 : component cnn_lenet_mul_3ns_6ns_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 6,
        dout_WIDTH => 8)
    port map (
        din0 => empty_247_fu_778_p0,
        din1 => empty_247_fu_778_p1,
        dout => empty_247_fu_778_p2);

    mac_muladd_3ns_8ns_4ns_10_4_1_U15 : component cnn_lenet_mac_muladd_3ns_8ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1561_p0,
        din1 => grp_fu_1561_p1,
        din2 => grp_fu_1561_p2,
        ce => grp_fu_1561_ce,
        dout => grp_fu_1561_p3);

    mac_muladd_4ns_4ns_10ns_10_4_1_U16 : component cnn_lenet_mac_muladd_4ns_4ns_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1569_p0,
        din1 => grp_fu_1569_p1,
        din2 => grp_fu_1561_p3,
        ce => grp_fu_1569_ce,
        dout => grp_fu_1569_p3);

    flow_control_loop_pipe_sequential_init_U : component cnn_lenet_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage24,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage24)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    grp_SIGMOID_fu_499_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_SIGMOID_fu_499_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln31_reg_1627_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                    grp_SIGMOID_fu_499_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_SIGMOID_fu_499_ap_ready = ap_const_logic_1)) then 
                    grp_SIGMOID_fu_499_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage22))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage22))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage22))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    i_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln31_fu_591_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_170 <= select_ln31_fu_656_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_170 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten18_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln31_fu_591_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten18_fu_174 <= add_ln31_fu_597_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten18_fu_174 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln31_fu_591_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_166 <= select_ln32_1_fu_742_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_166 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln31_fu_591_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_162 <= select_ln32_fu_708_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_162 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    k_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln31_fu_591_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_fu_158 <= add_ln33_fu_730_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_158 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln32_reg_1646 = ap_const_lv1_1) and (or_ln28_1_reg_1636 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0))) then
                Layer1_Weights_CPU_load2_fu_178 <= Layer1_Weights_CPU_Dout_B;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                Layer1_Weights_CPU_load_10_reg_1852 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_11_reg_1857 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                Layer1_Weights_CPU_load_12_reg_1872 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_13_reg_1877 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                Layer1_Weights_CPU_load_14_reg_1892 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_15_reg_1897 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                Layer1_Weights_CPU_load_16_reg_1912 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_17_reg_1917 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                Layer1_Weights_CPU_load_18_reg_1958 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_19_reg_1963 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                Layer1_Weights_CPU_load_1_reg_1741 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                Layer1_Weights_CPU_load_20_reg_1988 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_21_reg_1993 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                Layer1_Weights_CPU_load_22_reg_2028 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_23_reg_2033 <= Layer1_Weights_CPU_Dout_A;
                mul27_s_reg_2018 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                Layer1_Weights_CPU_load_24_reg_2053 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_25_reg_2058 <= Layer1_Weights_CPU_Dout_A;
                mul27_5_reg_2043 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                Layer1_Weights_CPU_load_2_reg_1756 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_3_reg_1761 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                Layer1_Weights_CPU_load_4_reg_1781 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_5_reg_1786 <= Layer1_Weights_CPU_Dout_A;
                add_ln43_reg_1791 <= grp_fu_1569_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                Layer1_Weights_CPU_load_6_reg_1806 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_7_reg_1811 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                Layer1_Weights_CPU_load_8_reg_1832 <= Layer1_Weights_CPU_Dout_B;
                Layer1_Weights_CPU_load_9_reg_1837 <= Layer1_Weights_CPU_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln43_reg_1791_pp0_iter1_reg <= add_ln43_reg_1791;
                add_ln43_reg_1791_pp0_iter2_reg <= add_ln43_reg_1791_pp0_iter1_reg;
                add_ln43_reg_1791_pp0_iter3_reg <= add_ln43_reg_1791_pp0_iter2_reg;
                add_ln43_reg_1791_pp0_iter4_reg <= add_ln43_reg_1791_pp0_iter3_reg;
                mul27_3_2_reg_2285_pp0_iter2_reg <= mul27_3_2_reg_2285;
                mul27_3_2_reg_2285_pp0_iter3_reg <= mul27_3_2_reg_2285_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_230_reg_1661 <= empty_230_fu_724_p2;
                icmp_ln31_reg_1627 <= icmp_ln31_fu_591_p2;
                icmp_ln31_reg_1627_pp0_iter1_reg <= icmp_ln31_reg_1627;
                icmp_ln31_reg_1627_pp0_iter2_reg <= icmp_ln31_reg_1627_pp0_iter1_reg;
                icmp_ln31_reg_1627_pp0_iter3_reg <= icmp_ln31_reg_1627_pp0_iter2_reg;
                icmp_ln31_reg_1627_pp0_iter4_reg <= icmp_ln31_reg_1627_pp0_iter3_reg;
                mul27_2_3_reg_2225_pp0_iter2_reg <= mul27_2_3_reg_2225;
                or_ln28_1_reg_1636 <= or_ln28_1_fu_670_p2;
                select_ln28_1_reg_1640 <= select_ln28_1_fu_682_p3;
                select_ln31_reg_1631 <= select_ln31_fu_656_p3;
                select_ln32_reg_1651 <= select_ln32_fu_708_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                empty_232_reg_1932 <= empty_232_fu_1135_p2;
                empty_234_reg_1937 <= empty_234_fu_1150_p2;
                gmem_addr_2_reg_1952 <= sext_ln40_2_fu_1206_p1;
                mul27_4_4_reg_2385_pp0_iter2_reg <= mul27_4_4_reg_2385;
                mul27_4_4_reg_2385_pp0_iter3_reg <= mul27_4_4_reg_2385_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                empty_247_reg_1670 <= empty_247_fu_778_p2;
                gmem_addr_reg_1720 <= sext_ln40_fu_846_p1;
                mul27_2_4_reg_2235_pp0_iter2_reg <= mul27_2_4_reg_2235;
                    tmp_4_reg_1713(4 downto 1) <= tmp_4_fu_803_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                gmem_addr_1_reg_1826 <= sext_ln40_1_fu_1009_p1;
                mul27_3_4_reg_2310_pp0_iter2_reg <= mul27_3_4_reg_2310;
                mul27_3_4_reg_2310_pp0_iter3_reg <= mul27_3_4_reg_2310_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                gmem_addr_3_reg_2088 <= sext_ln40_3_fu_1335_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                gmem_addr_4_reg_2169 <= sext_ln40_4_fu_1416_p1;
                mul27_1_4_reg_2154_pp0_iter1_reg <= mul27_1_4_reg_2154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                mul27_1_1_reg_2114 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                mul27_1_2_reg_2129 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001))) then
                mul27_1_3_reg_2144 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                mul27_1_4_reg_2154 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                mul27_1_reg_2099 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul27_2_1_reg_2195 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul27_2_1_reg_2195_pp0_iter1_reg <= mul27_2_1_reg_2195;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                mul27_2_2_reg_2210 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                mul27_2_2_reg_2210_pp0_iter1_reg <= mul27_2_2_reg_2210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul27_2_3_reg_2225 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul27_2_4_reg_2235 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                mul27_2_reg_2180 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                mul27_2_reg_2180_pp0_iter1_reg <= mul27_2_reg_2180;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul27_3_1_reg_2270 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul27_3_1_reg_2270_pp0_iter2_reg <= mul27_3_1_reg_2270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul27_3_2_reg_2285 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul27_3_3_reg_2300 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mul27_3_3_reg_2300_pp0_iter2_reg <= mul27_3_3_reg_2300;
                mul27_3_3_reg_2300_pp0_iter3_reg <= mul27_3_3_reg_2300_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul27_3_4_reg_2310 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul27_3_reg_2255 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul27_3_reg_2255_pp0_iter2_reg <= mul27_3_reg_2255;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul27_4_1_reg_2345 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul27_4_1_reg_2345_pp0_iter2_reg <= mul27_4_1_reg_2345;
                mul27_4_1_reg_2345_pp0_iter3_reg <= mul27_4_1_reg_2345_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                mul27_4_2_reg_2360 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                mul27_4_2_reg_2360_pp0_iter2_reg <= mul27_4_2_reg_2360;
                mul27_4_2_reg_2360_pp0_iter3_reg <= mul27_4_2_reg_2360_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul27_4_3_reg_2375 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul27_4_3_reg_2375_pp0_iter2_reg <= mul27_4_3_reg_2375;
                mul27_4_3_reg_2375_pp0_iter3_reg <= mul27_4_3_reg_2375_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                mul27_4_4_reg_2385 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                mul27_4_reg_2330 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                mul27_4_reg_2330_pp0_iter2_reg <= mul27_4_reg_2330;
                mul27_4_reg_2330_pp0_iter3_reg <= mul27_4_reg_2330_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                mul27_6_reg_2068 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln32_reg_1646 <= or_ln32_fu_702_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then
                reg_514 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)))) then
                reg_518 <= grp_fu_180_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)))) then
                reg_523 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)))) then
                reg_527 <= grp_fu_176_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)))) then
                reg_532 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_536 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)))) then
                reg_540 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)))) then
                reg_544 <= grp_fu_176_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)))) then
                reg_549 <= grp_fu_176_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then
                reg_554 <= grp_fu_176_p_dout0;
            end if;
        end if;
    end process;
    tmp_4_reg_1713(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage24_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter3_stage22, ap_idle_pp0_0to2, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage23_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage22))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Layer1_Weights_CPU_Addr_A <= std_logic_vector(shift_left(unsigned(Layer1_Weights_CPU_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    Layer1_Weights_CPU_Addr_A_orig_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, p_cast48_fu_795_p1, p_cast50_fu_876_p1, p_cast52_fu_899_p1, p_cast54_fu_919_p1, p_cast56_fu_939_p1, p_cast58_fu_959_p1, p_cast60_fu_1034_p1, p_cast62_fu_1054_p1, p_cast64_fu_1074_p1, p_cast66_fu_1094_p1, p_cast47_fu_1104_p1, p_cast69_fu_1231_p1, zext_ln39_fu_1268_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                Layer1_Weights_CPU_Addr_A_orig <= zext_ln39_fu_1268_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast69_fu_1231_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast47_fu_1104_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast66_fu_1094_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast64_fu_1074_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast62_fu_1054_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast60_fu_1034_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast58_fu_959_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast56_fu_939_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast54_fu_919_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast52_fu_899_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast50_fu_876_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                Layer1_Weights_CPU_Addr_A_orig <= p_cast48_fu_795_p1(32 - 1 downto 0);
            else 
                Layer1_Weights_CPU_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            Layer1_Weights_CPU_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    Layer1_Weights_CPU_Addr_B <= std_logic_vector(shift_left(unsigned(Layer1_Weights_CPU_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    Layer1_Weights_CPU_Addr_B_orig_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, p_cast46_fu_784_p1, p_cast49_fu_866_p1, p_cast51_fu_889_p1, p_cast53_fu_909_p1, p_cast55_fu_929_p1, p_cast57_fu_949_p1, p_cast59_fu_1024_p1, p_cast61_fu_1044_p1, p_cast63_fu_1064_p1, p_cast65_fu_1084_p1, p_cast67_fu_1114_p1, p_cast68_fu_1221_p1, p_cast70_fu_1258_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast70_fu_1258_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast68_fu_1221_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast67_fu_1114_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast65_fu_1084_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast63_fu_1064_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast61_fu_1044_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast59_fu_1024_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast57_fu_949_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast55_fu_929_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast53_fu_909_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast51_fu_889_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast49_fu_866_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                Layer1_Weights_CPU_Addr_B_orig <= p_cast46_fu_784_p1(32 - 1 downto 0);
            else 
                Layer1_Weights_CPU_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            Layer1_Weights_CPU_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    Layer1_Weights_CPU_Din_A <= ap_const_lv32_0;
    Layer1_Weights_CPU_Din_B <= ap_const_lv32_0;

    Layer1_Weights_CPU_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) 
    or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Layer1_Weights_CPU_EN_A <= ap_const_logic_1;
        else 
            Layer1_Weights_CPU_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    Layer1_Weights_CPU_EN_B_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) 
    or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Layer1_Weights_CPU_EN_B <= ap_const_logic_1;
        else 
            Layer1_Weights_CPU_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    Layer1_Weights_CPU_WEN_A <= ap_const_lv4_0;
    Layer1_Weights_CPU_WEN_B <= ap_const_lv4_0;
    Layer2_Neurons_CPU_address0 <= zext_ln43_fu_1552_p1(10 - 1 downto 0);

    Layer2_Neurons_CPU_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_1;
        else 
            Layer2_Neurons_CPU_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Layer2_Neurons_CPU_d0 <= grp_SIGMOID_fu_171_p_dout0;

    Layer2_Neurons_CPU_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, icmp_ln31_reg_1627_pp0_iter4_reg)
    begin
        if (((icmp_ln31_reg_1627_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_1;
        else 
            Layer2_Neurons_CPU_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln31_1_fu_650_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv3_1));
    add_ln31_fu_597_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten18_load) + unsigned(ap_const_lv10_1));
    add_ln32_1_fu_736_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    add_ln32_fu_664_p2 <= std_logic_vector(unsigned(select_ln28_fu_618_p3) + unsigned(ap_const_lv4_1));
    add_ln33_fu_730_p2 <= std_logic_vector(unsigned(select_ln28_1_fu_682_p3) + unsigned(ap_const_lv4_1));
    and_ln28_fu_644_p2 <= (xor_ln28_fu_632_p2 and icmp_ln33_fu_638_p2);
    and_ln32_fu_696_p2 <= (xor_ln32_fu_690_p2 and ap_phi_mux_first_iter_1_phi_fu_481_p4);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state26_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state26_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state26_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state26_pp0_stage0_iter1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;


    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0)));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_pp0_stage12_iter0, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or (ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0)));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;


    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;


    ap_block_pp0_stage13_11001_ignoreCallOp646_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0_ignore_call289)
    begin
                ap_block_pp0_stage13_11001_ignoreCallOp646 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;


    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;


    ap_block_pp0_stage14_11001_ignoreCallOp647_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0_ignore_call289)
    begin
                ap_block_pp0_stage14_11001_ignoreCallOp647 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;


    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;


    ap_block_pp0_stage15_11001_ignoreCallOp648_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0_ignore_call289)
    begin
                ap_block_pp0_stage15_11001_ignoreCallOp648 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;


    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;


    ap_block_pp0_stage16_11001_ignoreCallOp649_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0_ignore_call289)
    begin
                ap_block_pp0_stage16_11001_ignoreCallOp649 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0));
    end process;


    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0)));
    end process;


    ap_block_pp0_stage17_11001_ignoreCallOp650_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_io, ap_block_state18_pp0_stage17_iter0_ignore_call289)
    begin
                ap_block_pp0_stage17_11001_ignoreCallOp650 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0_ignore_call289)));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_pp0_stage17_iter0, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or (ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0)));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;


    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;


    ap_block_pp0_stage18_11001_ignoreCallOp651_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0_ignore_call289)
    begin
                ap_block_pp0_stage18_11001_ignoreCallOp651 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage19_11001_ignoreCallOp652_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0_ignore_call289)
    begin
                ap_block_pp0_stage19_11001_ignoreCallOp652 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0));
    end process;


    ap_block_pp0_stage1_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage1_iter1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage1_iter1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state27_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state27_pp0_stage1_iter1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;


    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;


    ap_block_pp0_stage20_11001_ignoreCallOp653_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0_ignore_call289)
    begin
                ap_block_pp0_stage20_11001_ignoreCallOp653 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;


    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;


    ap_block_pp0_stage21_11001_ignoreCallOp654_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0_ignore_call289)
    begin
                ap_block_pp0_stage21_11001_ignoreCallOp654 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0_ignore_call289));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0));
    end process;


    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0, ap_block_state23_io)
    begin
                ap_block_pp0_stage22_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0)));
    end process;


    ap_block_pp0_stage22_11001_ignoreCallOp656_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_io, ap_block_state23_pp0_stage22_iter0_ignore_call289)
    begin
                ap_block_pp0_stage22_11001_ignoreCallOp656 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0_ignore_call289)));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state23_pp0_stage22_iter0, ap_block_state23_io)
    begin
                ap_block_pp0_stage22_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state23_io) or (ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0)));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;


    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0));
    end process;


    ap_block_pp0_stage2_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state28_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage2_iter1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state28_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage2_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state3_io, ap_block_state28_pp0_stage2_iter1)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state28_pp0_stage2_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state29_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage3_iter1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state29_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage3_iter1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state29_pp0_stage3_iter1)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state29_pp0_stage3_iter1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage4_iter1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage4_iter1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state30_pp0_stage4_iter1)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state30_pp0_stage4_iter1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state31_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage5_iter1));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state31_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage5_iter1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state31_pp0_stage5_iter1)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state31_pp0_stage5_iter1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage6_iter1));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage6_iter1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state32_pp0_stage6_iter1)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state32_pp0_stage6_iter1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state33_pp0_stage7_iter1)
    begin
                ap_block_pp0_stage7_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage7_iter1));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state8_io, ap_block_state33_pp0_stage7_iter1)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage7_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state8_io, ap_block_state33_pp0_stage7_iter1)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage7_iter1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage8_iter1)
    begin
                ap_block_pp0_stage8_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage8_iter1));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage8_iter1)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage8_iter1));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state34_pp0_stage8_iter1)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state34_pp0_stage8_iter1));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_00001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage9_iter1)
    begin
                ap_block_pp0_stage9_00001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state35_pp0_stage9_iter1));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage9_iter1)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state35_pp0_stage9_iter1));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state35_pp0_stage9_iter1)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state35_pp0_stage9_iter1));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln31_reg_1627)
    begin
                ap_block_state13_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln31_reg_1627 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state14_pp0_stage13_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state15_pp0_stage14_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state16_pp0_stage15_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state17_pp0_stage16_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state18_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln31_reg_1627)
    begin
                ap_block_state18_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln31_reg_1627 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state18_pp0_stage17_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state18_pp0_stage17_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state18_pp0_stage17_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage18_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state19_pp0_stage18_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage18_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state19_pp0_stage18_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state20_pp0_stage19_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state20_pp0_stage19_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state20_pp0_stage19_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state20_pp0_stage19_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state21_pp0_stage20_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state21_pp0_stage20_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state21_pp0_stage20_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state21_pp0_stage20_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage21_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state22_pp0_stage21_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage21_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state22_pp0_stage21_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state23_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln31_reg_1627)
    begin
                ap_block_state23_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln31_reg_1627 = ap_const_lv1_0));
    end process;


    ap_block_state23_pp0_stage22_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state23_pp0_stage22_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state23_pp0_stage22_iter0_ignore_call289_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state23_pp0_stage22_iter0_ignore_call289 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state24_pp0_stage23_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state24_pp0_stage23_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state25_pp0_stage24_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state25_pp0_stage24_iter0 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state26_pp0_stage0_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627)
    begin
                ap_block_state26_pp0_stage0_iter1 <= ((icmp_ln31_reg_1627 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state27_pp0_stage1_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state27_pp0_stage1_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state28_pp0_stage2_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state28_pp0_stage2_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state29_pp0_stage3_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state29_pp0_stage3_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state30_pp0_stage4_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state30_pp0_stage4_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state31_pp0_stage5_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state31_pp0_stage5_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state32_pp0_stage6_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state32_pp0_stage6_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state33_pp0_stage7_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state33_pp0_stage7_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state34_pp0_stage8_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state34_pp0_stage8_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state35_pp0_stage9_iter1_assign_proc : process(m_axi_gmem_RVALID, icmp_ln31_reg_1627_pp0_iter1_reg)
    begin
                ap_block_state35_pp0_stage9_iter1 <= ((icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln31_reg_1627)
    begin
                ap_block_state3_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln31_reg_1627 = ap_const_lv1_0));
    end process;


    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln31_reg_1627)
    begin
                ap_block_state8_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln31_reg_1627 = ap_const_lv1_0));
    end process;


    ap_condition_2525_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln31_reg_1627, ap_block_pp0_stage0)
    begin
                ap_condition_2525 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln31_reg_1627 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage24_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, icmp_ln31_reg_1627, ap_block_pp0_stage24_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone) and (icmp_ln31_reg_1627 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage24 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage22_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage22, icmp_ln31_reg_1627_pp0_iter3_reg, ap_block_pp0_stage22_subdone)
    begin
        if (((icmp_ln31_reg_1627_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_subdone))) then 
            ap_condition_exit_pp0_iter3_stage22 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage24;

    ap_phi_mux_first_iter_0_phi_fu_491_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_condition_2525)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_2525)) then 
                ap_phi_mux_first_iter_0_phi_fu_491_p4 <= ap_const_lv1_0;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_first_iter_0_phi_fu_491_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_first_iter_0_phi_fu_491_p4 <= ap_const_lv1_0;
            end if;
        else 
            ap_phi_mux_first_iter_0_phi_fu_491_p4 <= ap_const_lv1_0;
        end if; 
    end process;


    ap_phi_mux_first_iter_1_phi_fu_481_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, or_ln32_reg_1646, ap_loop_init, ap_condition_2525)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_2525)) then 
                ap_phi_mux_first_iter_1_phi_fu_481_p4 <= or_ln32_reg_1646;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_first_iter_1_phi_fu_481_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_first_iter_1_phi_fu_481_p4 <= or_ln32_reg_1646;
            end if;
        else 
            ap_phi_mux_first_iter_1_phi_fu_481_p4 <= or_ln32_reg_1646;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_170)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_170;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten18_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten18_fu_174)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten18_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten18_load <= indvar_flatten18_fu_174;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_166)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_166;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_162)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_162;
        end if; 
    end process;


    ap_sig_allocacmp_k_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, k_fu_158)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_k_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_k_load <= k_fu_158;
        end if; 
    end process;

    bitcast_ln39_10_fu_1397_p1 <= Layer1_Weights_CPU_load_11_reg_1857;
    bitcast_ln39_11_fu_1431_p1 <= Layer1_Weights_CPU_load_12_reg_1872;
    bitcast_ln39_12_fu_1440_p1 <= Layer1_Weights_CPU_load_13_reg_1877;
    bitcast_ln39_13_fu_1449_p1 <= Layer1_Weights_CPU_load_14_reg_1892;
    bitcast_ln39_14_fu_1458_p1 <= Layer1_Weights_CPU_load_15_reg_1897;
    bitcast_ln39_15_fu_1462_p1 <= Layer1_Weights_CPU_load_16_reg_1912;
    bitcast_ln39_16_fu_1476_p1 <= Layer1_Weights_CPU_load_17_reg_1917;
    bitcast_ln39_17_fu_1485_p1 <= Layer1_Weights_CPU_load_18_reg_1958;
    bitcast_ln39_18_fu_1494_p1 <= Layer1_Weights_CPU_load_19_reg_1963;
    bitcast_ln39_19_fu_1503_p1 <= Layer1_Weights_CPU_load_20_reg_1988;
    bitcast_ln39_1_fu_1241_p1 <= Layer1_Weights_CPU_load_2_reg_1756;
    bitcast_ln39_20_fu_1507_p1 <= Layer1_Weights_CPU_load_21_reg_1993;
    bitcast_ln39_21_fu_1521_p1 <= Layer1_Weights_CPU_load_22_reg_2028;
    bitcast_ln39_22_fu_1530_p1 <= Layer1_Weights_CPU_load_23_reg_2033;
    bitcast_ln39_23_fu_1539_p1 <= Layer1_Weights_CPU_load_24_reg_2053;
    bitcast_ln39_24_fu_1548_p1 <= Layer1_Weights_CPU_load_25_reg_2058;
    bitcast_ln39_2_fu_1278_p1 <= Layer1_Weights_CPU_load_3_reg_1761;
    bitcast_ln39_3_fu_1287_p1 <= Layer1_Weights_CPU_load_4_reg_1781;
    bitcast_ln39_4_fu_1296_p1 <= Layer1_Weights_CPU_load_5_reg_1786;
    bitcast_ln39_5_fu_1316_p1 <= Layer1_Weights_CPU_load_6_reg_1806;
    bitcast_ln39_6_fu_1350_p1 <= Layer1_Weights_CPU_load_7_reg_1811;
    bitcast_ln39_7_fu_1359_p1 <= Layer1_Weights_CPU_load_8_reg_1832;
    bitcast_ln39_8_fu_1368_p1 <= Layer1_Weights_CPU_load_9_reg_1837;
    bitcast_ln39_9_fu_1377_p1 <= Layer1_Weights_CPU_load_10_reg_1852;
    bitcast_ln39_fu_1187_p1 <= Layer1_Weights_CPU_load_1_reg_1741;
    bitcast_ln40_10_fu_1401_p1 <= reg_532;
    bitcast_ln40_11_fu_1426_p1 <= reg_532;
    bitcast_ln40_12_fu_1435_p1 <= reg_532;
    bitcast_ln40_13_fu_1444_p1 <= reg_532;
    bitcast_ln40_14_fu_1453_p1 <= reg_532;
    bitcast_ln40_15_fu_1466_p1 <= reg_536;
    bitcast_ln40_16_fu_1471_p1 <= reg_536;
    bitcast_ln40_17_fu_1480_p1 <= reg_536;
    bitcast_ln40_18_fu_1489_p1 <= reg_536;
    bitcast_ln40_19_fu_1498_p1 <= reg_536;
    bitcast_ln40_1_fu_1236_p1 <= reg_514;
    bitcast_ln40_20_fu_1511_p1 <= reg_540;
    bitcast_ln40_21_fu_1516_p1 <= reg_540;
    bitcast_ln40_22_fu_1525_p1 <= reg_540;
    bitcast_ln40_23_fu_1534_p1 <= reg_540;
    bitcast_ln40_24_fu_1543_p1 <= reg_540;
    bitcast_ln40_2_fu_1273_p1 <= reg_514;
    bitcast_ln40_3_fu_1282_p1 <= reg_514;
    bitcast_ln40_4_fu_1291_p1 <= reg_514;
    bitcast_ln40_5_fu_1320_p1 <= reg_523;
    bitcast_ln40_6_fu_1345_p1 <= reg_523;
    bitcast_ln40_7_fu_1354_p1 <= reg_523;
    bitcast_ln40_8_fu_1363_p1 <= reg_523;
    bitcast_ln40_9_fu_1372_p1 <= reg_523;
    bitcast_ln40_fu_1191_p1 <= reg_514;
    empty_205_fu_1099_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_15));
    empty_206_fu_789_p2 <= (empty_247_fu_778_p2 or ap_const_lv8_1);
    empty_207_fu_861_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_2));
    empty_208_fu_871_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_3));
    empty_209_fu_884_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_4));
    empty_210_fu_894_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_5));
    empty_211_fu_904_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_6));
    empty_212_fu_914_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_7));
    empty_213_fu_924_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_8));
    empty_214_fu_934_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_9));
    empty_215_fu_944_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_A));
    empty_216_fu_954_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_B));
    empty_217_fu_1019_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_C));
    empty_218_fu_1029_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_D));
    empty_219_fu_1039_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_E));
    empty_220_fu_1049_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_F));
    empty_221_fu_1059_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_10));
    empty_222_fu_1069_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_11));
    empty_223_fu_1079_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_12));
    empty_224_fu_1089_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_13));
    empty_225_fu_1109_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_14));
    empty_226_fu_1216_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_16));
    empty_227_fu_1226_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_17));
    empty_228_fu_1253_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_18));
    empty_229_fu_1263_p2 <= std_logic_vector(unsigned(empty_247_reg_1670) + unsigned(ap_const_lv8_19));
    empty_230_fu_724_p0 <= empty_230_fu_724_p00(4 - 1 downto 0);
    empty_230_fu_724_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_fu_708_p3),10));
    empty_230_fu_724_p1 <= ap_const_lv10_3A(7 - 1 downto 0);
    empty_232_fu_1135_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_1131_p1) + unsigned(empty_230_reg_1661));
    empty_233_fu_1392_p2 <= std_logic_vector(unsigned(p_cast224_fu_1388_p1) + unsigned(Layer1_Neurons_CPU));
    empty_234_fu_1150_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_1146_p1) + unsigned(empty_230_reg_1661));
    empty_235_fu_1311_p2 <= std_logic_vector(unsigned(p_cast225_fu_1307_p1) + unsigned(Layer1_Neurons_CPU));
    empty_236_fu_1165_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_1161_p1) + unsigned(empty_230_reg_1661));
    empty_237_fu_1182_p2 <= std_logic_vector(unsigned(p_cast226_fu_1178_p1) + unsigned(Layer1_Neurons_CPU));
    empty_238_fu_977_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_973_p1) + unsigned(empty_230_reg_1661));
    empty_239_fu_994_p2 <= std_logic_vector(unsigned(p_cast227_fu_990_p1) + unsigned(Layer1_Neurons_CPU));
    empty_240_fu_814_p2 <= std_logic_vector(unsigned(p_cast23_fu_810_p1) + unsigned(empty_230_reg_1661));
    empty_241_fu_831_p2 <= std_logic_vector(unsigned(p_cast228_fu_827_p1) + unsigned(Layer1_Neurons_CPU));
    empty_247_fu_778_p0 <= empty_247_fu_778_p00(3 - 1 downto 0);
    empty_247_fu_778_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_reg_1631),8));
    empty_247_fu_778_p1 <= ap_const_lv8_1A(6 - 1 downto 0);

    gmem_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_ARREADY, icmp_ln31_reg_1627, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln31_reg_1627 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage24, m_axi_gmem_RVALID, icmp_ln31_reg_1627, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln31_reg_1627_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) 
    and (ap_const_boolean_0 = ap_block_pp0_stage24) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) 
    or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) 
    and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln31_reg_1627 = ap_const_lv1_0)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_SIGMOID_fu_171_p_ce <= grp_SIGMOID_fu_499_ap_ce;
    grp_SIGMOID_fu_171_p_din1 <= reg_554;
    grp_SIGMOID_fu_171_p_start <= grp_SIGMOID_fu_499_ap_start_reg;

    grp_SIGMOID_fu_499_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage13_11001_ignoreCallOp646, ap_block_pp0_stage14_11001_ignoreCallOp647, ap_block_pp0_stage15_11001_ignoreCallOp648, ap_block_pp0_stage16_11001_ignoreCallOp649, ap_block_pp0_stage17_11001_ignoreCallOp650, ap_block_pp0_stage18_11001_ignoreCallOp651, ap_block_pp0_stage19_11001_ignoreCallOp652, ap_block_pp0_stage20_11001_ignoreCallOp653, ap_block_pp0_stage21_11001_ignoreCallOp654, ap_block_pp0_stage22_11001_ignoreCallOp656)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001_ignoreCallOp656)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001_ignoreCallOp654)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001_ignoreCallOp653)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001_ignoreCallOp652)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001_ignoreCallOp651)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001_ignoreCallOp650)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001_ignoreCallOp649)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001_ignoreCallOp648)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001_ignoreCallOp647)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001_ignoreCallOp646)))) then 
            grp_SIGMOID_fu_499_ap_ce <= ap_const_logic_1;
        else 
            grp_SIGMOID_fu_499_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_SIGMOID_fu_499_ap_ready <= grp_SIGMOID_fu_171_p_ready;

    grp_fu_1561_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_1561_ce <= ap_const_logic_1;
        else 
            grp_fu_1561_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1561_p0 <= grp_fu_1561_p00(3 - 1 downto 0);
    grp_fu_1561_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_fu_656_p3),10));
    grp_fu_1561_p1 <= ap_const_lv10_A9(8 - 1 downto 0);
    grp_fu_1561_p2 <= grp_fu_1561_p20(4 - 1 downto 0);
    grp_fu_1561_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_1_reg_1640),10));

    grp_fu_1569_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage3_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_1569_ce <= ap_const_logic_1;
        else 
            grp_fu_1569_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1569_p0 <= grp_fu_1569_p00(4 - 1 downto 0);
    grp_fu_1569_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_reg_1651),8));
    grp_fu_1569_p1 <= ap_const_lv8_D(4 - 1 downto 0);
    grp_fu_176_p_ce <= grp_fu_506_ce;
    grp_fu_176_p_din0 <= grp_fu_506_p0;
    grp_fu_176_p_din1 <= grp_fu_506_p1;
    grp_fu_176_p_opcode <= ap_const_lv2_0;
    grp_fu_180_p_ce <= grp_fu_510_ce;
    grp_fu_180_p_din0 <= grp_fu_510_p0;
    grp_fu_180_p_din1 <= grp_fu_510_p1;

    grp_fu_506_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) 
    and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_506_ce <= ap_const_logic_1;
        else 
            grp_fu_506_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_506_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, reg_527, reg_544, reg_549, reg_554, somme_26_fu_1248_p1)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)))) then 
            grp_fu_506_p0 <= reg_554;
        elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)))) then 
            grp_fu_506_p0 <= reg_549;
        elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16)))) then 
            grp_fu_506_p0 <= reg_544;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)))) then 
            grp_fu_506_p0 <= reg_527;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_506_p0 <= somme_26_fu_1248_p1;
        else 
            grp_fu_506_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_506_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, reg_518, mul27_s_reg_2018, mul27_5_reg_2043, mul27_6_reg_2068, mul27_1_reg_2099, mul27_1_1_reg_2114, mul27_1_2_reg_2129, mul27_1_3_reg_2144, mul27_1_4_reg_2154_pp0_iter1_reg, mul27_2_reg_2180_pp0_iter1_reg, mul27_2_1_reg_2195_pp0_iter1_reg, mul27_2_2_reg_2210_pp0_iter1_reg, mul27_2_3_reg_2225_pp0_iter2_reg, mul27_2_4_reg_2235_pp0_iter2_reg, mul27_3_reg_2255_pp0_iter2_reg, mul27_3_1_reg_2270_pp0_iter2_reg, mul27_3_2_reg_2285_pp0_iter3_reg, mul27_3_3_reg_2300_pp0_iter3_reg, mul27_3_4_reg_2310_pp0_iter3_reg, mul27_4_reg_2330_pp0_iter3_reg, mul27_4_1_reg_2345_pp0_iter3_reg, mul27_4_2_reg_2360_pp0_iter3_reg, mul27_4_3_reg_2375_pp0_iter3_reg, mul27_4_4_reg_2385_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_506_p1 <= mul27_4_4_reg_2385_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_506_p1 <= mul27_4_3_reg_2375_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_506_p1 <= mul27_4_2_reg_2360_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_506_p1 <= mul27_4_1_reg_2345_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_506_p1 <= mul27_4_reg_2330_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_506_p1 <= mul27_3_4_reg_2310_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_506_p1 <= mul27_3_3_reg_2300_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_506_p1 <= mul27_3_2_reg_2285_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_506_p1 <= mul27_3_1_reg_2270_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_506_p1 <= mul27_3_reg_2255_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_506_p1 <= mul27_2_4_reg_2235_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_506_p1 <= mul27_2_3_reg_2225_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_506_p1 <= mul27_2_2_reg_2210_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_506_p1 <= mul27_2_1_reg_2195_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_506_p1 <= mul27_2_reg_2180_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_506_p1 <= mul27_1_4_reg_2154_pp0_iter1_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_506_p1 <= mul27_1_3_reg_2144;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_506_p1 <= mul27_1_2_reg_2129;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_506_p1 <= mul27_1_1_reg_2114;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_506_p1 <= mul27_1_reg_2099;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_506_p1 <= mul27_6_reg_2068;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_506_p1 <= mul27_5_reg_2043;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_506_p1 <= mul27_s_reg_2018;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)))) then 
            grp_fu_506_p1 <= reg_518;
        else 
            grp_fu_506_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_510_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) 
    and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_510_ce <= ap_const_logic_1;
        else 
            grp_fu_510_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_510_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, bitcast_ln39_fu_1187_p1, bitcast_ln39_1_fu_1241_p1, bitcast_ln39_2_fu_1278_p1, bitcast_ln39_3_fu_1287_p1, bitcast_ln39_4_fu_1296_p1, bitcast_ln39_5_fu_1316_p1, bitcast_ln39_6_fu_1350_p1, bitcast_ln39_7_fu_1359_p1, bitcast_ln39_8_fu_1368_p1, bitcast_ln39_9_fu_1377_p1, bitcast_ln39_10_fu_1397_p1, bitcast_ln39_11_fu_1431_p1, bitcast_ln39_12_fu_1440_p1, bitcast_ln39_13_fu_1449_p1, bitcast_ln39_14_fu_1458_p1, bitcast_ln39_15_fu_1462_p1, bitcast_ln39_16_fu_1476_p1, bitcast_ln39_17_fu_1485_p1, bitcast_ln39_18_fu_1494_p1, bitcast_ln39_19_fu_1503_p1, bitcast_ln39_20_fu_1507_p1, bitcast_ln39_21_fu_1521_p1, bitcast_ln39_22_fu_1530_p1, bitcast_ln39_23_fu_1539_p1, bitcast_ln39_24_fu_1548_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_510_p0 <= bitcast_ln39_24_fu_1548_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_510_p0 <= bitcast_ln39_23_fu_1539_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_510_p0 <= bitcast_ln39_22_fu_1530_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_510_p0 <= bitcast_ln39_21_fu_1521_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_510_p0 <= bitcast_ln39_20_fu_1507_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_510_p0 <= bitcast_ln39_19_fu_1503_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_510_p0 <= bitcast_ln39_18_fu_1494_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_510_p0 <= bitcast_ln39_17_fu_1485_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_510_p0 <= bitcast_ln39_16_fu_1476_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_510_p0 <= bitcast_ln39_15_fu_1462_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_510_p0 <= bitcast_ln39_14_fu_1458_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_510_p0 <= bitcast_ln39_13_fu_1449_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_510_p0 <= bitcast_ln39_12_fu_1440_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_510_p0 <= bitcast_ln39_11_fu_1431_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_510_p0 <= bitcast_ln39_10_fu_1397_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_510_p0 <= bitcast_ln39_9_fu_1377_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_510_p0 <= bitcast_ln39_8_fu_1368_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_510_p0 <= bitcast_ln39_7_fu_1359_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_510_p0 <= bitcast_ln39_6_fu_1350_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_510_p0 <= bitcast_ln39_5_fu_1316_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_510_p0 <= bitcast_ln39_4_fu_1296_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_510_p0 <= bitcast_ln39_3_fu_1287_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_510_p0 <= bitcast_ln39_2_fu_1278_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_510_p0 <= bitcast_ln39_1_fu_1241_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_510_p0 <= bitcast_ln39_fu_1187_p1;
        else 
            grp_fu_510_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_510_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, bitcast_ln40_fu_1191_p1, bitcast_ln40_1_fu_1236_p1, bitcast_ln40_2_fu_1273_p1, bitcast_ln40_3_fu_1282_p1, bitcast_ln40_4_fu_1291_p1, bitcast_ln40_5_fu_1320_p1, bitcast_ln40_6_fu_1345_p1, bitcast_ln40_7_fu_1354_p1, bitcast_ln40_8_fu_1363_p1, bitcast_ln40_9_fu_1372_p1, bitcast_ln40_10_fu_1401_p1, bitcast_ln40_11_fu_1426_p1, bitcast_ln40_12_fu_1435_p1, bitcast_ln40_13_fu_1444_p1, bitcast_ln40_14_fu_1453_p1, bitcast_ln40_15_fu_1466_p1, bitcast_ln40_16_fu_1471_p1, bitcast_ln40_17_fu_1480_p1, bitcast_ln40_18_fu_1489_p1, bitcast_ln40_19_fu_1498_p1, bitcast_ln40_20_fu_1511_p1, bitcast_ln40_21_fu_1516_p1, bitcast_ln40_22_fu_1525_p1, bitcast_ln40_23_fu_1534_p1, bitcast_ln40_24_fu_1543_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_510_p1 <= bitcast_ln40_24_fu_1543_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_510_p1 <= bitcast_ln40_23_fu_1534_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_510_p1 <= bitcast_ln40_22_fu_1525_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_510_p1 <= bitcast_ln40_21_fu_1516_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_510_p1 <= bitcast_ln40_20_fu_1511_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_510_p1 <= bitcast_ln40_19_fu_1498_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_510_p1 <= bitcast_ln40_18_fu_1489_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_510_p1 <= bitcast_ln40_17_fu_1480_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_510_p1 <= bitcast_ln40_16_fu_1471_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_510_p1 <= bitcast_ln40_15_fu_1466_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_510_p1 <= bitcast_ln40_14_fu_1453_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_510_p1 <= bitcast_ln40_13_fu_1444_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
            grp_fu_510_p1 <= bitcast_ln40_12_fu_1435_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
            grp_fu_510_p1 <= bitcast_ln40_11_fu_1426_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_510_p1 <= bitcast_ln40_10_fu_1401_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_510_p1 <= bitcast_ln40_9_fu_1372_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_510_p1 <= bitcast_ln40_8_fu_1363_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_510_p1 <= bitcast_ln40_7_fu_1354_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_510_p1 <= bitcast_ln40_6_fu_1345_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_510_p1 <= bitcast_ln40_5_fu_1320_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_510_p1 <= bitcast_ln40_4_fu_1291_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_510_p1 <= bitcast_ln40_3_fu_1282_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_510_p1 <= bitcast_ln40_2_fu_1273_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_510_p1 <= bitcast_ln40_1_fu_1236_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_510_p1 <= bitcast_ln40_fu_1191_p1;
        else 
            grp_fu_510_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln31_fu_591_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten18_load = ap_const_lv10_3F6) else "0";
    icmp_ln32_fu_612_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_A9) else "0";
    icmp_ln33_fu_638_p2 <= "1" when (ap_sig_allocacmp_k_load = ap_const_lv4_D) else "0";

    m_axi_gmem_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln31_reg_1627, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage12_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage2_11001, gmem_addr_reg_1720, gmem_addr_1_reg_1826, gmem_addr_2_reg_1952, gmem_addr_3_reg_2088, gmem_addr_4_reg_2169)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln31_reg_1627 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_4_reg_2169;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_3_reg_2088;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_2_reg_1952;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_1_reg_1826;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_reg_1720;
            else 
                m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_5;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln31_reg_1627, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage12_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage24, icmp_ln31_reg_1627, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage1, icmp_ln31_reg_1627_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 
    = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln31_reg_1627_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) 
    and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln31_reg_1627 
    = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln31_reg_1627 = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    or_ln28_1_fu_670_p2 <= (or_ln28_fu_626_p2 or and_ln28_fu_644_p2);
    or_ln28_2_fu_676_p2 <= (icmp_ln32_fu_612_p2 or and_ln28_fu_644_p2);
    or_ln28_fu_626_p2 <= (icmp_ln32_fu_612_p2 or ap_phi_mux_first_iter_0_phi_fu_491_p4);
    or_ln32_fu_702_p2 <= (icmp_ln32_fu_612_p2 or and_ln32_fu_696_p2);
    p_cast16_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_1713),8));
    p_cast18_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_1713),7));
    p_cast21_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_1713),6));
    p_cast224_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1381_p3),64));
    p_cast225_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1300_p3),64));
    p_cast226_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1170_p3),64));
    p_cast227_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_982_p3),64));
    p_cast228_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_819_p3),64));
    p_cast23_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_803_p3),10));
    p_cast46_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_247_fu_778_p2),64));
    p_cast47_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_205_fu_1099_p2),64));
    p_cast48_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_206_fu_789_p2),64));
    p_cast49_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_207_fu_861_p2),64));
    p_cast50_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_208_fu_871_p2),64));
    p_cast51_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_209_fu_884_p2),64));
    p_cast52_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_210_fu_894_p2),64));
    p_cast53_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_211_fu_904_p2),64));
    p_cast54_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_212_fu_914_p2),64));
    p_cast55_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_213_fu_924_p2),64));
    p_cast56_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_214_fu_934_p2),64));
    p_cast57_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_215_fu_944_p2),64));
    p_cast58_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_216_fu_954_p2),64));
    p_cast59_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_217_fu_1019_p2),64));
    p_cast60_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_218_fu_1029_p2),64));
    p_cast61_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_219_fu_1039_p2),64));
    p_cast62_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_220_fu_1049_p2),64));
    p_cast63_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_221_fu_1059_p2),64));
    p_cast64_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_222_fu_1069_p2),64));
    p_cast65_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_223_fu_1079_p2),64));
    p_cast66_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_224_fu_1089_p2),64));
    p_cast67_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_225_fu_1109_p2),64));
    p_cast68_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_226_fu_1216_p2),64));
    p_cast69_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_227_fu_1226_p2),64));
    p_cast70_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_228_fu_1253_p2),64));
    select_ln28_1_fu_682_p3 <= 
        ap_const_lv4_0 when (or_ln28_2_fu_676_p2(0) = '1') else 
        ap_sig_allocacmp_k_load;
    select_ln28_fu_618_p3 <= 
        ap_const_lv4_0 when (icmp_ln32_fu_612_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    select_ln31_fu_656_p3 <= 
        add_ln31_1_fu_650_p2 when (icmp_ln32_fu_612_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln32_1_fu_742_p3 <= 
        ap_const_lv8_1 when (icmp_ln32_fu_612_p2(0) = '1') else 
        add_ln32_1_fu_736_p2;
    select_ln32_fu_708_p3 <= 
        add_ln32_fu_664_p2 when (and_ln28_fu_644_p2(0) = '1') else 
        select_ln28_fu_618_p3;
        sext_ln40_1_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln40_1_fu_999_p4),64));

        sext_ln40_2_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln40_2_fu_1196_p4),64));

        sext_ln40_3_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln40_3_fu_1325_p4),64));

        sext_ln40_4_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln40_4_fu_1406_p4),64));

        sext_ln40_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_836_p4),64));

    somme_26_fu_1248_p1 <= Layer1_Weights_CPU_load2_fu_178;
    tmp1_cast_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_1125_p2),10));
    tmp1_fu_1125_p2 <= std_logic_vector(unsigned(p_cast16_fu_1122_p1) + unsigned(ap_const_lv8_74));
    tmp2_cast_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_1140_p2),10));
    tmp2_fu_1140_p2 <= std_logic_vector(unsigned(p_cast18_fu_1119_p1) + unsigned(ap_const_lv7_57));
    tmp3_cast_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1155_p2),10));
    tmp3_fu_1155_p2 <= std_logic_vector(unsigned(p_cast18_fu_1119_p1) + unsigned(ap_const_lv7_3A));
    tmp4_cast_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_967_p2),10));
    tmp4_fu_967_p2 <= std_logic_vector(unsigned(p_cast21_fu_964_p1) + unsigned(ap_const_lv6_1D));
    tmp_4_fu_803_p3 <= (select_ln28_1_reg_1640 & ap_const_lv1_0);
    tmp_5_fu_1381_p3 <= (empty_232_reg_1932 & ap_const_lv2_0);
    tmp_6_fu_1300_p3 <= (empty_234_reg_1937 & ap_const_lv2_0);
    tmp_7_fu_1170_p3 <= (empty_236_fu_1165_p2 & ap_const_lv2_0);
    tmp_8_fu_982_p3 <= (empty_238_fu_977_p2 & ap_const_lv2_0);
    tmp_9_fu_819_p3 <= (empty_240_fu_814_p2 & ap_const_lv2_0);
    trunc_ln1_fu_836_p4 <= empty_241_fu_831_p2(63 downto 2);
    trunc_ln40_1_fu_999_p4 <= empty_239_fu_994_p2(63 downto 2);
    trunc_ln40_2_fu_1196_p4 <= empty_237_fu_1182_p2(63 downto 2);
    trunc_ln40_3_fu_1325_p4 <= empty_235_fu_1311_p2(63 downto 2);
    trunc_ln40_4_fu_1406_p4 <= empty_233_fu_1392_p2(63 downto 2);
    xor_ln28_fu_632_p2 <= (icmp_ln32_fu_612_p2 xor ap_const_lv1_1);
    xor_ln32_fu_690_p2 <= (icmp_ln33_fu_638_p2 xor ap_const_lv1_1);
    zext_ln39_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_229_fu_1263_p2),64));
    zext_ln43_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln43_reg_1791_pp0_iter4_reg),64));
end behav;
