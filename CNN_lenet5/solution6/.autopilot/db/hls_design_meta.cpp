#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("Layer2_Weights_CPU_Addr_A", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("Layer2_Weights_CPU_EN_A", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("Layer2_Weights_CPU_WEN_A", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("Layer2_Weights_CPU_Din_A", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("Layer2_Weights_CPU_Dout_A", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("Layer2_Weights_CPU_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("Layer2_Weights_CPU_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("Layer2_Weights_CPU_Addr_B", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("Layer2_Weights_CPU_EN_B", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("Layer2_Weights_CPU_WEN_B", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("Layer2_Weights_CPU_Din_B", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("Layer2_Weights_CPU_Dout_B", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("Layer2_Weights_CPU_Clk_B", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("Layer2_Weights_CPU_Rst_B", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("s_axi_CTRL_bus_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_bus_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 14, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 14, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "calculateLayer3";
